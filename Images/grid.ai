%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 15.0.0
%%For: (Kinkobal) ()
%%Title: (600.ai)
%%CreationDate: 5/6/2011 6:32 PM
%%Canvassize: 16383
%%BoundingBox: 0 0 0 0
%%HiResBoundingBox: 0 0 0 0
%%DocumentProcessColors:
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 570.5 -384.5 570.5 -384.5
%AI3_TileBox: 12.1201 -770.5801 587.8799 2.58008
%AI3_DocumentPreview: None
%AI5_ArtSize: 1140 768
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -358.4409 8.44092 1.18 1351 937 18 1 0 262 139 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:-106 -780
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
7 Bn
%AI5_BeginGradient: (Fade to Black)
(Fade to Black) 0 2 Bd
[
0.697627
0.675227
0.638575
0.739559
0.137255
0.121569
0.12549
4 %_Br
[
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 50 100 Bs
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 25 0 %_BS
%_0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 2 25 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Green, Yellow, Orange)
(Green, Yellow, Orange) 0 7 Bd
[
<
000102030405060708090A0C0D0E1011121415161718191A1B1C1D1E1F202122232425262728292A
2B2C2D2E2F30313233343435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152
5354555758595A5C5D5E5F616263646667696A6B6C6E6F707273747778797A7C7E7F808283848687
888A8B8C8E8F909294959697999A9B9C9E9FA0A2A3A4A5A6A8A9AAABACADAEB0B1B2B3B4B5B5B6B7
B8B9BABBBCBDBEBEBFC0C1C1C2C3C4C4C5C6C7C7C8C8C9CACACBCBCCCCCDCDCECECECFCFCFD0D0D1
D1D1D2D2D2D2D3D3D3D3D4D4D4D4D5D5D5D5D5D5D5D5D5D6D5D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6
D6D6D6
>
<
BEBEBEBDBDBDBDBCBCBCBBBABAB9B9B8B7B7B6B5B4B4B4B2B2B1B1AFAFAFAEACACABABA9A8A8A7A6
A5A5A4A2A2A1A19F9E9E9D9B9A9A9997969695939291918E8E8D8C8A898888858484838180807F7D
7C7C7B797877777474737270706F6F6C6B6B6A68686767656464636160605F5D5D5C5C5A5A595957
575656555353535250504F4F4D4D4D4C4B4A4A4A484847474646454544434343414140403F3E3E3E
3C3C3C3C3A3A3A3A38383838373636363434343432323232303030302F2E2E2E2D2D2D2C2B2B2B2B
2929292928282828262626262424242422222222202020201F1F1F1F1D1D1D1D1B1B1B1B1A1A1A1A
181818
>
<
FCFCFDFCFCFDFDFEFFFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE
FEFEFEFEFEFCFBFCFBFBFBFAFAFAFAFAFBF9F9FAFAFAF9F9FAFAFAFBF9F9FAFAFAFAF9FAFAFAFAFB
F9F9F9FAFAFAF8F8F8F8F8F9F7F7F7F9F9F9F7F8F8F8F8F9F7F7F7F9F9FAF8F9FAFAFAFCFAFBFBFD
FEFCFCFDFEFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FEFEFE
>
<
00000000000000000000000101010101010101020202020303030404040405050506060708080909
0A0A0B0B0C0D0D0E0E0F1010111212131414151516161717181819191A1B1B1C1C1D1D1D1E1E1F1F
1F202020212122222222232223232323232424232424242424242424242424232323232222222221
21222222212121211F1F1F1F1E1E1E1E1D1D1D1C1B1B1B1B1A1A1A1A191818181717171715151515
1414141412121212111111111010100F0E0E0E0E0D0D0D0D0C0C0C0C0B0B0A0A0909090908080808
07070707060606060505050505050505040404040404040403030303030303030303030302020202
020202
>
<
F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCB
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B
2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403
020100
>
<
656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E6E6E6E6F
6F6F6F70707070717171717272727273737373747474747575757576767676777777777878787879
7979797A7A7A7A7B7B7B7B7C7C7C7C7D7D7D7D7E7E7E7E7F7F7F7F80808080818181818282828283
838383838484848485858585868686868787878788888888898989898A8A8A8A8B8B8B8B8C8C8C8C
8D8D8D8D8E8E8E8E8F8F8F8F90909090919191919292929293939393949494949595959596969696
9797979798989898999999999A9A9A9A9B9B9B9B9C9C9C9C9D9D9D9D9E9E9E9E9F9F9F9FA0A0A0A0
A1A1A1
>
<
22222223232323232324242424242425252525252526262626262627272727272728282828282829
29292929292A2A2A2A2A2A2B2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2D2E2E2E2E2E2E2F2F2F2F2F2F
30303030303031313131313132323232323233333333333334343434343435353535353536363636
363737373737373838383838383939393939393A3A3A3A3A3A3B3B3B3B3B3B3C3C3C3C3C3C3D3D3D
3D3D3D3E3E3E3E3E3E3F3F3F3F3F3F40404040404041414141414242424242424343434343434444
444444444545454545454646464646464747474747474848484848484949494949494A4A4A4A4A4A
4B4B4B
>
4 %_Br
<
04040404040504040404040303030404030303020202020203030303030303030304040303030302
02020303030302020202020202020101010101010001010101010000000000000000000000000000
00000000000000000100000000000000000101010000000000000000000000000000000000010101
00
>
<
1618191B1C1D1F202223252628292A2B2C2E2F313234353738393B3D3E404143454547484A4B4D4E
50515253545657595A5C5D5E5F616263656668696B6D6F707173747677797A7B7D7E808182848687
898B8D8E90919294959698999A9C9D9FA0A1A3A4A5A7A8A9ABACADAEB0B1B3B4B5B6B7B9BABABCBD
BE
>
<
F7F7F7F7F7F8F8F8F8F7F7F7F7F6F7F7F7F6F6F7F7F7F7F7F8F7F8F8F8F8F9F9FAFBFBFBFBFCFCFC
FDFDFEFFFEFDFDFDFCFCFCFCFDFDFDFDFDFDFCFCFBFCFBFCFCFCFCFBFBFBFCFBFBFBFBFCFCFCFCFD
FDFEFDFDFDFDFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFCFCFCFCFBFBFBFBFBFBFAFBFBFBFB
FC
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00
>
<
FFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFB
FBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F6
F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F2F2F2F2
F2
>
<
DEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7
B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A09F9E9D9C9B9A999897969594939291908F8E
8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766
65
>
<
171717171717181818181818181818181819191919191919191919191A1A1A1A1A1A1A1A1A1A1A1B
1B1B1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1E
1E1E1F1F1F1F1F1F1F1F1F1F1F202020202020202020202021212121212121212121212222222222
22
>
4 %_Br
<
D6D6D6D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D1D1D1D1D0D0D0CFCFCECECECECDCDCDCCCBCBCBCB
CACAC9C9C8C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0BFBFBEBEBDBDBCBBBBBABAB9B8B8B7B6B6B5
B5B4B3B2B2B1B0AFAEAEADACABABAAA9A9A8A7A6A5A5A4A3A2A1A19F9E9E9D9C9B9A999897969695
9493929291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7A797877767574737271706F
6E6D6C6B6A6968666564636261605F5E5D5C5B5A5857565554535251504F4E4D4C4B4A4948474645
444241403F3E3D3B3A39373635333231302F2E2D2C2A2928272625242322201F1E1D1C1B1A191716
15141312100F0E0D0C0B0A0907060504
>
<
181818161616161515151513131313121212121111111110101010100E0E0E0F0D0D0D0D0C0C0C0C
0B0B0B0B0A0A0A0A0A09090A0A080909090808080807070708060607070606060606050506060505
05050405050504040505040404050504040405040404040303040402030303020203030202030303
02030303020303030203030302030404030404050504050505040505050505050605050606050606
060506060707060708080708080908080909080809090909090A0A0A0A0B0B0A0B0B0C0B0B0C0C0B
0C0C0D0C0D0D0E0D0D0E0E0F0D0E0E0F0E0E0F0F0E0F10100F101111101111121211121213121213
13121313141314141514151516151616
>
<
FEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFDFDFDFCFCFCFBFCFBFBFBFBFBFAFAFAFAFA
FAFAF9FAFAF9F9F9F9F9F8F8F8F8F8F7
>
<
02020202020202010101010101010101010101010101010101010101010101010101010101010101
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
A1A1A1A2A2A2A2A3A3A3A3A4A4A4A4A5A5A5A5A6A6A6A6A7A7A7A7A7A8A8A8A8A9A9A9A9AAAAAAAA
ABABABABACACACACACADADADADAEAEAEAEAFAFAFAFB0B0B0B0B1B1B1B1B2B2B2B2B2B3B3B3B3B4B4
B4B4B5B5B5B5B6B6B6B6B7B7B7B7B7B8B8B8B8B9B9B9B9BABABABABBBBBBBBBCBCBCBCBDBDBDBDBD
BEBEBEBEBFBFBFBFC0C0C0C0C1C1C1C1C2C2C2C2C2C3C3C3C3C4C4C4C4C5C5C5C5C6C6C6C6C7C7C7
C7C8C8C8C8C8C9C9C9C9CACACACACBCBCBCBCCCCCCCCCDCDCDCDCDCECECECECFCFCFCFD0D0D0D0D1
D1D1D1D2D2D2D2D3D3D3D3D3D4D4D4D4D5D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D8D9D9D9D9DADADA
DADBDBDBDBDCDCDCDCDDDDDDDDDEDEDE
>
<
4B4B4B4A4A4A4A4A4949494949484848484847474747474646464645454545454444444444434343
43434242424242414141414140404040403F3F3F3F3F3E3E3E3E3E3D3D3D3D3D3C3C3C3C3C3B3B3B
3B3A3A3A3A3A39393939393838383838373737373736363636363535353535343434343433333333
3332323232323131313130303030302F2F2F2F2F2E2E2E2E2E2D2D2D2D2D2C2C2C2C2C2B2B2B2B2B
2A2A2A2A2A2929292929282828282827272727262626262625252525252424242424232323232322
22222222212121212120202020201F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1C1C1C1C1B1B1B1B1B1A1A
1A1A1A19191919191818181818171717
>
4 %_Br
<
000102030405060708090A0C0D0E1011121415161718191A1B1C1D1E1F202122232425262728292A
2B2C2D2E2F30313233343435363738393A3B3C3D3E3F404142434445464748494A4B4C4E4F505152
5354555758595A5C5D5E5F616263646667696A6B6C6E6F707273747778797A7C7E7F808283848687
888A8B8C8E8F909294959697999A9B9C9E9FA0A2A3A4A5A6A8A9AAABACADAEB0B1B2B3B4B5B5B6B7
B8B9BABBBCBDBEBEBFC0C1C1C2C3C4C4C5C6C7C7C8C8C9CACACBCBCCCCCDCDCECECECFCFCFD0D0D1
D1D1D2D2D2D2D3D3D3D3D4D4D4D4D5D5D5D5D5D5D5D5D5D6D5D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6
D6D6D6
>
<
BEBEBEBDBDBDBDBCBCBCBBBABAB9B9B8B7B7B6B5B4B4B4B2B2B1B1AFAFAFAEACACABABA9A8A8A7A6
A5A5A4A2A2A1A19F9E9E9D9B9A9A9997969695939291918E8E8D8C8A898888858484838180807F7D
7C7C7B797877777474737270706F6F6C6B6B6A68686767656464636160605F5D5D5C5C5A5A595957
575656555353535250504F4F4D4D4D4C4B4A4A4A484847474646454544434343414140403F3E3E3E
3C3C3C3C3A3A3A3A38383838373636363434343432323232303030302F2E2E2E2D2D2D2C2B2B2B2B
2929292928282828262626262424242422222222202020201F1F1F1F1D1D1D1D1B1B1B1B1A1A1A1A
181818
>
<
FCFCFDFCFCFDFDFEFFFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE
FEFEFEFEFEFCFBFCFBFBFBFAFAFAFAFAFBF9F9FAFAFAF9F9FAFAFAFBF9F9FAFAFAFAF9FAFAFAFAFB
F9F9F9FAFAFAF8F8F8F8F8F9F7F7F7F9F9F9F7F8F8F8F8F9F7F7F7F9F9FAF8F9FAFAFAFCFAFBFBFD
FEFCFCFDFEFFFFFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FEFEFE
>
<
00000000000000000000000101010101010101020202020303030404040405050506060708080909
0A0A0B0B0C0D0D0E0E0F1010111212131414151516161717181819191A1B1B1C1C1D1D1D1E1E1F1F
1F202020212122222222232223232323232424232424242424242424242424232323232222222221
21222222212121211F1F1F1F1E1E1E1E1D1D1D1C1B1B1B1B1A1A1A1A191818181717171715151515
1414141412121212111111111010100F0E0E0E0E0D0D0D0D0C0C0C0C0B0B0A0A0909090908080808
07070707060606060505050505050505040404040404040403030303030303030303030302020202
020202
>
<
F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCB
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B
2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403
020100
>
<
656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E6E6E6E6F
6F6F6F70707070717171717272727273737373747474747575757576767676777777777878787879
7979797A7A7A7A7B7B7B7B7C7C7C7C7D7D7D7D7E7E7E7E7F7F7F7F80808080818181818282828283
838383838484848485858585868686868787878788888888898989898A8A8A8A8B8B8B8B8C8C8C8C
8D8D8D8D8E8E8E8E8F8F8F8F90909090919191919292929293939393949494949595959596969696
9797979798989898999999999A9A9A9A9B9B9B9B9C9C9C9C9D9D9D9D9E9E9E9E9F9F9F9FA0A0A0A0
A1A1A1
>
<
22222223232323232324242424242425252525252526262626262627272727272728282828282829
29292929292A2A2A2A2A2A2B2B2B2B2B2B2C2C2C2C2C2D2D2D2D2D2D2E2E2E2E2E2E2F2F2F2F2F2F
30303030303031313131313132323232323233333333333334343434343435353535353536363636
363737373737373838383838383939393939393A3A3A3A3A3A3B3B3B3B3B3B3C3C3C3C3C3C3D3D3D
3D3D3D3E3E3E3E3E3E3F3F3F3F3F3F40404040404041414141414242424242424343434343434444
444444444545454545454646464646464747474747474848484848484949494949494A4A4A4A4A4A
4B4B4B
>
4 %_Br
<
04040404040504040404040303030404030303020202020203030303030303030304040303030302
02020303030302020202020202020101010101010001010101010000000000000000000000000000
00000000000000000100000000000000000101010000000000000000000000000000000000010101
00
>
<
1618191B1C1D1F202223252628292A2B2C2E2F313234353738393B3D3E404143454547484A4B4D4E
50515253545657595A5C5D5E5F616263656668696B6D6F707173747677797A7B7D7E808182848687
898B8D8E90919294959698999A9C9D9FA0A1A3A4A5A7A8A9ABACADAEB0B1B3B4B5B6B7B9BABABCBD
BE
>
<
F7F7F7F7F7F8F8F8F8F7F7F7F7F6F7F7F7F6F6F7F7F7F7F7F8F7F8F8F8F8F9F9FAFBFBFBFBFCFCFC
FDFDFEFFFEFDFDFDFCFCFCFCFDFDFDFDFDFDFCFCFBFCFBFCFCFCFCFBFBFBFCFBFBFBFBFCFCFCFCFD
FDFEFDFDFDFDFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFDFCFCFCFCFBFBFBFBFBFBFAFBFBFBFB
FC
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00
>
<
FFFFFFFFFFFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFB
FBFBFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F6
F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F2F2F2F2
F2
>
<
DEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7
B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A09F9E9D9C9B9A999897969594939291908F8E
8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766
65
>
<
171717171717181818181818181818181819191919191919191919191A1A1A1A1A1A1A1A1A1A1A1B
1B1B1B1B1B1B1B1B1B1B1C1C1C1C1C1C1C1C1C1C1D1D1D1D1D1D1D1D1D1D1D1E1E1E1E1E1E1E1E1E
1E1E1F1F1F1F1F1F1F1F1F1F1F202020202020202020202021212121212121212121212222222222
22
>
4 %_Br
<
D6D6D6D5D5D5D5D4D4D4D4D3D3D3D3D2D2D2D2D2D1D1D1D1D0D0D0CFCFCECECECECDCDCDCCCBCBCB
CBCBCACAC9C9C8C8C8C7C7C7C6C6C5C5C4C4C3C3C3C2C2C1C1C0BFBFBFBEBEBDBDBCBBBBBBBABAB9
B8B8B8B7B6B6B5B5B5B4B3B2B2B2B1B0AFAEAEAEADACABABABAAA9A9A9A8A7A6A6A5A5A4A4A3A2A1
A1A19F9E9E9E9D9C9C9B9A99999897969696959594939292929191908F8E8E8D8C8C8B8A8A898888
8786868584848382828180807F7E7E7D7C7C7B7A7A7A79797878777676757474737372717170706F
6E6E6D6D6C6B6B6A6A696968666665656464636262616160605F5F5E5D5D5C5C5B5B595A58585757
565655555454535252515150504F4F4F4E4E4D4D4C4C4B4B4A4A4949484847474646464545444442
4241414140403F3F3E3E3E3D3D3B3B3A3A3A39393737373636353535333332323231313130302F2F
2F2E2E2E2D2D2D2C2C2A2A2A29292928282827272726262625252524242424232323222222202020
201F1F1F1E1E1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191917171717161616161515151515
141414141313131313121212121210101010100F0F0F0F0F0F0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C
0C0C0C0A0A0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090907070707070707070707070606
06060606060606060606050505050505050505050505050505050505050504040404040404040404
040404040404040404040404040404040404
>
<
181818161616161515151513131313121212121211111111101010100E0E0E0E0F0D0D0D0D0C0C0C
0C0C0B0B0B0B0A0A0A0A0A0909090A0A080909090908080808070707070806060707070606060606
05050506060505050505040505050504040505050404040405050404040405040404040404030304
04040203030303030202030303020203030303020203030303020203030303020303030303020303
04040403040404050504040405050505040405050505050505050506060505050606060605060606
06060705060606070707060607070808080707080808080909080808090909090808080809090909
0909090909090A0A0A0A0A0A0A0B0B0B0B0A0A0A0B0B0B0B0C0C0B0B0B0B0C0C0C0C0C0B0B0C0C0C
0C0D0D0D0C0C0D0D0D0D0D0E0E0F0D0D0D0D0E0E0E0E0E0F0D0D0D0D0E0E0E0E0E0F0F0D0E0E0E0E
0E0F0F0F0F0F0E0E0E0F0F0F101010101010110F0F10101011111111111111121010111111111111
11121212121211111211111212121212121212131311111212121212121212131313131313131312
12121212131313131313131313131414141414131313131313141414141414141414141414151515
15151516161414141414151515151515151515151515151515151516161616161616161616161717
17171515151515151515161616161616161616161616161616161616161616161616161616161616
161616161616161616161616161616161616
>
<
FEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFEFEFEFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFBFCFCFCFCFCFBFBFB
FBFBFBFBFBFBFBFBFAFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFA
FAFAFAFAF9F9F9F9F9F9FAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9
F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7
F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7
>
<
02020202020202010101010101010101010101010101010101010101010101010101010101010101
01010000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000
>
<
000102030405060708090A0B0C0D0E0F10111213141516161718191A1B1C1D1E1F20212223242526
262728292A2B2C2D2E2F3030313233343536373838393A3B3C3D3E3F3F4041424344454546474849
4A4A4B4C4D4E4F4F5051525353545556575858595A5B5C5C5D5E5F5F606162636364656666676869
696A6B6C6C6D6E6F6F707172727374757576777778797A7A7B7C7C7D7E7F7F808181828383848585
8687878889898A8B8B8C8D8D8E8F8F9091919293939495959696979898999A9A9B9B9C9D9D9E9E9F
A0A0A1A1A2A3A3A4A4A5A5A6A7A7A8A8A9A9AAABABACACADADAEAEAFB0B0B1B1B2B2B3B3B4B4B5B5
B6B6B7B7B8B8B9BABABBBBBCBCBDBDBDBEBEBFBFC0C0C1C1C2C2C3C3C4C4C5C5C6C6C6C7C7C8C8C9
C9CACACACBCBCCCCCDCDCDCECECFCFD0D0D0D1D1D2D2D2D3D3D4D4D4D5D5D6D6D6D7D7D7D8D8D9D9
D9DADADADBDBDBDCDCDDDDDDDEDEDEDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6
E6E7E7E7E8E8E8E8E9E9E9EAEAEAEAEBEBEBEBECECECECEDEDEDEDEEEEEEEEEFEFEFEFF0F0F0F0F0
F1F1F1F1F2F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5F5F6F6F6F6F6F7F7F7F7F7F7F7F8F8F8
F8F8F8F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFDFD
FDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
<
A1A1A1A2A2A2A2A3A3A3A3A4A4A4A4A5A5A5A5A5A6A6A6A6A7A7A7A7A8A8A8A8A8A9A9A9A9AAAAAA
AAAAABABABABACACACACACADADADADADAEAEAEAEAEAFAFAFAFB0B0B0B0B0B1B1B1B1B1B2B2B2B2B2
B3B3B3B3B3B4B4B4B4B4B5B5B5B5B5B6B6B6B6B6B7B7B7B7B7B7B8B8B8B8B8B9B9B9B9B9B9BABABA
BABABBBBBBBBBBBBBCBCBCBCBCBDBDBDBDBDBDBEBEBEBEBEBEBFBFBFBFBFBFC0C0C0C0C0C0C1C1C1
C1C1C1C2C2C2C2C2C2C3C3C3C3C3C3C3C4C4C4C4C4C4C5C5C5C5C5C5C5C6C6C6C6C6C6C6C7C7C7C7
C7C7C7C8C8C8C8C8C8C8C9C9C9C9C9C9C9CACACACACACACACACBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CDCDCDCDCDCDCDCDCDCECECECECECECECECFCFCFCFCFCFCFCFCFD0D0D0D0D0D0D0D0D0D1D1D1D1D1
D1D1D1D1D2D2D2D2D2D2D2D2D2D2D3D3D3D3D3D3D3D3D3D3D4D4D4D4D4D4D4D4D4D4D4D5D5D5D5D5
D5D5D5D5D5D5D6D6D6D6D6D6D6D6D6D6D6D6D6D7D7D7D7D7D7D7D7D7D7D7D7D7D8D8D8D8D8D8D8D8
D8D8D8D8D8D8D9D9D9D9D9D9D9D9D9D9D9D9D9D9D9DADADADADADADADADADADADADADADADADADADB
DBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDBDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDC
DCDCDCDCDCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD
DDDDDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDE
DEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDE
>
<
4B4B4B4A4A4A4A4A4949494949484848484847474747474646464646454545454544444444444443
43434343424242424241414141414140404040403F3F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3C3C
3C3C3C3B3B3B3B3B3B3A3A3A3A3A3A39393939393939383838383838373737373737363636363636
35353535353535343434343434343333333333333232323232323231313131313131303030303030
30302F2F2F2F2F2F2F2E2E2E2E2E2E2E2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B
2A2A2A2A2A2A2A2A2929292929292929292828282828282828282727272727272727272626262626
26262626252525252525252525252424242424242424242423232323232323232323232222222222
2222222222222121212121212121212121212020202020202020202020201F1F1F1F1F1F1F1F1F1F
1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C
1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A
1A1A1A1A1A1A1A1A1A1A191919191919191919191919191919191919191919191919191919181818
18181818181818181818181818181818181818181818181818181818181818181818181818181717
17171717171717171717171717171717171717171717171717171717171717171717171717171717
171717171717171717171717171717171717
>
4 %_Br
[
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 100 %_BS
%_0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 100 Bs
0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 80.117 %_BS
%_0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 80.117 Bs
0.017365 0.087495 0.969451 0.000031 1 0.870588 0.090196 2 50 64 %_BS
%_0.017365 0.087495 0.969451 0.000031 1 0.870588 0.090196 2 50 64 Bs
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 47 %_BS
%_0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 50 47 Bs
0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 30 %_BS
%_0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 2 50 30 Bs
0.017365 0.087495 0.969451 0.000031 1 0.870588 0.090196 2 50 15 %_BS
%_0.017365 0.087495 0.969451 0.000031 1 0.870588 0.090196 2 50 15 Bs
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 28 0 %_BS
%_0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 2 28 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple Radial)
(Purple Radial) 1 2 Bd
[
<
0000000102020303030404040506050606070808090A0A0B0C0B0C0C0D0E0E0F1010111112131313
13141515161617181819191A1A1B1C1C1D1D1E1E1F20202122232324252526262727282829292A2B
2B2C2C2D2D2E2E2F2F3030313132323333353436353737383839393A3A3B3B3C3C3D3E3F3F414141
434344444545464647474748484A4A4B4B4C4C4C4E4E4F4F50505051515252525353545454565657
575758585A5A5A5B5B5D5D5D5E5E5E5F5F6160606262626363636565656666666767676969696A6A
6A6B6C6C6D6D6D6E6E6E707070707171717373737474747476767676787878797979797B7B7B7B7C
7C7D7C7E7E7E7E808080808181818182838383838485858585868686868688888888888989898A8A
8B8B8B8B8B8B8D8D8D8D8D8D8E8E8E8E8E8E8E909090909090909191919191919191939393939393
93939394949494949494959595949496969696969696969696969696969696989898989898989898
98989898989898989898989898
>
<
00000001020303040506070809090B0B0D0E0F111213131314161618191A1B1C1C1E1F201F202122
24242527282929292B2C2D2E2F30303132343536373738393B3C3D3D3D3F40414242434445474647
48494B4A4C4D4E4F4F50515252535556575758595B5B5C5D5D5E5F60606163646465676668696B6B
6C6E6D6F7070717272737574767777797A7A7B7D7C7E7F7F81818283838486868787888A8A8B8B8C
8E8E8F8F9092929393959596979799999B9A9C9C9D9D9FA0A0A2A1A3A3A4A4A6A6A7A7A8A8AAAAAB
ABACACAEAEAFAFAFB1B1B2B2B4B4B5B5B7B7B7B8B8B9B9BBBBBBBCBCBDBDBDBEBFC0C0C0C1C1C2C2
C2C4C4C3C5C5C6C6C6C7C7C7C9C9C9CACACACCCCCCCDCDCDCFCECED0D0D0D0D1D1D1D2D2D2D2D4D4
D4D5D5D5D5D6D6D6D6D8D8D8D8D9D9D9D9D9DADADADADCDCDCDCDCDDDDDDDDDDDDDEDEDEDEDEDEDF
DFDFDFDFDFE1E1E1E1E1E1E1E1E2E2E2E2E2E2E2E2E2E3E3E3E3E3E3E3E3E3E3E3E3E3E5E5E5E5E5
E5E5E5E5E5E5E5E5E5E5E5E5E5
>
0.000031
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000
>
<
FFFEFEFDFCFCFBFAFAF9F8F8F7F6F6F5F5F4F3F3F2F1F1F0EFEFEEEEEDECECEBEAEAE9E9E8E7E7E6
E6E5E4E4E3E3E2E1E1E0E0DFDFDEDDDDDCDCDBDBDAD9D9D8D8D7D7D6D5D5D4D4D3D3D2D2D1D1D0CF
CFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBEBDBDBCBCBC
BBBBBABAB9B9B8B8B7B7B7B6B6B5B5B4B4B3B3B3B2B2B1B1B0B0B0AFAFAEAEAEADADACACACABABAA
AAAAA9A9A8A8A8A7A7A6A6A6A5A5A5A4A4A3A3A3A2A2A2A1A1A1A0A0A09F9F9F9E9E9E9D9D9D9C9C
9C9B9B9B9A9A9A999999989898989797979696969595959594949494939393929292929191919190
9090908F8F8F8F8E8E8E8E8D8D8D8D8D8C8C8C8C8B8B8B8B8B8A8A8A8A8A89898989898888888888
87878787878786868686868685858585858585848484848484848383838383838383828282828282
828282818181818181818181818181808080808080808080808080808080807F7F7F7F7F7F7F7F7F
7F7F7F7F7F7F7F7F7F7F7F7F7F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAEAE9E8E7E6E5E4E3E2E1E0DFDEDDDDDCDBDA
D9D8D7D6D5D4D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C7C6C5C4C3C2C2C1C0BFBEBDBDBCBBBAB9B9B8
B7B6B5B5B4B3B2B1B1B0AFAEAEADACABAAAAA9A8A7A7A6A5A5A4A3A2A2A1A09F9F9E9D9D9C9B9A9A
9998989796969594949392929190908F8E8E8D8C8C8B8A8A89898887878685858484838282818180
7F7F7E7E7D7C7C7B7B7A7A7978787777767675757474737272717170706F6F6E6E6D6D6C6C6B6B6A
6A696968686767676666656564646363626262616160605F5F5F5E5E5D5D5D5C5C5B5B5B5A5A5959
5958585857575656565555555454545353535252525151515050504F4F4F4F4E4E4E4D4D4D4D4C4C
4C4B4B4B4B4A4A4A4A49494949484848484847474747464646464645454545454544444444444443
43434343434242424242424242414141414141414141404040404040404040404040403F3F3F3F3F
3F3F3F3F3F3F3F3F3F3F3F3F3F
>
<
FFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5F5F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDEDECECEB
EBEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E3E2E2E1E1E0E0DFDFDEDEDEDDDDDCDCDBDBDADADAD9D9
D8D8D7D7D7D6D6D5D5D5D4D4D3D3D2D2D2D1D1D0D0D0CFCFCECECECDCDCDCCCCCBCBCBCACAC9C9C9
C8C8C8C7C7C6C6C6C5C5C5C4C4C4C3C3C3C2C2C1C1C1C0C0C0BFBFBFBEBEBEBDBDBDBCBCBCBBBBBB
BBBABABAB9B9B9B8B8B8B7B7B7B7B6B6B6B5B5B5B4B4B4B4B3B3B3B3B2B2B2B1B1B1B1B0B0B0B0AF
AFAFAEAEAEAEADADADADACACACACACABABABABAAAAAAAAA9A9A9A9A9A8A8A8A8A7A7A7A7A7A6A6A6
A6A6A5A5A5A5A5A4A4A4A4A4A3A3A3A3A3A3A2A2A2A2A2A1A1A1A1A1A1A0A0A0A0A0A0A09F9F9F9F
9F9F9F9E9E9E9E9E9E9E9D9D9D9D9D9D9D9D9C9C9C9C9C9C9C9C9C9B9B9B9B9B9B9B9B9B9B9B9A9A
9A9A9A9A9A9A9A9A9A9A999999999999999999999999999999999999999898989898989898989898
98989898989898989898989898
>
4 %_Br
[
0.000031 0.000031 0.000031 0.000031 1 1 1 2 30 63.1579 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 30 63.1579 Bs
0.594476 0.896818 0.000031 0.000122 0.498039 0.247059 0.596078 2 50 100 %_BS
%_0.594476 0.896818 0.000031 0.000122 0.498039 0.247059 0.596078 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Super Soft Black Vignette)
(Super Soft Black Vignette) 1 3 Bd
[
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
0.707332
0.690944
0.645747
0.836149
0.07451
0.047059
0.054902
4 %_Br
[
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 56.0729 57.4443 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 56.0729 57.4443 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 79.7713 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 31.8603 79.7713 Bs
0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 %_BS
%_0.707332 0.690944 0.645747 0.836149 0.07451 0.047059 0.054902 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 26)
(Unnamed gradient 26) 0 3 Bd
[
<
00000000000001010101010102020203030303030404040405050505050506060605050606060606
070808080808080909090908080809090909090909090A0A0A0A0A0A0A0A0B0B0B0B0A0B0B0A0A0A
0C0C0B0C0C0B0B0B0B0B0B0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0F0E0E0E
0E1010101010101010101010100F10101010100F0F0F0F0F0F111111111111111111111010101010
11111111111010101010101010101010101110101010101010101010121212121212121211111111
11111111121212121212121212121212121212121212121212121212121111111111111111111111
11111111111111121212121212121212121212121212121212121212121212121212121212121212
12121212121212121212121212121212121212121212121212121212121212121212121212121212
12121212121212121212121212121212121212121212121212121212121212121212121212121212
1212
>
<
0000000102030304050607060708090A0B0C0C0D0E1011111213141415161717181A1A1B1C1B1D1E
1E1F202021212223232424252527262727282829292A2A2B2B2C2C2E2D2F2E2E2F2F313131323234
33333434343636363737373838383939393B3B3B3B3C3C3C3D3D3D3D3E3E3E3E3F3F3F3F3F414141
41404241414141434343434343444444444444454545454545454546464646464646464747474747
4747474747484848484848484848484848484A4A4A4A4A4A4949494949494949494949494A4A4A4A
4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4A4C4C4C4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C
4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C
4C4C
>
<
000002030506080A0C0E10131417191A1C1E20212426272A2D2D2F31333437383A3B3E3E41424346
47484A4C4D4F50515253565758595B5C5D6061626364666768696B6C6D6C6E707072737476757677
797A7A7B7D7E7E8081818284848687878889898B8B8C8E8E8F8F9090929293939494969697979898
989A999B9B9B9D9C9D9D9D9F9F9EA0A0A0A1A1A1A2A2A2A2A4A4A4A5A5A5A5A6A6A6A6A7A7A7A7A7
A9A9A9A9A9AAAAAAAAAAABABABABABABABADACACACACACACAEAEAEAEAEAEAEAEAEAFAFAFAFAFAFAF
AFAFAFAFB0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2
B2B2B2B2B2B2B2B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3B3
B3B3
>
0.000031
<
FFFFFEFEFEFEFDFDFDFDFDFCFCFCFCFBFBFBFBFBFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F7F7F7F7F7
F7F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2
F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEF
EFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECECEC
ECEC
>
<
FFFEFDFCFBFAF9F8F7F6F5F5F4F3F2F1F0EFEFEEEDECEBEBEAE9E8E8E7E6E5E5E4E3E3E2E1E1E0DF
DFDEDDDDDCDCDBDADAD9D9D8D8D7D7D6D6D5D5D4D4D3D3D2D2D1D1D0D0CFCFCFCECECDCDCDCCCCCB
CBCBCACACAC9C9C9C8C8C8C7C7C7C6C6C6C5C5C5C5C4C4C4C3C3C3C3C2C2C2C2C1C1C1C1C1C0C0C0
C0C0BFBFBFBFBFBEBEBEBEBEBEBDBDBDBDBDBDBCBCBCBCBCBCBCBCBBBBBBBBBBBBBBBBBABABABABA
BABABABABAB9B9B9B9B9B9B9B9B9B9B9B9B9B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B8B7B7B7B7
B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B7B6B6B6B6B6B6B6B6B6B6B6
B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6
B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6
B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6B6
B6B6
>
<
FFFDFBF9F7F5F3F1EFEDEBE9E7E5E3E2E0DEDCDBD9D7D6D4D2D1CFCECCCBC9C8C6C5C3C2C0BFBEBC
BBBAB8B7B6B4B3B2B1B0AEADACABAAA9A8A6A5A4A3A2A1A09F9E9D9C9B9B9A999897969594949392
9190908F8E8D8D8C8B8B8A89898887878685858484838282818180807F7F7E7E7D7D7C7C7B7B7A7A
7A7979787878777776767675757574747473737372727272717171707070706F6F6F6F6E6E6E6E6E
6D6D6D6D6D6C6C6C6C6C6B6B6B6B6B6B6B6A6A6A6A6A6A6A69696969696969696968686868686868
68686868676767676767676767676767676767666666666666666666666666666666666666666666
66666666666666656565656565656565656565656565656565656565656565656565656565656565
65656565656565656565656565656565656565656565656565656565656565656565656565656565
65656565656565656565656565656565656565656565656565656565656565656565656565656565
6565
>
4 %_Br
0.000031
0.000031
0.000031
0.000031
1
1
1
4 %_Br
[
0.068635 0.296483 0.702296 0.000031 0.92549 0.713726 0.396078 2 50 100 %_BS
%_0.068635 0.296483 0.702296 0.000031 0.92549 0.713726 0.396078 2 50 100 Bs
1 0 13 45 %_BS
%_1 0 13 45 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 30)
(Unnamed gradient 30) 1 2 Bd
[
<
0E0E0E0E0D0F0E0E0E0E0E0E0F0F0F0F0E0E0F0F0F0E0E0F0F0F0F0F111110101011111111101111
1111121212
>
<
18181A1A1B1B1C1E1E1F2121222325252729292B2B2C2E2F313234363737393A3C3D3E4041434445
4648494A4C
>
<
CFCFCFCECECFCDCDCCCCCBCACAC9C9C8C8C8C7C6C5C5C3C3C2C3C2C2C2C2C0BEBEBCBCBABAB9B9B8
B7B6B5B5B3
>
0.000031
<
F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEDED
EDEDECECEC
>
<
DADAD9D9D8D8D7D6D6D5D4D4D3D2D1D1D0CFCECDCDCCCBCAC9C8C7C6C5C5C4C3C2C1C0BFBEBDBCBB
BAB9B8B7B6
>
<
5050505151515252535353545455555656565757585859595A5A5B5B5C5C5D5E5E5F5F6060616162
6363646465
>
4 %_Br
[
0.054902 0.094209 0.812833 0.000031 0.956863 0.854902 0.313726 2 57.3034 0 %_BS
%_0.054902 0.094209 0.812833 0.000031 0.956863 0.854902 0.313726 2 57.3034 0 Bs
0.068635 0.296483 0.702296 0.000031 0.92549 0.713726 0.396078 2 50 100 %_BS
%_0.068635 0.296483 0.702296 0.000031 0.92549 0.713726 0.396078 2 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 31)
(Unnamed gradient 31) 0 3 Bd
[
<
12121211111111101111111110101010110F0F0F0F0F0F0F0E0E0E0F0F0F0F0E0E0E0E0F0F0F0F0F
0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E
0E0E0E0E0E
>
<
4C4A49484645444341403E3D3C3A3A39373634343231312F2E2E2C2B2B2929292927272525232322
222121211F1F1F1E1E1E1E1C1C1C1C1B1B1B1B1B1A1A1A1A1A1A1A1A1A1818181818181818181818
1818181818
>
<
B3B5B5B6B7B8B9B9BABABCBCBEBEC0C0C2C1C2C2C3C2C2C3C3C3C5C5C6C7C7C8C8C8C8C9C9C9CACA
CACACACBCCCCCCCCCDCDCDCDCDCDCDCFCECECECECECECECECECFCFCFCFCFCFCFCFCFCFCFCFCFCFCF
CFCFCFCFCF
>
0.000031
<
ECECECEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F0F0F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2
F2F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4
F4F4F4F4F4
>
<
B6B7B8B9BABBBCBDBEBFC0C1C2C3C3C4C5C6C7C7C8C9C9CACBCBCCCDCDCECECFCFD0D0D1D1D2D2D3
D3D4D4D4D5D5D5D6D6D6D6D7D7D7D7D8D8D8D8D8D9D9D9D9D9D9D9D9D9DADADADADADADADADADADA
DADADADADA
>
<
656464636362616160605F5F5E5E5D5D5C5C5B5B5A5A5A5959595858575757565656565555555454
54545453535353535252525252525251515151515151515151505050505050505050505050505050
5050505050
>
4 %_Br
<
0E0E0D0E0E0E0E0F0F0F0E0F0F0F0E0E0F0F0F0F11101010101111111011111111121212
>
<
181A1B1C1E1F212223252728292B2C2E2F31343637393A3C3D3E40414344454648494A4C
>
<
CFCECECDCDCCCACAC9C9C8C7C7C5C5C3C2C2C2C2C2C0C0BEBEBCBABAB9B9B8B7B6B5B5B3
>
0.000031
<
F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F1F0F0F0F0EFEFEFEFEFEEEEEEEEEDEDEDEDECECEC
>
<
DAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6
>
<
505151525253545455555657575858595A5A5B5B5C5D5D5E5E5F60606161626363646465
>
4 %_Br
[
0.054902 0.094209 0.812833 0.000031 0.956863 0.854902 0.313726 2 50 100 %_BS
%_0.054902 0.094209 0.812833 0.000031 0.956863 0.854902 0.313726 2 50 100 Bs
0.068635 0.296483 0.702296 0.000031 0.92549 0.713726 0.396078 2 23.7288 50 %_BS
%_0.068635 0.296483 0.702296 0.000031 0.92549 0.713726 0.396078 2 23.7288 50 Bs
0.054902 0.094209 0.812833 0.000031 0.956863 0.854902 0.313726 2 50 0 %_BS
%_0.054902 0.094209 0.812833 0.000031 0.956863 0.854902 0.313726 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Laguna)
(Laguna) 0 3.1914 84.1563 84.791 [
%AI3_Tile
(0 O 0 R 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d
0 XR
42.0781 30.3906 m
12.2227 12.8779 9.0488 12.4082 V
7.2871 14.1709 0 30.3906 Y
13.1641 20.5186 29.1484 23.3389 42.0781 30.3906 C
f
42.0781 57.5908 m
12.2227 40.0781 9.0488 39.6094 V
7.2871 41.3711 0 57.5908 Y
13.1641 47.7178 29.1484 50.5391 42.0781 57.5908 C
f
42.0781 84.791 m
12.2227 67.2773 9.0488 66.8096 V
7.2871 68.5703 0 84.791 Y
13.1641 74.918 29.1484 77.7402 42.0781 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.594476 0.896818 0.000031 0.000122 0.498039 0.247059 0.596078 Xa
 0.594476 0.896818 0.000031 0.000122 0.498039 0.247059 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d
0 XR
84.1563 30.3906 m
54.3008 12.8779 51.127 12.4082 V
49.3652 14.1709 42.0781 30.3906 Y
55.2422 20.5186 71.2266 23.3389 84.1563 30.3906 C
f
84.1563 57.5908 m
54.3008 40.0781 51.127 39.6094 V
49.3652 41.3711 42.0781 57.5908 Y
55.2422 47.7178 71.2266 50.5391 84.1563 57.5908 C
f
84.1563 84.791 m
54.3008 67.2773 51.127 66.8096 V
49.3652 68.5703 42.0781 84.791 Y
55.2422 74.918 71.2266 77.7402 84.1563 84.791 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 Xa
 0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d
0 XR
21.0391 33.582 m
19.2773 33.582 17.8477 32.1523 17.8477 30.3906 c
17.8477 28.6289 19.2773 27.2002 21.0391 27.2002 c
22.8008 27.2002 24.2285 28.6289 24.2285 30.3906 c
24.2285 32.1523 22.8008 33.582 21.0391 33.582 c
f
21.0391 6.3818 m
19.2773 6.3818 17.8477 4.9531 17.8477 3.1914 c
17.8477 1.4287 19.2773 0 21.0391 0 c
22.8008 0 24.2285 1.4287 24.2285 3.1914 c
24.2285 4.9531 22.8008 6.3818 21.0391 6.3818 c
f
21.0391 60.7822 m
19.2773 60.7822 17.8477 59.3525 17.8477 57.5908 c
17.8477 55.8291 19.2773 54.3994 21.0391 54.3994 c
22.8008 54.3994 24.2285 55.8291 24.2285 57.5908 c
24.2285 59.3525 22.8008 60.7822 21.0391 60.7822 c
f
21.0391 87.9824 m
19.2773 87.9824 17.8477 86.5547 17.8477 84.791 c
17.8477 83.0283 19.2773 81.5996 21.0391 81.5996 c
22.8008 81.5996 24.2285 83.0283 24.2285 84.791 c
24.2285 86.5547 22.8008 87.9824 21.0391 87.9824 c
f
63.1172 33.582 m
61.3555 33.582 59.9258 32.1523 59.9258 30.3906 c
59.9258 28.6289 61.3555 27.2002 63.1172 27.2002 c
64.8789 27.2002 66.3066 28.6289 66.3066 30.3906 c
66.3066 32.1523 64.8789 33.582 63.1172 33.582 c
f
63.1172 6.3818 m
61.3555 6.3818 59.9258 4.9531 59.9258 3.1914 c
59.9258 1.4287 61.3555 0 63.1172 0 c
64.8789 0 66.3066 1.4287 66.3066 3.1914 c
66.3066 4.9531 64.8789 6.3818 63.1172 6.3818 c
f
63.1172 60.7822 m
61.3555 60.7822 59.9258 59.3525 59.9258 57.5908 c
59.9258 55.8291 61.3555 54.3994 63.1172 54.3994 c
64.8789 54.3994 66.3066 55.8291 66.3066 57.5908 c
66.3066 59.3525 64.8789 60.7822 63.1172 60.7822 c
f
63.1172 87.9824 m
61.3555 87.9824 59.9258 86.5547 59.9258 84.791 c
59.9258 83.0283 61.3555 81.5996 63.1172 81.5996 c
64.8789 81.5996 66.3066 83.0283 66.3066 84.791 c
66.3066 86.5547 64.8789 87.9824 63.1172 87.9824 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.594476 0.896818 0.000031 0.000122 0.498039 0.247059 0.596078 Xa
 0.594476 0.896818 0.000031 0.000122 0.498039 0.247059 0.596078 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d
0 XR
0 3.1914 m
29.8535 20.7041 33.0273 21.1738 V
34.79 19.4111 42.0781 3.1914 Y
28.9141 13.0645 12.9277 10.2422 0 3.1914 C
f
0 30.3906 m
29.8535 47.9033 33.0273 48.374 V
34.79 46.6104 42.0781 30.3906 Y
28.9141 40.2646 12.9277 37.4434 0 30.3906 C
f
0 57.5908 m
29.8535 75.1035 33.0273 75.5752 V
34.79 73.8105 42.0781 57.5908 Y
28.9141 67.4648 12.9277 64.6436 0 57.5908 C
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
 0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 10 M []0 d
0 XR
42.0781 3.1914 m
71.9316 20.7041 75.1055 21.1738 V
76.8691 19.4111 84.1563 3.1914 Y
70.9922 13.0645 55.0059 10.2422 42.0781 3.1914 C
f
42.0781 30.3906 m
71.9316 47.9033 75.1055 48.374 V
76.8691 46.6104 84.1563 30.3906 Y
70.9922 40.2646 55.0059 37.4434 42.0781 30.3906 C
f
42.0781 57.5908 m
71.9316 75.1035 75.1055 75.5752 V
76.8691 73.8105 84.1563 57.5908 Y
70.9922 67.4648 55.0059 64.6436 42.0781 57.5908 C
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(New Pattern 1)
0 A
u
0 J 0 j 1 w 4 M []0 d
0 XR
-7991 7807 m
-7991 7748.0254 L
-7975.4902 7748.0254 L
-7975.4902 7807 L
-7991 7807 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
10 M
-7991 7758.0586 m
-7991 7757.5742 L
-7975.4878 7757.5742 L
-7975.4878 7758.0586 L
-7991 7758.0586 L
f
-7991 7775.3838 m
-7991 7774.8965 L
-7975.4878 7774.8965 L
-7975.4878 7775.3838 L
-7991 7775.3838 L
f
-7990.9995 7760.3682 m
-7990.9995 7759.6494 L
-7975.4878 7759.6494 L
-7975.4878 7760.3682 L
-7990.9995 7760.3682 L
f
-7990.9995 7770.6328 m
-7990.9995 7769.9121 L
-7975.4878 7769.9121 L
-7975.4878 7770.6328 L
-7990.9995 7770.6328 L
f
-7990.9995 7768.4951 m
-7990.9995 7767.4141 L
-7975.4878 7767.4141 L
-7975.4878 7768.4951 L
-7990.9995 7768.4951 L
f
-7990.9995 7762.9395 m
-7990.9995 7761.8594 L
-7975.4878 7761.8594 L
-7975.4878 7762.9395 L
-7990.9995 7762.9395 L
f
-7990.9995 7765.9854 m
-7990.9995 7764.334 L
-7975.4878 7764.334 L
-7975.4878 7765.9854 L
-7990.9995 7765.9854 L
f
*u
1 D
-7975.4888 7774.1455 m
-7990.9995 7774.1455 L
-7990.9995 7773.6816 L
-7990.6514 7773.6816 L
-7990.6514 7772.4844 L
-7990.9995 7772.4844 L
-7990.9995 7772.0215 L
-7975.4888 7772.0215 L
-7975.4888 7772.4844 L
-7975.8408 7772.4844 L
-7975.8408 7773.6846 L
-7975.4888 7773.6846 L
-7975.4888 7774.1455 L
f
0 D
-7987.1255 7773.6846 m
-7986.4199 7773.6846 L
-7986.4199 7772.4844 L
-7987.1255 7772.4844 L
-7987.1255 7773.6846 L
f
-7987.8306 7772.4844 m
-7988.5361 7772.4844 L
-7988.5361 7773.6846 L
-7987.8306 7773.6846 L
-7987.8306 7772.4844 L
f
-7985.7144 7773.6846 m
-7985.0098 7773.6846 L
-7985.0098 7772.4844 L
-7985.7144 7772.4844 L
-7985.7144 7773.6846 L
f
-7984.3042 7773.6846 m
-7983.5986 7773.6846 L
-7983.5986 7772.4844 L
-7984.3042 7772.4844 L
-7984.3042 7773.6846 L
f
-7982.8936 7773.6846 m
-7982.1885 7773.6846 L
-7982.1885 7772.4844 L
-7982.8936 7772.4844 L
-7982.8936 7773.6846 L
f
-7981.4834 7773.6846 m
-7980.7778 7773.6846 L
-7980.7778 7772.4844 L
-7981.4834 7772.4844 L
-7981.4834 7773.6846 L
f
-7980.0718 7773.6846 m
-7979.3672 7773.6846 L
-7979.3672 7772.4844 L
-7980.0718 7772.4844 L
-7980.0718 7773.6846 L
f
-7978.6616 7773.6846 m
-7977.9575 7773.6846 L
-7977.9575 7772.4844 L
-7978.6616 7772.4844 L
-7978.6616 7773.6846 L
f
-7977.2515 7773.6846 m
-7976.5454 7773.6846 L
-7976.5454 7772.4844 L
-7977.2515 7772.4844 L
-7977.2515 7773.6846 L
f
-7989.9463 7773.6846 m
-7989.2407 7773.6846 L
-7989.2407 7772.4844 L
-7989.9463 7772.4844 L
-7989.9463 7773.6846 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(New Pattern 2)
0 A
u
0 J 0 j 1 w 4 M []0 d
0 XR
-7991 7806.998 m
-7991 7748.0225 L
-7932.0254 7748.0225 L
-7932.0254 7806.998 L
-7991 7806.998 L
n
*u
1 D
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
10 M
-7964.4902 7766.4453 m
-7962.9678 7767.9678 -7963.5166 7770.9834 -7965.7153 7773.1836 c
-7967.9146 7775.3809 -7970.9302 7775.9297 -7972.4526 7774.4082 c
-7973.9751 7772.8857 -7973.4263 7769.8682 -7971.2271 7767.6709 c
-7969.0288 7765.4717 -7966.0127 7764.9238 -7964.4902 7766.4453 c
f
0 D
-7965.1519 7767.0781 m
-7966.5728 7765.6582 -7969.2241 7766.0059 -7971.0728 7767.8545 c
-7972.9214 7769.7031 -7973.2695 7772.3545 -7971.8486 7773.7754 c
-7970.4282 7775.1953 -7967.7769 7774.8486 -7965.9282 7773 c
-7964.0786 7771.1504 -7963.7314 7768.5 -7965.1519 7767.0781 c
f
*U
-7982.5327 7757.2607 m
-7981.7969 7757.1309 l
-7981.71 7756.4385 l
-7976.9458 7761.9814 l
-7982.5327 7757.2607 l
f
-7971.9409 7754.3145 m
-7972.1235 7752.7266 L
-7971.7002 7752.4512 -7971.3184 7752.1309 -7970.9346 7751.8145 C
-7970.6841 7754.9189 L
-7970.3535 7754.9453 L
-7970.4678 7751.4395 L
-7970.0503 7751.1162 -7969.6089 7750.8213 -7969.0913 7750.6152 C
-7969.1235 7755.7266 L
-7968.9063 7755.7734 L
-7968.5938 7750.4521 L
-7968.2007 7750.3516 -7967.7632 7750.3008 -7967.2642 7750.3213 C
-7968.0376 7759.4463 L
-7966.7666 7750.3594 L
-7966.3359 7750.4063 -7965.96 7750.4746 -7965.6289 7750.5625 C
-7966.4551 7757.334 L
-7966.2998 7757.2109 L
-7965.1465 7750.7148 L
-7964.7471 7750.8633 -7964.4238 7751.0449 -7964.1528 7751.25 C
-7964.7334 7756.0762 L
-7964.4688 7755.9414 L
-7963.7114 7751.6426 L
-7963.2256 7752.1494 -7962.9194 7752.7344 -7962.5127 7753.2822 C
-7963.0713 7755.3496 L
-7962.6001 7755.1709 L
-7962.1338 7753.7383 L
-7961.8096 7754.082 -7961.4063 7754.3945 -7960.8394 7754.6406 c
-7960.8506 7754.6357 -7959.7393 7754.6826 -7959.7466 7754.6533 c
-7959.7959 7754.4375 -7960.6655 7754.2998 -7960.6455 7754.3105 c
-7963.2974 7752.8965 -7962.3232 7750.3301 -7966.8735 7749.873 c
-7970.4072 7749.5176 -7971.2515 7752.75 -7974.0962 7753.0615 c
-7974.1152 7753.0625 -7974.7632 7753.3174 -7974.8442 7753.4502 C
-7974.8486 7753.625 -7974.4595 7753.5186 -7974.2417 7753.4766 c
-7973.6001 7753.3477 -7973.0498 7753.2402 -7972.5728 7752.9912 C
-7972.4023 7754.1914 L
-7971.9409 7754.3145 L
f
-7984.6626 7766.9463 m
-7986.2495 7766.7637 L
-7986.5254 7767.1865 -7986.8462 7767.5693 -7987.1626 7767.9521 C
-7984.0576 7768.2031 L
-7984.0322 7768.5352 L
-7987.5376 7768.4189 L
-7987.8608 7768.8369 -7988.1558 7769.2783 -7988.3618 7769.7959 C
-7983.2505 7769.7637 L
-7983.2031 7769.9814 L
-7988.5249 7770.293 L
-7988.6265 7770.6865 -7988.6758 7771.125 -7988.6558 7771.623 C
-7979.5298 7770.8496 L
-7988.6177 7772.1201 L
-7988.5713 7772.5498 -7988.5024 7772.9277 -7988.4146 7773.2578 C
-7981.6426 7772.4316 L
-7981.7656 7772.5869 L
-7988.2622 7773.7402 L
-7988.1138 7774.1406 -7987.9312 7774.4629 -7987.7271 7774.7344 C
-7982.9014 7774.1533 L
-7983.0352 7774.418 L
-7987.3335 7775.1768 L
-7986.8271 7775.6621 -7986.2417 7775.9688 -7985.6943 7776.375 C
-7983.6274 7775.8145 L
-7983.8066 7776.2871 L
-7985.2383 7776.752 L
-7984.8945 7777.0762 -7984.5825 7777.4814 -7984.3359 7778.0479 c
-7984.3408 7778.0361 -7984.2935 7779.1484 -7984.3242 7779.1416 c
-7984.54 7779.0908 -7984.6768 7778.2227 -7984.6675 7778.2412 c
-7986.0806 7775.5898 -7988.6475 7776.5645 -7989.1045 7772.0127 c
-7989.4595 7768.4805 -7986.2271 7767.6367 -7985.9165 7764.791 c
-7985.9136 7764.7725 -7985.6602 7764.125 -7985.5273 7764.043 C
-7985.3535 7764.0381 -7985.4575 7764.4277 -7985.5015 7764.6455 c
-7985.6294 7765.2871 -7985.7368 7765.8369 -7985.9858 7766.3145 C
-7984.7842 7766.4854 L
-7984.6626 7766.9463 L
f
-7955.0127 7765.2285 m
-7950.2495 7766.6348 -7948.9502 7768.9209 -7948.9746 7770.5654 C
-7948.5366 7767.459 -7946.6558 7769.8652 -7946.1313 7771.0029 C
-7947.0498 7767.416 -7944.4463 7770.5439 -7944.2715 7770.8496 C
-7945.2593 7767.4063 -7952.3955 7764.9404 -7955.0127 7765.2285 C
f
-7960.9775 7764.2197 m
-7964.3242 7758.1738 -7961.4233 7756.5703 -7960.7354 7756.377 c
-7960.9233 7756.4287 -7961.3135 7757.2949 -7961.2026 7757.6367 C
-7960.9482 7757.0928 -7960.4111 7756.8193 -7959.8994 7756.6094 C
-7961.1626 7757.6094 -7961.6943 7760.4111 -7960.9082 7763.9512 c
-7960.9775 7764.2197 l
f
-7963.2222 7764.5254 m
-7965.6035 7762.1016 -7967.0474 7761.2773 -7965.1035 7758.668 c
-7965.2202 7758.8262 -7965.3838 7759.7168 -7965.1758 7760.0117 C
-7965.0942 7759.418 -7964.6626 7758.998 -7964.2358 7758.6455 C
-7965.9395 7762.0732 -7963.2222 7764.5254 y
f
-7955.6577 7763.4199 m
-7955.9897 7761.5615 -7954.4922 7760.4688 -7952.8662 7759.8496 C
-7953.4194 7759.8662 -7954.0176 7759.9307 -7954.4482 7760.3496 C
-7954.4302 7759.9893 -7953.7598 7759.3184 -7953.5654 7759.3359 c
-7954.2778 7759.2744 -7956.4951 7758.8447 -7955.8408 7763.6191 c
-7955.6577 7763.4199 l
f
-7952.5576 7764.1133 m
-7952.1538 7762.7266 -7949.9502 7762.459 V
-7950.5342 7762.2871 -7951.2314 7762.3662 -7951.6626 7762.7852 C
-7951.6455 7762.4258 -7950.8408 7761.7178 -7950.6479 7761.7568 c
-7952.3921 7761.4141 -7952.6782 7763.9072 y
-7952.5576 7764.1133 l
f
-7949.1152 7765.3213 m
-7948.8408 7764.627 -7948.0942 7764.1201 -7947.2646 7764 C
-7947.6475 7763.8975 -7948.0854 7763.9873 -7948.4297 7764.3242 C
-7948.4175 7764.0352 -7947.7744 7763.4863 -7947.6182 7763.502 c
-7949.2729 7763.3496 -7949.1152 7765.3213 Y
f
-7958.5562 7763.4629 m
-7958.6504 7760.1309 -7957.4175 7758.4541 -7955.9761 7757.6514 C
-7956.5264 7757.7148 -7957.1162 7757.8271 -7957.5103 7758.2793 C
-7957.5249 7757.9189 -7956.9087 7757.1953 -7956.7134 7757.1973 c
-7957.4287 7757.1943 -7960.0034 7757.0898 -7958.7866 7763.7109 c
-7958.5562 7763.4629 l
f
-7973.7944 7784.0137 m
-7972.3882 7788.7754 -7970.1006 7790.0762 -7968.4575 7790.0518 C
-7971.5635 7790.4893 -7969.1567 7792.3701 -7968.0195 7792.8945 C
-7971.6074 7791.9766 -7968.4795 7794.5791 -7968.1729 7794.7549 C
-7971.6162 7793.7676 -7974.0825 7786.6309 -7973.7944 7784.0137 C
f
-7974.8022 7778.0488 m
-7980.8481 7774.7002 -7982.4521 7777.6025 -7982.6465 7778.291 c
-7982.5938 7778.1025 -7981.7295 7777.7119 -7981.3857 7777.8242 C
-7981.9297 7778.0781 -7982.2017 7778.6152 -7982.4126 7779.127 C
-7981.4126 7777.8633 -7978.6113 7777.334 -7975.0703 7778.1182 c
-7974.8022 7778.0488 l
f
-7974.4966 7775.8037 m
-7976.9214 7773.4229 -7977.7446 7771.9805 -7980.3535 7773.9229 c
-7980.1968 7773.8066 -7979.3057 7773.6426 -7979.0112 7773.8496 C
-7979.6064 7773.9307 -7980.0239 7774.3633 -7980.3774 7774.79 C
-7976.9487 7773.0879 -7974.4966 7775.8037 y
f
-7975.6025 7783.3682 m
-7977.4614 7783.0361 -7978.5537 7784.5342 -7979.1729 7786.1602 C
-7979.1558 7785.6074 -7979.0918 7785.0098 -7978.6719 7784.5791 C
-7979.0327 7784.5957 -7979.7041 7785.2656 -7979.6865 7785.4609 c
-7979.7485 7784.75 -7980.1777 7782.5313 -7975.4038 7783.1846 c
-7975.6025 7783.3682 l
f
-7974.9087 7786.4688 m
-7976.2959 7786.873 -7976.5649 7789.0762 V
-7976.7354 7788.4922 -7976.6558 7787.7949 -7976.2368 7787.3633 C
-7976.5967 7787.3809 -7977.3042 7788.1865 -7977.2666 7788.3789 c
-7977.6079 7786.6348 -7975.1152 7786.3477 y
-7974.9087 7786.4688 l
f
-7973.7007 7789.9111 m
-7974.3955 7790.1846 -7974.9009 7790.9307 -7975.0234 7791.7617 C
-7975.1265 7791.3789 -7975.0337 7790.9404 -7974.6982 7790.5967 C
-7974.9873 7790.6104 -7975.5361 7791.252 -7975.5215 7791.4082 c
-7975.6729 7789.7529 -7973.7007 7789.9111 Y
f
-7975.5591 7780.4697 m
-7978.8921 7780.377 -7980.5679 7781.6094 -7981.3696 7783.0508 C
-7981.3081 7782.502 -7981.1953 7781.9102 -7980.7422 7781.5146 C
-7981.1035 7781.5029 -7981.8262 7782.1162 -7981.8257 7782.3135 c
-7981.8286 7781.5967 -7981.9321 7779.0234 -7975.3115 7780.2402 c
-7975.5591 7780.4697 l
f
u
u
-7985.0234 7756.709 m
-7985.2856 7756.1953 -7985.0479 7755.6689 -7983.2905 7755.6504 C
-7984.0322 7754.9082 L
-7985.9927 7754.9941 -7986.3423 7756.1777 -7986.1665 7756.7578 c
-7985.9736 7757.3906 -7985.5488 7757.9023 -7985.2085 7758.25 C
-7986.2031 7758.6113 -7986.2505 7759.3916 -7986.0479 7759.79 c
-7985.7729 7760.334 -7985.2998 7760.752 -7984.9487 7761.0176 C
-7985.9448 7761.377 -7985.8623 7762.1133 -7985.6074 7762.457 c
-7985.2856 7762.8906 -7984.8174 7763.2031 -7984.4751 7763.4023 C
-7985.4585 7763.8301 -7985.3022 7764.5234 -7985.0239 7764.8154 c
-7984.6929 7765.166 -7984.2466 7765.3916 -7983.9199 7765.5322 C
-7984.7695 7766.0225 -7984.5537 7766.6318 -7984.2715 7766.8633 c
-7983.9458 7767.1318 -7983.5342 7767.2842 -7983.23 7767.377 C
-7983.9395 7767.9082 -7983.6802 7768.4297 -7983.4014 7768.6074 c
-7983.0698 7768.8174 -7982.6714 7768.9082 -7982.3857 7768.9541 C
-7982.9673 7769.5098 -7982.6768 7769.9482 -7982.4097 7770.0762 c
-7981.9326 7770.3037 -7981.3511 7770.2764 -7981.1768 7770.2813 c
-7980.6343 7770.2959 -7979.8838 7770.125 -7979.4272 7770.0703 c
-7978.3442 7769.9434 -7974.5718 7769.2754 -7972.9023 7769.4385 C
-7973.1704 7769.2285 -7973.1714 7769.2285 v
-7975.1304 7769.041 -7978.0479 7769.4678 -7979.1294 7769.5957 c
-7979.9839 7769.6953 -7981.1182 7769.9951 -7981.9951 7769.7295 c
-7982.2593 7769.6494 -7982.3696 7769.4453 -7981.8906 7769.0215 C
-7981.3135 7769.0732 -7980.5737 7769.002 -7980.1118 7769.0039 c
-7978.9009 7769.0098 -7974.6504 7768.7832 -7972.8311 7769.1895 C
-7973.0986 7768.9209 -7973.0986 7768.9199 v
-7975.2344 7768.4492 -7978.5098 7768.5254 -7979.7202 7768.5186 c
-7980.6758 7768.5137 -7981.9673 7768.6914 -7982.8984 7768.2783 c
-7983.1777 7768.1563 -7983.2729 7767.918 -7982.6953 7767.5166 C
-7982.0615 7767.6602 -7981.2153 7767.6816 -7980.6968 7767.7471 c
-7979.3623 7767.918 -7974.6431 7768.2441 -7972.6929 7768.9375 C
-7972.9502 7768.6064 -7972.9512 7768.6064 v
-7975.2422 7767.7969 -7978.8647 7767.4375 -7980.1992 7767.2656 c
-7981.2529 7767.1309 -7982.7007 7767.1504 -7983.6719 7766.5703 c
-7983.9624 7766.3975 -7984.0352 7766.123 -7983.3481 7765.7578 C
-7982.6704 7765.998 -7981.7578 7766.1328 -7981.2026 7766.2754 c
-7979.7534 7766.6445 -7974.5938 7767.6426 -7972.5361 7768.6689 C
-7972.7754 7768.2695 -7972.7759 7768.2695 v
-7975.1934 7767.0664 -7979.1392 7766.1797 -7980.5879 7765.8105 c
-7981.7314 7765.5186 -7983.3311 7765.3457 -7984.3242 7764.5723 c
-7984.6182 7764.3457 -7984.6626 7764.0352 -7983.8745 7763.7305 C
-7983.1606 7764.082 -7982.1802 7764.3535 -7981.5889 7764.584 c
-7980.0415 7765.1865 -7974.4863 7766.9863 -7972.3564 7768.3984 C
-7972.5654 7767.9258 -7972.5674 7767.9248 v
-7975.0698 7766.2695 -7979.3018 7764.7578 -7980.8486 7764.1543 c
-7982.0703 7763.6777 -7983.8115 7763.2695 -7984.8018 7762.2842 c
-7985.0786 7762.0098 -7985.1006 7761.6846 -7984.3384 7761.4551 C
-7983.5942 7761.9404 -7982.5234 7762.3584 -7981.8926 7762.6895 c
-7980.2446 7763.5518 -7974.2441 7766.2246 -7972.1055 7768.0957 C
-7972.2407 7767.5186 -7972.2417 7767.5186 v
-7974.7559 7765.3281 -7979.2954 7763.127 -7980.9438 7762.2617 c
-7982.2456 7761.5801 -7984.1602 7760.9248 -7985.0815 7759.6709 c
-7985.3135 7759.3555 -7985.2974 7759.0127 -7984.6118 7758.8105 C
-7983.8594 7759.4668 -7982.6641 7760.0762 -7981.9888 7760.5322 c
-7980.27 7761.6953 -7973.9126 7765.377 -7971.8442 7767.7637 C
-7972.1377 7766.9902 -7972.1382 7766.9893 v
-7974.5718 7764.1934 -7979.0825 7761.2842 -7980.8018 7760.1221 c
-7982.1582 7759.2031 -7984.2295 7758.2607 -7985.0234 7756.709 c
f
U
u
-7982.2329 7753.918 m
-7982.7446 7753.6543 -7983.2715 7753.8926 -7983.2905 7755.6504 C
-7984.0313 7754.9082 L
-7983.9473 7752.9473 -7982.7622 7752.5977 -7982.1826 7752.7754 c
-7981.5503 7752.9658 -7981.0386 7753.3916 -7980.6919 7753.7324 C
-7980.3306 7752.7373 -7979.5498 7752.6904 -7979.1504 7752.8906 c
-7978.6064 7753.168 -7978.1895 7753.6406 -7977.9224 7753.9922 C
-7977.5649 7752.9951 -7976.8281 7753.0781 -7976.4834 7753.334 c
-7976.0498 7753.6543 -7975.7368 7754.123 -7975.5376 7754.4648 C
-7975.1113 7753.4824 -7974.4175 7753.6387 -7974.1255 7753.918 c
-7973.7759 7754.248 -7973.5488 7754.6943 -7973.4082 7755.0215 C
-7972.9185 7754.1719 -7972.3086 7754.3877 -7972.0767 7754.6689 c
-7971.8086 7754.9951 -7971.6553 7755.4053 -7971.5649 7755.7109 C
-7971.0327 7755.002 -7970.5103 7755.2607 -7970.3345 7755.5391 c
-7970.1235 7755.8701 -7970.0322 7756.2695 -7969.9858 7756.5537 C
-7969.4312 7755.9727 -7968.9912 7756.2637 -7968.8638 7756.5313 c
-7968.6367 7757.0078 -7968.6655 7757.5898 -7968.6592 7757.7637 c
-7968.6431 7758.3066 -7968.8159 7759.0566 -7968.8696 7759.5137 c
-7968.9966 7760.5957 -7969.6655 7764.3682 -7969.5034 7766.0381 C
-7969.7129 7765.7695 l
-7969.8999 7763.8105 -7969.4727 7760.8926 -7969.3457 7759.8105 c
-7969.2446 7758.957 -7968.9458 7757.8223 -7969.2114 7756.9453 c
-7969.2915 7756.6816 -7969.4946 7756.5703 -7969.9199 7757.0508 C
-7969.8682 7757.6279 -7969.9395 7758.3662 -7969.9375 7758.8281 c
-7969.9302 7760.04 -7970.1567 7764.29 -7969.7524 7766.1094 C
-7970.0195 7765.8428 -7970.0195 7765.8418 v
-7970.4922 7763.7061 -7970.4155 7760.4316 -7970.4214 7759.2207 c
-7970.4272 7758.2646 -7970.25 7756.9736 -7970.6616 7756.043 c
-7970.7847 7755.7637 -7971.0234 7755.668 -7971.4238 7756.2461 C
-7971.2798 7756.8789 -7971.2593 7757.7246 -7971.1929 7758.2441 c
-7971.0225 7759.5781 -7970.6958 7764.2959 -7970.0034 7766.248 C
-7970.3345 7765.9902 -7970.3354 7765.9893 v
-7971.1455 7763.6982 -7971.5039 7760.0762 -7971.6753 7758.7402 c
-7971.8096 7757.6885 -7971.79 7756.2402 -7972.3706 7755.2695 c
-7972.5435 7754.9785 -7972.8174 7754.9053 -7973.1816 7755.5938 C
-7972.9434 7756.2695 -7972.8081 7757.1836 -7972.6665 7757.7383 c
-7972.2969 7759.1865 -7971.2993 7764.3477 -7970.27 7766.4053 C
-7970.6704 7766.166 -7970.6714 7766.166 v
-7971.8745 7763.7471 -7972.7607 7759.8008 -7973.1294 7758.3535 c
-7973.4214 7757.209 -7973.5962 7755.6094 -7974.3662 7754.6172 c
-7974.5962 7754.3232 -7974.9058 7754.2783 -7975.2114 7755.0664 C
-7974.8594 7755.7793 -7974.5874 7756.7617 -7974.3574 7757.3516 c
-7973.7534 7758.8984 -7971.9546 7764.4541 -7970.5415 7766.585 C
-7971.0161 7766.375 l
-7972.6704 7763.8711 -7974.1826 7759.6387 -7974.7866 7758.0918 c
-7975.2622 7756.8701 -7975.6714 7755.1289 -7976.6558 7754.1387 c
-7976.9312 7753.8623 -7977.2559 7753.8398 -7977.4858 7754.6016 C
-7977.0015 7755.3457 -7976.5825 7756.418 -7976.2529 7757.0469 c
-7975.3887 7758.6953 -7972.7158 7764.6973 -7970.8447 7766.8359 C
-7971.4209 7766.6992 -7971.4214 7766.6992 v
-7973.6128 7764.1846 -7975.8145 7759.6455 -7976.6782 7757.9961 c
-7977.3599 7756.6943 -7978.0161 7754.7793 -7979.2695 7753.8594 c
-7979.5854 7753.627 -7979.9272 7753.6426 -7980.1313 7754.3281 C
-7979.4736 7755.082 -7978.8638 7756.2764 -7978.4072 7756.9512 c
-7977.2441 7758.6709 -7973.5635 7765.0273 -7971.1768 7767.0967 C
-7971.9502 7766.8037 -7971.9512 7766.8018 v
-7974.7471 7764.3682 -7977.6558 7759.8584 -7978.8184 7758.1387 c
-7979.7368 7756.7822 -7980.6802 7754.7119 -7982.2329 7753.918 c
f
U
U
*u
1 D
-7932.0264 7758.0566 m
-7938.5264 7758.0566 L
-7938.1826 7758.4189 -7937.7622 7758.7578 -7937.1777 7759.0332 c
-7937.1978 7759.0234 -7936.3994 7759.1563 -7936.2622 7759.332 c
-7936.0967 7759.541 -7937.7886 7759.582 -7938.6929 7758.5342 C
-7939.3486 7761.709 L
-7939.8135 7762.0273 L
-7939.0918 7758.0977 L
-7939.5249 7757.5703 -7939.8594 7757.002 -7940.3687 7756.5186 C
-7941.0337 7762.6289 L
-7941.29 7762.7754 L
-7940.8286 7756.1475 L
-7941.1104 7755.957 -7941.4424 7755.791 -7941.8486 7755.6621 C
-7942.7119 7763.0225 L
-7942.9482 7763.0078 L
-7942.3369 7755.5322 L
-7942.6729 7755.4609 -7943.0518 7755.4111 -7943.4834 7755.3857 C
-7944.0303 7762.9541 L
-7944.1992 7762.9521 L
-7943.9814 7755.3711 L
-7944.4814 7755.377 -7944.9175 7755.4473 -7945.3042 7755.5674 C
-7945.4155 7762.7061 L
-7945.6338 7762.6689 L
-7945.7935 7755.7549 L
-7946.2998 7755.9863 -7946.7266 7756.3018 -7947.1279 7756.6455 C
-7947.0454 7762.2412 L
-7947.3774 7762.0273 L
-7947.5752 7757.043 L
-7947.9434 7757.377 -7948.3096 7757.7168 -7948.7178 7758.0127 C
-7948.7217 7761.3389 L
-7949.1455 7761.0645 L
-7949.1553 7758.2988 L
-7949.6191 7758.5693 -7950.5854 7759.0098 -7951.4014 7758.8672 C
-7950.1714 7758.543 -7949.7925 7758.3301 -7949.5034 7758.0566 C
-7952.7295 7758.0566 L
-7948.8955 7762.4512 -7942.3394 7766.6865 -7937.3018 7760.0225 C
-7937.1807 7759.8838 -7936.8174 7759.5625 -7936.1255 7759.6475 C
-7932.0264 7759.6475 L
-7932.0264 7760.3672 L
-7935.4834 7760.3672 L
-7935.1318 7760.6777 -7934.8223 7761.4863 -7935.0386 7761.8574 C
-7932.0264 7761.8574 L
-7932.0264 7762.9385 L
-7935.1689 7762.9385 L
-7935.2935 7763.4492 -7935.5439 7763.8857 -7935.8218 7764.3311 C
-7932.0264 7764.3311 L
-7932.0264 7765.9873 L
-7936.7354 7765.9873 L
-7936.9424 7766.4453 -7937.1016 7766.9082 -7937.1768 7767.4121 C
-7932.0264 7767.4121 L
-7932.0264 7768.4922 L
-7937.1714 7768.4922 L
-7937.1074 7768.9834 -7936.9614 7769.4668 -7936.7378 7769.9111 C
-7932.0264 7769.9111 L
-7932.0264 7770.6309 L
-7936.2744 7770.6309 L
-7935.9375 7771.0039 -7934.8535 7771.5938 -7934.9375 7772.0225 C
-7932.0239 7772.0225 L
-7932.0239 7772.4824 L
-7932.3721 7772.4824 L
-7932.3721 7773.6826 L
-7932.0239 7773.6826 L
-7932.0239 7774.1426 L
-7939.9736 7774.1426 L
-7940.4082 7774.4375 -7941.2192 7774.4521 -7941.9897 7774.1426 C
-7945.8564 7774.1426 L
-7946.1162 7774.4609 -7947.1807 7774.5693 -7947.6846 7774.1426 C
-7948.8232 7774.1426 L
-7949.0439 7774.3994 -7949.3174 7774.6387 -7949.6782 7774.8975 C
-7932.0264 7774.8975 L
-7932.0264 7775.3809 L
-7950.8394 7775.3809 L
-7951.1982 7775.5615 -7952.2417 7775.8389 -7953.3774 7775.3809 C
-7963.6406 7775.3809 L
-7963.6406 7785.6494 L
-7963.1826 7786.7861 -7963.4614 7787.8281 -7963.6455 7788.1895 C
-7963.6455 7807 L
-7964.1279 7807 L
-7964.1279 7789.3477 L
-7964.3838 7789.709 -7964.6235 7789.9824 -7964.8794 7790.2031 C
-7964.8794 7791.3418 L
-7964.4536 7791.8457 -7964.5615 7792.9082 -7964.8794 7793.1689 C
-7964.8794 7797.0361 L
-7964.5698 7797.8076 -7964.5854 7798.6182 -7964.8833 7799.0518 C
-7964.8833 7806.998 L
-7965.3394 7806.998 L
-7965.3394 7806.6543 L
-7966.5435 7806.6543 L
-7966.5435 7806.998 L
-7967.0039 7806.998 L
-7967.0039 7804.0879 L
-7967.4287 7804.1738 -7968.0186 7803.0898 -7968.3955 7802.752 C
-7968.3955 7806.9951 L
-7969.1113 7806.9951 L
-7969.1113 7802.2891 L
-7969.5552 7802.0654 -7970.0376 7801.9189 -7970.5298 7801.8555 C
-7970.5298 7806.9951 L
-7971.6138 7806.9951 L
-7971.6138 7801.8496 L
-7972.1143 7801.9248 -7972.5767 7802.085 -7973.0391 7802.29 C
-7973.0391 7806.9951 L
-7974.6958 7806.9951 L
-7974.6958 7803.2041 L
-7975.1362 7803.4824 -7975.5728 7803.7324 -7976.0854 7803.8555 C
-7976.0854 7806.9951 L
-7977.1689 7806.9951 L
-7977.1689 7803.9893 L
-7977.5552 7804.1289 -7978.3486 7803.8945 -7978.6543 7803.543 C
-7978.6543 7806.9951 L
-7979.3794 7806.9951 L
-7979.3794 7802.9014 L
-7979.4634 7802.209 -7979.1382 7801.8457 -7979.0015 7801.7227 C
-7972.3359 7796.6885 -7976.5713 7790.1309 -7980.9658 7786.2959 C
-7980.9658 7789.5244 L
-7980.6919 7789.2344 -7980.48 7788.8555 -7980.1558 7787.625 C
-7980.0127 7788.4414 -7980.4526 7789.4082 -7980.7246 7789.8711 C
-7977.9575 7789.8828 L
-7977.6831 7790.3047 L
-7981.0103 7790.3066 L
-7981.3066 7790.7168 -7981.6455 7791.084 -7981.98 7791.4512 C
-7976.9951 7791.6475 L
-7976.7817 7791.9814 L
-7982.3774 7791.8984 L
-7982.7202 7792.2998 -7983.0361 7792.7266 -7983.2681 7793.2314 C
-7976.3535 7793.3926 L
-7976.3169 7793.6113 L
-7983.4546 7793.7227 L
-7983.5742 7794.1094 -7983.6465 7794.5439 -7983.6514 7795.0449 C
-7976.0688 7794.8262 L
-7976.0688 7794.9951 L
-7983.6362 7795.543 L
-7983.6113 7795.9746 -7983.5615 7796.3545 -7983.4888 7796.6895 C
-7976.0142 7796.0781 L
-7975.9995 7796.3145 L
-7983.3599 7797.1777 L
-7983.2314 7797.585 -7983.0654 7797.916 -7982.8755 7798.1973 C
-7976.2485 7797.7354 L
-7976.3945 7797.9932 L
-7982.5034 7798.6572 L
-7982.0215 7799.168 -7981.4521 7799.502 -7980.9238 7799.9336 C
-7976.9946 7799.2139 L
-7977.3135 7799.6768 L
-7980.4878 7800.334 L
-7979.4409 7801.2373 -7979.4814 7802.9297 -7979.6914 7802.7637 c
-7979.8657 7802.627 -7979.9985 7801.8281 -7979.9897 7801.8486 c
-7980.2656 7801.2637 -7980.6035 7800.8438 -7980.9697 7800.502 C
-7980.9697 7807 L
-7981.4536 7807 L
-7981.4536 7800.085 L
-7982.6582 7799.1377 -7983.9551 7798.5674 -7984.1167 7795.4111 c
-7984.25 7792.8311 -7982.5562 7791.7656 -7981.4497 7790.2871 C
-7981.4497 7785.7441 L
-7982.5767 7784.418 -7983.5225 7782.9912 -7983.9614 7781.1455 C
-7984.8809 7776.3662 -7981.7568 7770.8545 -7976.7959 7770.4863 C
-7976.7183 7770.6133 L
-7981.1494 7771.5352 -7983.8442 7776.6641 -7982.9814 7781.1455 C
-7982.0635 7785.0029 -7978.9395 7787.0234 -7976.5503 7790.1475 C
-7974.8975 7792.5361 -7974.3457 7795.1094 -7975.0806 7797.8652 c
-7975.8545 7800.6133 -7978.25 7801.5977 -7978.5649 7802.5303 c
-7978.8506 7803.375 -7977.6689 7803.7002 -7976.6968 7803.6348 C
-7974.5454 7803.4395 -7973.1602 7800.4922 -7969.3184 7801.7559 c
-7968.2222 7802.1162 -7967.5913 7802.9375 -7967.3042 7803.5469 c
-7967.1104 7803.957 -7965.7241 7803.4395 -7966.9165 7801.2207 C
-7969.8774 7801.0879 -7969.4521 7799.0645 -7969.2026 7799.2109 c
-7967.5015 7800.209 -7966.1826 7798.3047 -7967.1055 7797.2959 c
-7969.2129 7794.9902 -7970.8481 7795.2861 -7972.9248 7791.3174 c
-7975.2095 7786.9521 -7976.2695 7781.0723 -7973.7959 7776.9082 C
-7973.7954 7776.1387 L
-7974.0479 7775.5439 -7974.0249 7775.085 -7974.2134 7774.168 c
-7974.3818 7773.3535 -7974.6689 7773.085 -7974.9575 7772.9121 C
-7975.1304 7772.7969 -7975.5015 7772.9053 -7975.5054 7773.1445 c
-7975.52 7773.7461 -7974.7842 7773.5225 -7974.8271 7773.584 c
-7975.1895 7774.0869 -7975.7329 7773.7295 -7975.8345 7773.377 c
-7975.9648 7772.9287 -7975.6606 7772.5762 -7975.3145 7772.4902 C
-7974.6655 7772.3594 -7974.1968 7772.9277 -7973.9575 7773.457 c
-7973.4365 7774.6074 -7973.4746 7776.252 -7972.2607 7776.8574 c
-7971.4385 7777.2471 -7970.5537 7776.9277 -7969.7271 7776.6328 c
-7966.8296 7775.6016 -7963.3096 7772.082 -7962.2783 7769.1836 c
-7961.9834 7768.3574 -7961.6641 7767.4727 -7962.0537 7766.6494 c
-7962.6606 7765.4375 -7964.3042 7765.4746 -7965.4546 7764.9541 c
-7965.9834 7764.7148 -7966.5513 7764.2461 -7966.4214 7763.5967 C
-7966.3345 7763.25 -7965.9824 7762.9473 -7965.5327 7763.0762 c
-7965.1826 7763.1797 -7964.8242 7763.7227 -7965.3281 7764.084 c
-7965.3882 7764.127 -7965.1655 7763.3906 -7965.7681 7763.4053 c
-7966.0054 7763.4111 -7966.1143 7763.7813 -7965.9995 7763.9541 C
-7965.8257 7764.2422 -7965.5591 7764.5293 -7964.7422 7764.6973 c
-7963.7085 7764.9102 -7963.2578 7764.8535 -7962.5386 7765.2266 C
-7962.1167 7765.2266 L
-7957.9546 7762.7529 -7952.0674 7763.8008 -7947.7095 7766.0977 c
-7947.0527 7766.4551 -7946.4834 7766.8008 -7945.9126 7767.1475 c
-7944.5488 7767.9766 -7942.5542 7770.8857 Y
-7942.1782 7771.332 -7941.9521 7771.7979 -7941.5225 7772.0625 c
-7940.3569 7772.7783 -7938.8184 7771.5215 -7939.8154 7769.8193 c
-7939.9614 7769.5703 -7937.9385 7769.1455 -7937.8057 7772.1064 C
-7935.5874 7773.2988 -7935.0698 7771.9121 -7935.4795 7771.7178 c
-7936.0889 7771.4316 -7936.9087 7770.7998 -7937.2705 7769.7041 c
-7938.5342 7765.8623 -7935.3599 7764.0234 -7935.4463 7762.3262 C
-7935.3008 7761.5322 -7935.6514 7760.1719 -7936.4961 7760.459 c
-7937.4282 7760.7725 -7938.4126 7763.168 -7941.1606 7763.9414 c
-7943.9175 7764.6768 -7946.4897 7764.125 -7948.8774 7762.4717 C
-7952.0034 7760.084 -7954.0234 7756.959 -7957.8818 7756.041 C
-7962.3623 7755.1777 -7967.4902 7757.873 -7968.4126 7762.3037 C
-7968.5391 7762.2266 L
-7968.1729 7757.2656 -7962.6592 7754.1426 -7957.8818 7755.0615 C
-7956.0361 7755.502 -7954.6104 7756.4453 -7953.2822 7757.5723 C
-7948.7393 7757.5723 L
-7947.2607 7756.4668 -7946.1943 7754.7725 -7943.6143 7754.9053 c
-7940.4585 7755.0664 -7939.8882 7756.3633 -7938.9409 7757.5723 C
-7932.0264 7757.5723 L
-7932.0264 7758.0566 L
f
0 D
-7961.1362 7767.4121 m
-7953.5166 7767.4121 L
-7954.5635 7766.8301 -7955.5435 7766.3184 -7956.8057 7765.9873 C
-7961.6079 7765.9873 L
-7961.2998 7766.3809 -7961.1055 7766.8701 -7961.1362 7767.4121 C
f
-7962.0591 7769.9111 m
-7950.5254 7769.9111 L
-7950.6338 7769.6201 -7951.0063 7768.9404 -7951.8042 7768.4922 C
-7961.4321 7768.4922 L
-7961.6118 7768.9727 -7961.8232 7769.4463 -7962.0591 7769.9111 C
f
-7950.8096 7772.0225 m
-7950.3174 7771.4395 -7950.2568 7771.2207 -7950.3857 7770.6309 C
-7962.4521 7770.6309 L
-7962.7295 7771.1074 -7963.0322 7771.5723 -7963.3599 7772.0225 C
-7955.2568 7772.0225 L
-7954.9111 7771.2041 -7954.1665 7771.3711 -7953.8218 7772.0225 C
-7950.8096 7772.0225 L
f
-7952.1201 7772.4824 m
-7952.1201 7772.8242 L
-7951.5664 7772.7861 -7951.4995 7772.752 -7951.1982 7772.4824 C
-7952.1201 7772.4824 L
f
-7953.4863 7772.4824 m
-7953.3311 7772.6719 -7953.0264 7772.8154 -7952.8257 7772.8457 C
-7952.8257 7772.4824 L
-7953.4863 7772.4824 L
f
-7956.3535 7772.4824 m
-7956.3535 7773.6826 L
-7955.6465 7773.6826 L
-7955.6465 7772.4824 L
-7956.3535 7772.4824 L
f
-7957.7622 7772.4824 m
-7957.7622 7773.6826 L
-7957.0576 7773.6826 L
-7957.0576 7772.4824 L
-7957.7622 7772.4824 L
f
-7959.1729 7772.4824 m
-7959.1729 7773.6826 L
-7958.4678 7773.6826 L
-7958.4678 7772.4824 L
-7959.1729 7772.4824 L
f
-7960.5835 7772.4824 m
-7960.5835 7773.6826 L
-7959.8774 7773.6826 L
-7959.8774 7772.4824 L
-7960.5835 7772.4824 L
f
-7961.9946 7772.4824 m
-7961.9946 7773.6826 L
-7961.2886 7773.6826 L
-7961.2886 7772.4824 L
-7961.9946 7772.4824 L
f
-7967 7783.7695 m
-7967 7775.6504 L
-7967.4497 7775.9756 -7967.9146 7776.2754 -7968.3911 7776.5449 C
-7968.3911 7788.6406 L
-7967.8018 7788.7695 -7967.5825 7788.709 -7967 7788.2158 C
-7967 7785.2041 L
-7967.6514 7784.8613 -7967.8169 7784.1152 -7967 7783.7695 C
f
-7966.5391 7783.3799 m
-7965.3394 7783.3799 L
-7965.3394 7782.6748 L
-7966.5391 7782.6748 L
-7966.5391 7783.3799 L
f
-7965.3394 7781.9688 m
-7965.3394 7781.2637 L
-7966.5391 7781.2637 L
-7966.5391 7781.9688 L
-7965.3394 7781.9688 L
f
-7965.3394 7780.5586 m
-7965.3394 7779.8535 L
-7966.5391 7779.8535 L
-7966.5391 7780.5586 L
-7965.3394 7780.5586 L
f
-7965.3394 7779.1484 m
-7965.3394 7778.4434 L
-7966.5391 7778.4434 L
-7966.5391 7779.1484 L
-7965.3394 7779.1484 L
f
-7965.3394 7777.7373 m
-7965.3394 7777.0313 L
-7966.5391 7777.0313 L
-7966.5391 7777.7373 L
-7965.3394 7777.7373 L
f
-7965.3394 7776.3262 m
-7965.3394 7775.6201 L
-7966.5391 7775.6201 L
-7966.5391 7776.3262 L
-7965.3394 7776.3262 L
f
-7965.3394 7774.918 m
-7965.3394 7774.2725 L
-7965.5728 7774.4941 -7965.8135 7774.709 -7966.0591 7774.918 C
-7965.3394 7774.918 L
f
-7963.4058 7773.6826 m
-7962.6992 7773.6826 L
-7962.6992 7772.4824 L
-7963.4058 7772.4824 L
-7963.4058 7773.6826 L
f
-7964.7495 7773.6826 m
-7964.1094 7773.6826 L
-7964.1094 7772.9746 L
-7964.3159 7773.2158 -7964.5288 7773.4521 -7964.7495 7773.6826 C
f
-7970.5298 7777.5273 m
-7970.5298 7787.2227 L
-7970.0815 7788.0186 -7969.4014 7788.3926 -7969.1113 7788.502 C
-7969.1113 7776.9258 L
-7969.5762 7777.1563 -7970.0488 7777.3564 -7970.5298 7777.5273 C
f
-7973.0352 7777.209 m
-7973.0352 7782.2207 L
-7972.7041 7783.4844 -7972.1929 7784.4629 -7971.6094 7785.5098 C
-7971.6094 7777.7725 L
-7972.1606 7777.7705 -7972.6494 7777.5439 -7973.0352 7777.209 C
f
-7965.3394 7805.2441 m
-7966.5391 7805.2441 L
-7966.5391 7805.9482 L
-7965.3394 7805.9482 L
-7965.3394 7805.2441 L
f
-7965.3394 7803.834 m
-7966.3896 7803.834 L
-7966.4375 7803.8838 -7966.4878 7803.9297 -7966.5391 7803.9678 C
-7966.5391 7804.5381 L
-7965.3394 7804.5381 L
-7965.3394 7803.834 L
f
-7965.3394 7802.4209 m
-7966.0039 7802.4209 L
-7965.9702 7802.6475 -7965.9595 7802.9121 -7966.0137 7803.1279 C
-7965.3394 7803.1279 L
-7965.3394 7802.4209 L
f
-7965.3394 7801.0117 m
-7966.5015 7801.0117 L
-7966.3872 7801.2461 -7966.2798 7801.4814 -7966.1919 7801.7168 C
-7965.3394 7801.7168 L
-7965.3394 7801.0117 L
f
-7965.3394 7799.9033 m
-7965.4614 7800.0625 -7965.5938 7800.2197 -7965.6753 7800.3066 C
-7965.3394 7800.3066 L
-7965.3394 7799.9033 L
f
-7965.4399 7784.4395 m
-7965.6968 7784.2891 -7967.0845 7783.8135 -7967.0737 7784.5381 c
-7967.0674 7784.9502 -7966.4512 7785.2412 -7966.2495 7785.4473 c
-7965.6338 7786.0703 -7965.1885 7787.5254 -7966.2974 7788.4238 c
-7968.6328 7790.3145 -7970.1865 7788.5879 Y
-7974.1118 7784.7324 -7974.1104 7779.1113 Y
-7975.2295 7783.334 -7973.9663 7788.3936 -7972.4048 7791.1426 c
-7969.8818 7795.584 -7968.9575 7794.0566 -7966.6113 7796.9482 c
-7965.8047 7797.9434 -7966.1294 7800.3818 -7968.9546 7799.75 c
-7969.2026 7799.6934 -7968.7759 7800.2949 -7968.2681 7800.5498 c
-7966.1104 7801.6406 -7964.8618 7799.1631 -7965.1338 7797.8594 c
-7965.4761 7796.2109 -7966.0986 7795.3662 -7968.1616 7794.2246 C
-7967.8311 7794.2373 -7966.2134 7794.541 -7965.2295 7793.0088 c
-7965.0195 7792.6826 -7964.8745 7791.7578 -7965.3042 7791.877 c
-7965.3906 7791.9023 -7965.6416 7792.1973 -7965.9414 7792.3613 c
-7967.9321 7793.3945 -7968.7075 7791.0137 Y
-7966.4165 7790.8418 -7965.7515 7790.7637 -7964.2559 7788.7637 c
-7964.0542 7788.4941 -7963.1162 7785.8047 -7965.4399 7784.4395 c
f
-7966.5391 7791.1367 m
-7966.5391 7792.0225 L
-7966.2993 7791.998 -7965.9302 7791.957 -7965.3394 7791.4033 C
-7965.3394 7791.1367 L
-7966.5391 7791.1367 L
f
-7967.9946 7791.2305 m
-7967.8042 7791.7031 -7967.4185 7791.9473 -7967 7792.0127 C
-7967 7791.1709 L
-7967.3857 7791.2354 -7967.9946 7791.2305 Y
f
-7965.3394 7794.666 m
-7965.3394 7793.959 L
-7965.6382 7793.959 L
-7965.9136 7794.1475 -7966.2246 7794.293 -7966.5391 7794.3818 C
-7966.5391 7794.666 L
-7965.3394 7794.666 L
f
-7965.9897 7795.3682 m
-7965.7935 7795.5342 -7965.5576 7795.7813 -7965.3394 7796.1084 C
-7965.3394 7795.3682 L
-7965.9897 7795.3682 L
f
-7967.2495 7794.4746 m
-7967.1914 7794.5273 -7967.1025 7794.5967 -7967 7794.6719 C
-7967 7794.4668 L
-7967.0835 7794.4746 -7967.1675 7794.4785 -7967.2495 7794.4746 C
f
-7966.5391 7786.9063 m
-7966.5391 7787.8262 L
-7966.2715 7787.5273 -7966.2358 7787.46 -7966.1982 7786.9063 C
-7966.5391 7786.9063 L
f
-7966.1758 7786.2012 m
-7966.2065 7786.002 -7966.3506 7785.6943 -7966.5391 7785.54 C
-7966.5391 7786.2012 L
-7966.1758 7786.2012 L
f
-7954.1865 7774.8975 m
-7954.4233 7774.6943 -7954.6401 7774.4463 -7954.8271 7774.1426 C
-7964.8794 7774.1426 L
-7964.8794 7784.1992 L
-7964.5762 7784.3857 -7964.3271 7784.6025 -7964.1255 7784.8408 C
-7964.1265 7774.8975 L
-7954.1865 7774.8975 L
f
-7947.6226 7773.6826 m
-7947.0698 7773.0928 -7947.0298 7772.7227 -7947.0034 7772.4824 C
-7947.8887 7772.4824 L
-7947.8887 7773.6826 L
-7947.6226 7773.6826 L
f
-7947.8564 7772.0225 m
-7947.0127 7772.0225 L
-7947.0791 7771.6045 -7947.3232 7771.2188 -7947.7959 7771.0273 C
-7947.7915 7771.6367 -7947.8564 7772.0225 V
f
-7944.3623 7772.4824 m
-7944.6455 7772.4824 L
-7944.7334 7772.7979 -7944.8799 7773.1084 -7945.0674 7773.3838 C
-7945.0674 7773.6826 L
-7944.3623 7773.6826 L
-7944.3623 7772.4824 L
f
-7944.3545 7772.0225 m
-7944.4302 7771.9199 -7944.4995 7771.8311 -7944.5518 7771.7734 C
-7944.5479 7771.8555 -7944.5518 7771.9395 -7944.5601 7772.0225 C
-7944.3545 7772.0225 L
f
-7942.9185 7773.6826 m
-7943.2446 7773.4648 -7943.4912 7773.2305 -7943.6577 7773.0332 C
-7943.6577 7773.6826 L
-7942.9185 7773.6826 L
f
-7938.7202 7773.3477 m
-7938.8066 7773.4287 -7938.9639 7773.5615 -7939.1226 7773.6826 C
-7938.7202 7773.6826 L
-7938.7202 7773.3477 L
f
-7938.4751 7770.7549 m
-7938.7329 7770.2461 -7939.0913 7769.8945 -7939.2778 7770.0684 c
-7939.4248 7770.2041 -7938.4424 7771.9434 -7939.9009 7772.7725 c
-7940.7158 7773.2354 -7941.8721 7772.873 -7942.2842 7772.3066 c
-7944.5615 7769.1836 -7944.4746 7768.5586 -7947.8848 7766.6172 c
-7950.6318 7765.0537 -7955.6943 7763.793 -7959.9155 7764.9121 C
-7954.2935 7764.9102 -7950.4385 7768.8359 V
-7948.7119 7770.3906 -7950.6025 7772.7246 v
-7951.5015 7773.834 -7952.9551 7773.3887 -7953.5791 7772.7734 c
-7953.7842 7772.5703 -7954.0752 7771.9551 -7954.4873 7771.9482 c
-7955.2134 7771.9385 -7954.7378 7773.3242 -7954.5874 7773.582 c
-7953.2217 7775.9063 -7950.5322 7774.9678 -7950.2622 7774.7656 c
-7948.2622 7773.2705 -7948.1846 7772.6064 -7948.0127 7770.3145 C
-7945.6328 7771.0898 -7946.6655 7773.0801 v
-7946.8286 7773.3809 -7947.1245 7773.6318 -7947.1489 7773.7178 c
-7947.2695 7774.1475 -7946.3423 7774.0029 -7946.0176 7773.7949 c
-7944.4858 7772.8086 -7944.7881 7771.1914 -7944.8018 7770.8613 C
-7943.6602 7772.9248 -7942.8154 7773.5469 -7941.1675 7773.8887 c
-7939.8633 7774.1602 -7937.3857 7772.9121 -7938.4751 7770.7549 c
f
-7937.3096 7772.8301 m
-7937.5454 7772.7422 -7937.7817 7772.6357 -7938.0142 7772.5215 C
-7938.0142 7773.6826 L
-7937.3096 7773.6826 L
-7937.3096 7772.8301 L
f
-7935.8994 7773.0088 m
-7936.1143 7773.0625 -7936.3794 7773.0518 -7936.6055 7773.0186 C
-7936.6055 7773.6826 L
-7935.8994 7773.6826 L
-7935.8994 7773.0088 L
f
-7933.7822 7773.6826 m
-7933.0767 7773.6826 L
-7933.0767 7772.4824 L
-7933.7822 7772.4824 L
-7933.7822 7773.6826 L
f
-7935.1934 7773.6826 m
-7934.4878 7773.6826 L
-7934.4878 7772.4824 L
-7935.0586 7772.4824 L
-7935.0967 7772.5342 -7935.1426 7772.585 -7935.1934 7772.6328 C
-7935.1934 7773.6826 L
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed 3)
0 A
u
u
0 J 0 j 1 w 4 M []0 d
0 XR
-4118.5 3934.291 m
-4019.5696 3934.291 L
-4019.5696 3917.9272 L
-4118.5 3917.9272 L
-4118.5 3934.291 L
n
u
u
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-4022.0071 3923.6094 m
-4021.7832 3923.5537 -4021.5879 3923.8643 -4021.6721 3924.0039 C
-4021.2161 3923.6274 -4021.2063 3924.0557 -4021.1472 3923.3262 C
-4020.8545 3922.9683 -4020.5422 3923.4639 -4020.8752 3923.7598 C
-4020.0313 3923.3135 L
-4020.5359 3923.1997 L
-4020.3984 3922.5933 -4019.7295 3923.3809 -4019.5696 3922.6743 C
-4020.4832 3922.7334 L
-4020.4375 3922.5313 L
-4020.6455 3922.749 -4021.0496 3922.6582 -4021.1904 3922.5732 C
-4021.1682 3922.4736 -4021.1824 3922.3115 -4021.0212 3922.2935 C
-4022.1243 3922.2471 -4021.3184 3923.3545 -4022.2336 3923.5557 C
-4022.1763 3923.541 -4022.1052 3923.5493 -4022.0071 3923.6094 C
f
-4022.9441 3922.125 m
-4023.3289 3922.8853 L
-4023.9744 3922.6895 L
-4023.9817 3922.9517 -4024.4519 3923.1641 -4024.1335 3923.3955 C
-4024.0713 3923.3545 -4023.9482 3923.2759 -4023.8489 3923.2998 C
-4023.9209 3923.8672 -4024.7073 3923.583 -4024.5176 3924.1572 C
-4024.0071 3924.0068 -4023.9287 3924.1318 -4023.6145 3923.6709 C
-4023.1465 3923.7236 -4022.8057 3923.8545 -4022.5872 3924.0615 C
-4022.4482 3923.9751 -4022.4287 3923.6274 -4022.2522 3923.5576 C
-4022.2913 3923.5664 -4022.3271 3923.5752 -4022.3721 3923.5796 C
-4022.3911 3922.7261 L
-4022.5383 3922.9063 -4022.6775 3922.8213 -4022.8408 3922.8389 C
-4022.0852 3921.8423 L
-4022.3289 3921.0435 -4023.0713 3921.5127 -4023.3679 3921.1807 C
-4023 3921.8984 -4023.6609 3921.5376 -4022.9441 3922.125 C
f
-4022.2522 3923.5576 m
-4022.2473 3923.5576 -4022.2393 3923.5566 -4022.2336 3923.5557 C
-4022.2393 3923.5566 -4022.2473 3923.5566 -4022.2522 3923.5576 C
f
-4078.7073 3928.5225 m
-4078.8679 3928.5376 -4078.9153 3928.7393 -4078.9385 3928.8408 C
-4077.1296 3928.8247 L
-4077.1863 3928.6006 -4077.7073 3928.3232 -4077.3591 3928.1895 C
-4077.5144 3927.9414 -4077.9873 3928.1533 -4078.0559 3928.4561 C
-4077.9248 3928.1143 L
-4078.3416 3928.5518 -4078.6262 3927.6919 -4078.3545 3927.4336 C
-4078.3896 3927.4385 L
-4079.5439 3929.123 L
-4079.1201 3929.2212 -4079.2175 3928.5435 -4078.7073 3928.5225 C
f
-4115.8564 3927.665 m
-4115.6221 3927.5869 -4115.5938 3927.5059 -4115.6201 3927.4229 C
-4115.7041 3927.4854 -4115.7842 3927.5576 -4115.8564 3927.665 C
f
-4079.8137 3929.5181 m
-4080.1753 3930.0454 L
-4080.0305 3929.9033 -4079.9033 3929.7139 -4079.8137 3929.5181 C
f
-4077.3088 3921.499 m
-4077.3081 3921.4712 -4077.3042 3921.4463 -4077.3137 3921.4087 C
-4077.4761 3921.6782 L
-4077.4736 3921.6782 -4077.4729 3921.6782 -4077.4719 3921.6782 C
-4077.4121 3921.6187 -4077.3584 3921.5591 -4077.3088 3921.499 C
f
-4088.0212 3931.499 m
-4088.0601 3931.5127 -4088.0935 3931.5181 -4088.1399 3931.5356 C
-4088.0967 3931.5313 -4088.0576 3931.5176 -4088.0212 3931.499 C
f
-4072.4087 3918.4854 m
-4073.2129 3918.9927 L
-4073.1057 3918.7524 -4073.4937 3918.8247 -4073.3242 3918.5449 C
-4073.3855 3918.583 -4073.6729 3918.6782 -4073.5945 3918.8013 C
-4073.4304 3918.7856 L
-4073.8545 3919.4854 -4073.5977 3919.7544 -4074.3008 3920.2871 C
-4073.8643 3920.7017 -4073.6729 3920.3223 -4073.4417 3920.0039 C
-4073.3633 3919.9551 -4073.2976 3919.9336 -4073.2312 3919.9072 C
-4072.5625 3918.9292 L
-4072.4087 3918.4854 L
f
-4104.6504 3923.6934 m
-4104.6416 3923.6392 L
-4104.6494 3923.6582 -4104.6514 3923.6763 -4104.6504 3923.6934 C
f
-4104.6064 3923.415 m
-4104.6416 3923.6392 L
-4104.5986 3923.5269 -4104.4326 3923.4199 -4104.6064 3923.415 C
f
-4079.6809 3929.0654 m
-4079.6919 3929.1953 -4079.7383 3929.3545 -4079.8137 3929.5181 C
-4079.5439 3929.123 L
-4079.5823 3929.1152 -4079.6328 3929.0879 -4079.6809 3929.0654 C
f
-4079.0671 3927.5376 m
-4078.3896 3927.4385 L
-4078.1399 3927.0752 L
-4078.3992 3927.2124 -4078.7024 3927.3062 -4079.0671 3927.5376 C
f
-4086.9512 3931.9102 m
-4088.3545 3932.0176 -4086.6064 3931.0869 -4087.2512 3930.8887 C
-4087.6409 3930.9854 -4087.7783 3931.3765 -4088.0212 3931.499 C
-4086.9082 3931.165 -4088.1721 3932.7856 -4087.0496 3932.5791 C
-4087.2092 3933.2856 -4087.8591 3933.3496 -4088.24 3933.1582 C
-4088.6711 3932.4771 -4087.8633 3932.6592 -4087.7656 3931.9912 C
-4088.2161 3932.1021 -4088.1367 3932.2261 -4088.3279 3932.6064 C
-4089.0352 3932.4478 -4089.7913 3933.4429 -4090.2136 3932.499 C
-4090.7256 3932.6494 -4090.6919 3932.9751 -4090.9863 3933.334 C
-4091.0449 3934.063 -4090.2249 3933.7168 -4090.0352 3934.291 C
-4090.0745 3934.2295 -4090.1511 3934.1064 -4090.1289 3934.0039 C
-4089.6863 3934.1572 L
-4090.1064 3933.9033 -4089.6279 3933.4287 -4089.4033 3933.3716 C
-4089.24 3933.3564 -4088.9153 3933.3232 -4088.96 3933.5254 C
-4089.2073 3933.6816 L
-4088.8889 3933.9126 -4088.5049 3933.1504 -4088.1687 3933.5454 C
-4088.1511 3933.709 -4088.2783 3933.7856 -4088.2976 3933.8877 C
-4087.9209 3933.3896 -4087.5576 3933.4185 -4087 3933.0664 C
-4087.3232 3933.7896 L
-4086.8772 3932.9893 -4085.8672 3933.2168 -4085.1672 3933.6392 C
-4085.2449 3933.5166 -4085.3848 3933.4307 -4085.3008 3933.291 C
-4084.8896 3933.1182 -4084.5791 3933.6143 -4084.7695 3933.9951 C
-4084.3679 3933.3955 -4083.2393 3934.5 -4082.6919 3933.7207 C
-4080.1753 3930.0454 L
-4080.2695 3930.1377 -4080.3704 3930.2124 -4080.4744 3930.2437 C
-4080.7031 3929.6094 -4080.8264 3929.6865 -4080.4255 3929.0879 C
-4080.8191 3929.4238 -4080.6687 3929.9336 -4081.26 3929.96 C
-4081.0281 3929.6406 -4080.9695 3928.9121 -4081.5359 3928.8369 C
-4082.9519 3929.4712 -4083.8904 3931.2759 -4085.2129 3932.1982 C
-4085.2617 3931.709 -4086.3 3931.8462 -4086.8047 3931.7314 C
-4086.6121 3931.2061 -4086.2375 3931.0566 -4085.8489 3930.9502 C
-4086.0928 3930.917 -4086.5127 3930.9033 -4086.8242 3930.8799 C
-4086.9512 3931.9102 L
f
-4083.6631 3930.2661 m
-4083.6985 3930.2227 -4083.7351 3930.1982 -4083.7727 3930.1753 C
-4083.7527 3930.2158 -4083.72 3930.2471 -4083.6631 3930.2661 C
f
-4085.7305 3930.9648 m
-4085.7256 3930.9473 -4085.7273 3930.9326 -4085.7256 3930.9126 C
-4085.7664 3930.9238 -4085.8071 3930.9385 -4085.8489 3930.9502 C
-4085.8071 3930.9541 -4085.76 3930.96 -4085.7305 3930.9648 C
f
-4080.0127 3927.9604 m
-4079.9287 3927.8213 -4079.8665 3927.7822 -4079.7825 3927.6416 C
-4079.8342 3927.6895 -4079.8992 3927.7271 -4079.9617 3927.7695 C
-4080.0212 3927.8354 -4080.0496 3927.9014 -4080.0127 3927.9604 C
f
-4079.7295 3928.8213 m
-4079.7744 3929.0225 L
-4079.7383 3929.0449 -4079.7129 3929.0493 -4079.6809 3929.0654 C
-4079.6711 3928.957 -4079.6816 3928.8662 -4079.7295 3928.8213 C
f
-4092.3137 3927.4873 m
-4092.4482 3927.5933 L
-4092.3672 3927.5854 -4092.3323 3927.542 -4092.3137 3927.4873 C
f
-4088.5144 3931.0796 m
-4088.0264 3931.0313 -4088.4561 3930.3496 -4087.7656 3930.3462 C
-4087.9683 3930.3013 L
-4087.4729 3929.9893 -4086.6023 3930.1328 -4086.0137 3930.1064 C
-4086.0801 3930.3984 -4085.6567 3930.4604 -4085.7256 3930.9126 C
-4085.3232 3930.8062 -4084.9248 3930.7061 -4084.7175 3930.2393 C
-4084.4683 3930.3926 -4084.0896 3929.9824 -4083.7727 3930.1753 C
-4083.9065 3929.9019 -4083.3215 3929.2515 -4084.0928 3929.5854 C
-4084.0305 3929.5479 -4084.0696 3929.4854 -4084.0081 3929.4473 C
-4084.5049 3929.0664 -4084.7041 3929.7124 -4085.1321 3929.7212 C
-4085.3879 3929.4517 -4084.7136 3929.2856 -4084.9551 3929.1782 C
-4085.4895 3929.4292 -4086.6321 3928.8535 -4086.5967 3929.8677 C
-4086.9856 3929.9395 -4087.0393 3929.7158 -4087.1553 3929.5303 C
-4087.7705 3930.6108 -4089.4385 3929.0664 -4089.4329 3930.4478 C
-4089.2083 3930.3936 -4088.8423 3930.4229 -4088.5127 3930.1274 C
-4088.5144 3931.0796 L
f
-4080.8323 3928.0313 m
-4080.8623 3928.0254 -4080.9023 3928.0303 -4080.9272 3928.0181 C
-4080.8992 3928.0254 -4080.8643 3928.0303 -4080.8323 3928.0313 C
f
*u
1 D
-4074.6736 3932.0356 m
-4074.8777 3932.9395 L
-4076.0398 3933.1553 -4076.46 3932.9014 -4077.4761 3932.9375 C
-4077.5537 3932.8135 -4077.4304 3932.7349 -4077.3679 3932.6953 C
-4078.0823 3932.7998 -4079.1511 3932.6104 -4079.6711 3933.0254 C
-4079.8984 3933.0181 -4080.4951 3932.7314 -4080.2693 3932.4648 C
-4080.3799 3932.5454 -4080.5063 3932.623 -4080.6335 3932.5942 C
-4080.6672 3932.2695 -4080.3489 3932.5015 -4080.3416 3932.2349 C
-4080.4424 3932.2134 -4080.4817 3932.1504 -4080.5049 3932.2524 C
-4080.3352 3931.9736 -4080.6809 3931.1509 -4079.8896 3931.1719 C
-4079.5833 3931.9307 -4080.4385 3931.2598 -4080.2576 3932.0967 C
-4079.9951 3932.1021 -4080.0256 3931.7783 -4080.0032 3931.6763 C
-4079.6687 3931.6953 -4079.6775 3931.9053 -4079.6953 3932.0967 C
-4079.5671 3931.8369 -4079.1465 3932.1982 -4078.9695 3931.8037 C
-4078.3191 3931.7393 -4079.0049 3932.4326 -4078.5801 3932.4229 C
-4078.3352 3931.5752 L
-4077.6289 3931.7349 L
-4076.6064 3931.4375 -4077.7751 3930.2705 -4076.6064 3929.791 C
-4076.76 3930.2334 -4076.2913 3930.9766 -4075.7473 3931.1533 C
-4076.0728 3931.1846 -4076.6743 3931.7373 -4077.0945 3931.4854 C
-4076.5022 3932.1494 -4077.9097 3931.5654 -4077.6023 3932.3252 C
-4077.3096 3931.9648 -4076.8215 3931.917 -4076.4409 3932.1108 C
-4076.5657 3932.1895 L
-4076.1609 3932.2793 -4075.8545 3931.3926 -4075.2959 3931.7314 C
-4075.0183 3931.7041 -4075.0703 3931.9429 -4075.1191 3932.1416 C
-4074.8843 3932.0142 -4074.6743 3931.8486 -4074.6736 3932.0356 C
f
0 D
-4075.2783 3932.2134 m
-4075.6497 3932.1294 L
-4075.5615 3932.2695 -4075.4231 3932.2646 -4075.2783 3932.2134 C
f
*U
-4028.1377 3922.2349 m
-4028.1008 3922.2573 -4028.0583 3922.2803 -4028.0249 3922.3037 C
-4028.0496 3922.2646 -4028.0923 3922.2471 -4028.1377 3922.2349 C
f
-4061.0967 3921.9102 m
-4060.8816 3921.9385 L
-4060.9656 3921.9092 -4061.0344 3921.9053 -4061.0967 3921.9102 C
f
-4056.2693 3919.1104 m
-4055.9551 3918.9126 L
-4056.0791 3918.9253 -4056.1763 3919.0039 -4056.2693 3919.1104 C
f
-4030.7024 3922.1768 m
-4030.7129 3922.1709 L
-4030.7305 3922.1846 -4030.7439 3922.2041 -4030.7625 3922.2158 C
-4030.7024 3922.1768 L
f
-4046.5872 3921.0933 m
-4046.5393 3921.165 -4046.4856 3921.23 -4046.4121 3921.2803 C
-4046.4209 3921.1963 -4046.4863 3921.1353 -4046.5872 3921.0933 C
f
-4056.3271 3919.1475 m
-4056.3191 3919.1553 -4056.3145 3919.1572 -4056.3081 3919.1631 C
-4056.2959 3919.1455 -4056.2825 3919.1265 -4056.2693 3919.1104 C
-4056.3271 3919.1475 L
f
-4063.2231 3919.4385 m
-4063.2693 3919.4648 -4063.3113 3919.4854 -4063.3608 3919.5225 C
-4063.2959 3919.5059 -4063.2561 3919.4741 -4063.2231 3919.4385 C
f
-4062.9199 3921.8408 m
-4062.9695 3921.8623 -4063.0168 3921.8887 -4063.0537 3921.9253 C
-4062.9199 3921.8408 L
f
-4070.3577 3920.1934 m
-4070.6472 3920.3145 L
-4070.5049 3920.3013 -4070.4199 3920.2544 -4070.3577 3920.1934 C
f
-4063.6863 3921.2856 m
-4063.7031 3921.3252 -4063.72 3921.3633 -4063.7312 3921.4014 C
-4063.6912 3921.375 -4063.6721 3921.3252 -4063.6863 3921.2856 C
f
-4026.2976 3924.7617 m
-4026.3042 3924.7617 -4026.3113 3924.7646 -4026.3152 3924.7646 C
-4026.3225 3924.8633 L
-4026.2976 3924.7617 L
f
-4025.5935 3923.5269 m
-4025.5105 3923.5015 -4025.4241 3923.479 -4025.3391 3923.457 C
-4025.4336 3923.4517 -4025.5256 3923.4785 -4025.5935 3923.5269 C
f
-4042.3809 3922.457 m
-4042.3042 3922.5796 -4042.1243 3922.7261 -4042.2083 3922.8662 C
-4042.0615 3922.6895 -4042.0713 3922.2603 -4042.3809 3922.457 C
f
-4027.7092 3930.0664 m
-4027.6631 3929.9517 -4027.6057 3929.8643 -4027.5481 3929.7783 C
-4027.6553 3929.9019 -4027.7493 3930.0039 -4027.7092 3930.0664 C
f
-4027.5481 3929.7783 m
-4027.4951 3929.7173 -4027.4385 3929.6533 -4027.3911 3929.5869 C
-4027.4463 3929.6416 -4027.4993 3929.7061 -4027.5481 3929.7783 C
f
-4044.3313 3929.4912 m
-4044.3503 3929.4336 -4044.3799 3929.3853 -4044.4199 3929.3701 C
-4044.4082 3929.4854 -4044.3762 3929.5103 -4044.3313 3929.4912 C
f
-4025.1335 3923.5928 m
-4025.0879 3923.3911 -4023.9817 3922.9517 -4024.9121 3922.8486 C
-4024.8762 3922.2192 -4024.3152 3922.5576 -4024.0671 3922.4019 C
-4024.2473 3922.2544 -4023.9775 3921.998 -4024.0322 3921.7734 C
-4024.1553 3921.8496 -4024.3015 3922.0303 -4024.5049 3921.9854 C
-4024.5984 3921.6982 -4024.2898 3921.5024 -4024.0488 3921.6104 C
-4024.3457 3921.2783 -4023.6721 3921.1118 -4024.0923 3920.8574 C
-4024.9905 3921.0791 -4025.6252 3921.3076 -4026.2568 3922.2261 C
-4025.7449 3922.0752 -4025.1721 3921.8877 -4024.7522 3922.1406 C
-4024.9287 3922.6846 L
-4025.4033 3922.2061 -4025.6963 3922.563 -4026.1631 3922.5127 C
-4025.1145 3922.8013 L
-4024.6233 3923.2544 -4024.9519 3923.3584 -4025.3391 3923.457 C
-4025.2439 3923.4639 -4025.1577 3923.4966 -4025.1335 3923.5928 C
f
-4025.8401 3928.3662 m
-4025.8225 3928.3809 L
-4025.8071 3928.3623 -4025.7881 3928.3496 -4025.7783 3928.3267 C
-4025.8401 3928.3662 L
f
-4070.3042 3931.2017 m
-4070.3943 3931.4077 L
-4070.3191 3931.3145 -4070.2959 3931.2515 -4070.3042 3931.2017 C
f
-4026.4656 3925.7314 m
-4026.4648 3925.7314 L
-4026.4719 3925.7373 -4026.4736 3925.7373 -4026.4656 3925.7314 C
f
-4068.0632 3931.2437 m
-4068.0664 3931.2583 -4068.0696 3931.2744 -4068.0752 3931.291 C
-4068.0671 3931.2744 -4068.0671 3931.2583 -4068.0632 3931.2437 C
f
-4067.4641 3919.5142 m
-4067.4683 3919.4893 -4067.4695 3919.4648 -4067.4792 3919.4404 C
-4067.5271 3919.4712 -4067.5039 3919.4966 -4067.4641 3919.5142 C
f
-4068.0615 3931.1934 m
-4068.0615 3931.21 -4068.0601 3931.2261 -4068.0632 3931.2437 C
-4068.0615 3931.2261 -4068.0576 3931.209 -4068.0615 3931.1934 C
f
-4057.1641 3929.1963 m
-4057.1985 3929.1021 -4057.2527 3929.0127 V
-4057.2737 3929.063 -4057.2527 3929.1221 -4057.1641 3929.1963 C
f
-4059.3152 3928.3911 m
-4059.3152 3928.3911 L
-4059.3289 3928.3711 -4059.3369 3928.3535 -4059.3545 3928.3311 C
-4059.3152 3928.3911 L
f
-4042.8896 3920.0068 m
-4042.9961 3919.999 -4043.0759 3920.0127 -4043.1433 3920.0356 C
-4043.0657 3920.0493 -4042.9817 3920.0479 -4042.8896 3920.0068 C
f
-4068.0752 3931.291 m
-4068.0977 3931.3486 -4068.1296 3931.4077 -4068.1824 3931.4814 c
-4068.1243 3931.4033 -4068.0935 3931.3433 -4068.0752 3931.291 C
f
-4053.8843 3926.4478 m
-4053.9072 3926.4692 -4053.9287 3926.4893 -4053.9504 3926.5078 C
-4053.9373 3926.5181 -4053.9241 3926.5225 -4053.9111 3926.5352 C
-4053.8843 3926.4478 L
f
-4052.7617 3926.8486 m
-4052.8 3926.9102 -4052.8176 3926.9741 -4052.8391 3927.0303 C
-4052.4385 3926.8037 -4051.7024 3927.0493 -4051.6152 3926.4712 C
-4051.7512 3926.4854 -4052.4561 3926.1455 -4052.3359 3925.8062 C
-4052.6152 3925.9512 -4053.0281 3925.5454 -4053.1785 3925.6406 C
-4052.72 3925.957 -4053.1289 3926.1289 -4053.4385 3926.3232 C
-4053.72 3926.1553 -4053.3855 3925.8584 -4053.6279 3925.7515 C
-4054.2793 3925.8145 L
-4053.7119 3925.8916 L
-4053.8843 3926.4478 L
-4053.8633 3926.4292 -4053.8489 3926.417 -4053.8264 3926.3955 C
-4052.8665 3926.1353 -4053.7449 3927.21 -4052.7617 3926.8486 C
f
-4052.8391 3927.0303 m
-4052.8992 3927.0654 -4052.9519 3927.1079 -4052.9929 3927.167 C
-4052.9023 3927.1582 -4052.8672 3927.1016 -4052.8391 3927.0303 C
f
-4048.9172 3927.9478 m
-4048.8679 3927.9292 -4048.8145 3927.9033 -4048.7473 3927.8599 c
-4048.7793 3927.8809 -4048.8535 3927.9077 -4048.9172 3927.9478 C
f
-4077.6584 3927.167 m
-4077.6416 3927.3311 -4077.0823 3927.6685 -4077.0923 3927.2407 C
-4077.0923 3927.2407 L
-4077.2583 3927.1982 -4077.4255 3927.1533 -4077.5935 3927.1064 C
-4077.6584 3927.167 L
f
-4038.2336 3925.4604 m
-4038.2959 3925.4478 -4038.3584 3925.4429 -4038.4209 3925.4502 C
-4038.4343 3925.4712 -4038.4473 3925.4951 -4038.4573 3925.5166 C
-4038.4192 3925.5796 -4038.2959 3925.5015 -4038.2336 3925.4604 C
f
-4052.1631 3925.605 m
-4052.2656 3925.6709 -4052.3113 3925.7383 -4052.3359 3925.8062 C
-4052.2695 3925.7725 -4052.2083 3925.7173 -4052.1631 3925.605 C
f
-4038.1985 3926.4785 m
-4038.1191 3926.6006 -4038.0022 3926.7871 -4037.9856 3926.9502 C
-4037.8232 3926.9541 -4037.7092 3926.7295 -4037.5439 3926.6494 C
-4037.7305 3926.7119 -4037.9463 3926.6685 -4038.1985 3926.4785 C
f
-4037.5305 3926.6416 m
-4037.5352 3926.6455 -4037.5398 3926.6475 -4037.5439 3926.6494 C
-4037.5393 3926.6494 -4037.5352 3926.644 -4037.5305 3926.6416 C
f
*u
1 D
-4077.9912 3926.9854 m
-4078.0393 3927.0181 -4078.0889 3927.0479 -4078.1399 3927.0752 C
-4078.0625 3926.9604 L
-4078.1912 3926.9185 -4078.3191 3926.8774 -4078.4473 3926.8311 C
-4078.4937 3926.8584 -4078.5439 3926.8843 -4078.6057 3926.8984 C
-4078.5808 3926.8843 -4078.5615 3926.8389 -4078.5496 3926.792 C
-4078.5913 3926.7764 -4078.6321 3926.7593 -4078.6729 3926.7422 C
-4078.9792 3927.1851 -4079.7417 3927.5088 -4079.9617 3927.7695 C
-4080.2527 3927.959 -4080.6089 3928.0664 -4080.8323 3928.0313 C
-4080.6252 3928.041 -4080.3503 3927.9517 -4080.4329 3927.707 C
-4080.8533 3927.4517 -4081.0576 3926.7173 -4081.7832 3927.3486 C
-4081.3577 3927.3389 L
-4082.3145 3928.2896 L
-4082.6497 3927.8955 -4081.8369 3927.8145 -4081.7041 3927.4727 C
-4082.4482 3927.9414 -4083.0671 3926.6895 -4083.4121 3927.5127 C
-4083.4607 3927.0244 -4083.5422 3926.21 -4084.0305 3926.2583 C
-4083.6785 3926.8145 -4084.3232 3926.6157 -4084.0344 3927.2119 C
-4084.2031 3927.4912 -4084.5791 3927.0356 -4084.6072 3927.4014 C
-4084.5615 3927.1992 L
-4085.3953 3926.4263 -4085.6682 3927.6377 -4086.0249 3928.0356 C
-4087.0232 3928.2349 -4087.4817 3927.9185 -4088.2959 3928.0015 C
-4088.3279 3927.6743 -4088.5496 3926.7744 -4088.8762 3926.8086 C
-4089.0281 3927.2515 -4089.7649 3927.4561 -4089.8401 3928.0225 C
-4089.2561 3928.2598 -4089.3623 3927.5479 -4089.0127 3927.415 C
-4088.7217 3928.0093 -4088.9863 3928.0024 -4088.5889 3928.3584 C
-4088.9097 3928.1274 -4090.0383 3928.6685 -4090.3896 3928.1104 C
-4090.2656 3928.0313 L
-4090.8264 3927.6934 -4090.9336 3926.291 -4091.8679 3927.1396 C
-4092.3137 3927.4873 L
-4092.2922 3927.4307 -4092.2898 3927.3643 -4092.2783 3927.3135 C
-4093.0081 3927.2544 -4092.8088 3926.6094 -4093.6145 3927.1182 c
-4093.5522 3927.0791 -4093.5913 3927.0166 -4093.5281 3926.9785 C
-4093.9873 3926.6597 -4094.4504 3927.2998 -4094.7976 3927.4336 C
-4095.0095 3926.9604 -4094.7473 3926.9683 -4094.6162 3926.6265 C
-4095.4241 3926.4429 -4096.2959 3927.2544 -4096.7979 3927.8311 C
-4097.3184 3927.5537 L
-4097.0098 3927.3584 -4096.6318 3926.8599 -4096.7266 3926.5742 C
-4097.0127 3926.6685 -4096.957 3926.8926 -4097.3623 3926.8013 C
-4097.293 3926.499 -4097.123 3926.2173 -4096.9326 3925.8369 C
-4097.7705 3925.3311 -4097.1201 3926.9092 -4097.7061 3925.9814 C
-4097.9697 3925.9751 -4098.1221 3926.417 -4098.1514 3926.7822 C
-4098.6279 3926.3037 L
-4098.6807 3926.7695 -4099.2695 3926.7959 -4099.6553 3926.8662 C
-4099.7021 3927.0664 -4099.3447 3927.3623 -4099.1982 3927.1816 C
-4099.2275 3927.5479 -4099.6377 3927.7192 -4099.9014 3927.7124 C
-4099.998 3926.7373 -4101.6299 3927.8535 -4101.3174 3926.7041 C
-4102.5029 3927.021 -4104.1689 3927.1201 -4104.9512 3927.5269 C
-4105.209 3927.2573 -4105.7354 3927.2437 -4105.4199 3926.7856 C
-4106.374 3926.7822 -4106.8662 3927.7832 -4107.8135 3927.5166 C
-4107.8921 3927.394 -4107.3857 3927.5078 -4107.4189 3927.1816 C
-4108.0381 3927.5732 -4108.5459 3926.7695 -4109.5063 3927.0303 C
-4109.3447 3927.0127 -4109.2979 3926.8115 -4109.2754 3926.71 C
-4109.2583 3926.8716 -4109.6689 3927.0454 -4109.917 3927.2017 C
-4110.0566 3927.1182 -4109.7314 3927.0854 -4109.8096 3926.9604 C
-4111.665 3926.4873 -4113.0791 3927.8135 -4114.9248 3927.7695 c
-4114.3975 3927.7822 -4114.1982 3927.1353 -4114.1929 3926.8716 C
-4114.709 3926.8599 L
-4114.9082 3927.1816 -4115.2959 3927.1816 -4115.6201 3927.4229 C
-4115.6602 3927.3013 -4115.8174 3927.1709 -4115.6567 3927.0181 C
-4116.6768 3926.3643 -4117.25 3928.1982 -4118.5 3927.8623 C
-4116.9863 3926.5591 L
-4117.3608 3926.105 L
-4116.6953 3925.5127 L
-4117.0928 3925.1553 -4117.4385 3925.9814 -4117.4863 3925.4912 C
-4117.4023 3925.3535 -4117.2002 3925.3975 -4117.1934 3925.1328 C
-4117.5752 3924.9414 -4117.6055 3925.3062 -4117.8921 3925.4014 C
-4117.1362 3924.4053 -4115.6543 3924.4209 -4114.8564 3924.1768 C
-4114.7314 3924.0977 -4114.9639 3924.417 -4114.9863 3924.5181 C
-4114.6611 3924.4854 -4114.4658 3924.7959 -4114.0557 3924.623 C
-4113.8018 3924.2017 -4114.25 3924.3135 -4114.4521 3924.2695 C
-4114.4238 3923.9033 -4114.3223 3923.9253 -4114.0977 3923.8701 C
-4114.0488 3924.3584 -4112.8633 3924.0435 -4112.5732 3924.6392 C
-4111.3721 3924.4854 -4112.7656 3923.375 -4111.5928 3923.5869 C
-4111.2422 3924.1455 L
-4110.5615 3923.7139 -4109.6807 3923.3311 -4108.9102 3923.4502 C
-4109.0728 3923.4683 L
-4109.1807 3923.707 -4109.002 3923.8545 -4108.9229 3923.9766 C
-4108.3408 3924.2158 -4107.8174 3923.5376 -4107.4648 3924.0967 C
-4106.8008 3923.5024 -4105.6934 3923.063 -4104.9346 3922.7568 C
-4104.7295 3923.4932 -4105.9248 3923.3809 -4106.2407 3923.8413 C
-4105.5498 3923.8389 L
-4105.9766 3923.8486 -4106.1455 3924.1289 -4106.4014 3924.5479 C
-4105.7959 3924.6846 -4105.5967 3924.04 -4105.0225 3923.8535 C
-4105.0674 3924.0537 -4104.9902 3924.1768 -4104.7256 3924.1816 C
-4104.6504 3923.6934 L
-4104.6455 3923.7334 -4104.6162 3923.7705 -4104.5342 3923.8013 C
-4103.5127 3923.5024 L
-4103.7295 3923.2935 -4103.7402 3922.8677 -4104.0039 3922.8623 C
-4103.9097 3923.1475 -4104.1338 3923.2041 -4104.3975 3923.1963 C
-4104.166 3922.8774 -4104.6553 3922.9272 -4104.6494 3922.6631 C
-4104.1201 3922.6763 -4103.4697 3922.6104 -4103.1221 3922.4766 C
-4103.0098 3922.9272 L
-4102.5049 3923.041 -4101.9717 3922.7896 -4101.6299 3922.9209 C
-4101.7373 3923.1597 L
-4101.1318 3923.2979 -4100.5361 3923.0078 -4099.998 3923.4473 C
-4099.458 3922.9326 -4098.7783 3922.5039 -4098.3369 3921.9648 C
-4098.1006 3921.3843 -4096.752 3922.6953 -4096.1436 3921.8774 C
-4096.1025 3921.9395 -4096.5615 3922.3145 -4096.7695 3922.5342 C
-4096.3643 3922.624 -4096.042 3921.9014 -4095.9153 3922.5132 C
-4096.8242 3922.3076 -4095.8665 3923.0015 -4096.2759 3923.1753 C
-4095.8503 3923.1641 -4095.4016 3923.0537 -4095.1929 3922.8354 C
-4095.8816 3922.8398 -4094.9482 3921.9893 -4095.6455 3922.2559 C
-4095.1052 3921.7412 -4094.3679 3921.5356 -4093.7241 3921.7349 C
-4093.7305 3921.999 -4093.6511 3922.1221 -4093.4111 3922.2314 C
-4093.2175 3921.8486 L
-4092.9163 3921.9185 -4093.8 3922.3013 -4093.1936 3922.4385 C
-4092.5696 3921.7832 -4091.3145 3922.8096 -4091.0413 3921.5977 C
-4090.5657 3922.0767 -4091.9463 3922.083 -4091.2295 3922.6685 C
-4091.6465 3923.1064 -4092.2217 3922.605 -4092.3591 3923.21 C
-4091.9504 3923.0376 -4092.21 3923.7212 -4091.9463 3923.7271 C
-4091.4905 3923.3545 L
-4091.5913 3923.3311 L
-4090.8264 3922.7603 -4089.6145 3923.0342 -4088.6377 3922.9375 C
-4087.8103 3922.3281 -4087.2407 3921.4478 -4086.2483 3921.5142 C
-4086.5413 3921.8716 -4085.4241 3921.8584 -4086.0488 3922.5132 C
-4085.5896 3922.8286 -4085.1362 3922.4551 -4085.1272 3922.1909 C
-4085.5313 3922.1006 -4085.2693 3922.1064 -4085.6096 3921.9766 C
-4085.3799 3921.6563 -4084.8503 3921.6709 -4084.6328 3921.8799 C
-4084.7336 3921.8564 -4084.6953 3921.9185 -4084.7175 3922.0181 C
-4084.2351 3922.2334 -4084.4863 3921.6997 -4084.1377 3921.5664 C
-4084.0271 3922.0142 -4083.3679 3921.6865 -4083.0496 3921.9185 C
-4082.5879 3921.2793 L
-4082.8416 3921.6992 -4082.1455 3921.4326 -4082.0728 3921.8188 C
-4081.7417 3921.5225 -4081.4641 3921.0024 -4080.96 3921.1157 C
-4081.1682 3921.3354 -4080.5 3921.4326 -4080.4912 3921.8584 C
-4079.6279 3922.2661 -4079.0615 3920.6963 -4078.2439 3921.3062 C
-4078.2693 3921.4063 -4078.4343 3921.6865 -4078.1953 3921.7935 C
-4078.0071 3921.6743 -4077.6775 3921.7246 -4077.4761 3921.6782 C
-4077.4824 3921.6904 L
-4077.4785 3921.6865 -4077.4761 3921.6816 -4077.4719 3921.6782 C
-4077.3733 3921.6553 -4077.3113 3921.6021 -4077.3088 3921.499 C
-4076.9641 3921.082 -4076.7864 3920.6553 -4076.1079 3920.3013 C
-4076.1577 3919.8135 -4076.7305 3920.0024 -4076.9785 3920.1597 C
-4077.1929 3920.6416 L
-4077.3977 3919.9053 -4077.8047 3920.7695 -4077.9607 3920.521 C
-4077.5537 3919.6582 -4076.3816 3919.8701 -4075.6785 3919.3398 C
-4076.1072 3918.6597 -4077.0398 3918.5537 -4077.8535 3918.6353 C
-4077.4951 3918.9287 L
-4077.9209 3918.9385 L
-4077.5088 3919.457 L
-4077.9121 3919.3662 -4078.2607 3919.499 -4078.6252 3919.4692 C
-4078.1985 3919.46 -4078.0322 3920.1328 -4078.2737 3920.0264 C
-4078.7493 3919.5479 -4078.7693 3920.3389 -4079.1328 3920.3096 C
-4078.9304 3920.3545 -4078.6672 3920.3623 -4078.8369 3920.6416 C
-4079.5537 3920.0557 -4079.7473 3920.4375 -4080.3992 3919.8115 C
-4080.3184 3920.625 -4081.2136 3919.8926 -4081.3113 3920.5591 C
-4081.0088 3920.6274 L
-4081.6504 3921.1187 L
-4082.2424 3920.4561 -4081.1262 3920.4429 -4082.0271 3919.9741 C
-4082.8584 3919.8926 -4082.8369 3920.7471 -4083.4905 3920.8101 C
-4083.2751 3920.3286 -4082.7568 3919.915 -4082.2295 3919.9287 C
-4082.5488 3919.6963 L
-4082.3799 3919.417 -4081.6504 3919.4756 -4081.2864 3919.5044 C
-4081.8879 3920.0576 -4081.0049 3919.6743 -4080.7312 3920.1064 C
-4080.6809 3919.6406 -4081.0671 3919.7139 -4080.6111 3919.3398 C
-4081.0383 3919.3486 -4081.1008 3919.3877 -4081.6443 3919.2119 C
-4080.4695 3919.4238 -4080.5879 3917.5933 -4079.5625 3917.9854 C
-4080.0352 3918.1963 -4079.3977 3918.6582 -4079.3408 3918.8843 C
-4079.1184 3918.8281 -4078.6672 3918.7173 -4078.4817 3918.6006 C
-4078.6497 3917.9272 L
-4078.0522 3917.6353 -4077.8447 3919.0625 -4077.1553 3918.3677 C
-4077.0657 3917.9648 -4077.7617 3918.2314 -4077.6377 3918.1533 C
-4076.6943 3917.73 -4076.3545 3918.8145 -4075.5168 3919.3223 C
-4075.4695 3919.1201 -4075.4792 3918.6934 -4075.1863 3918.3369 C
-4075.2783 3918.7412 -4075.0615 3918.9478 -4075.3911 3919.2437 C
-4075.1111 3919.415 -4074.7793 3919.1182 -4074.5322 3918.9604 C
-4075.1152 3918.7236 -4074.2937 3918.3799 -4074.1863 3918.1377 C
-4073.8843 3918.2061 -4074.2783 3918.541 -4074.4641 3918.6582 C
-4074.2217 3918.7661 -4073.9336 3919.3623 -4073.7959 3918.7568 C
-4073.7864 3919.1816 -4074.4736 3919.8774 -4074.9231 3919.9873 C
-4074.6201 3920.0557 L
-4074.8289 3920.2734 -4074.8679 3920.2119 -4075.1687 3920.1455 C
-4074.8743 3920.4756 -4074.9033 3920.8398 -4074.9719 3921.1431 C
-4075.0105 3921.0811 -4074.9504 3921.042 -4074.9873 3920.9814 C
-4075.2295 3920.873 -4075.4153 3920.9893 -4075.3591 3921.2158 C
-4075.5769 3921.7876 -4075.0232 3921.5732 -4074.8591 3921.8584 C
-4074.7351 3921.8213 -4074.6111 3921.7822 -4074.4895 3921.7437 C
-4073.2312 3919.9072 L
-4072.6936 3919.6934 -4072.4519 3920.1328 -4072.0481 3920.4102 C
-4071.9373 3919.9185 L
-4071.4695 3919.9692 -4071.0281 3920.125 -4071.3279 3920.7471 C
-4071.3447 3920.583 -4071.4065 3920.6221 -4071.5081 3920.5977 C
-4071.5215 3920.665 -4071.5449 3920.7124 -4071.5745 3920.7515 C
-4071.5842 3920.7803 -4071.5896 3920.8086 -4071.5977 3920.8369 C
-4071.0967 3920.6782 -4070.7839 3920.5752 -4070.7551 3920.5566 C
-4071.6057 3921.2695 -4070.7976 3921.4478 -4070.9399 3922.3188 C
-4070.0808 3922.0352 L
-4070.6016 3921.7593 -4070.0903 3921.6094 -4069.9055 3921.4912 C
-4069.8545 3921.9814 -4069.2136 3921.4873 -4068.9121 3921.5557 C
-4068.9343 3921.6563 L
-4068.6553 3921.8262 -4068.1663 3921.7783 -4067.8184 3921.6455 C
-4067.8342 3921.4814 -4067.3879 3920.6807 -4067.1736 3920.1982 C
-4067.7705 3920.0142 -4067.4163 3919.8184 -4067.4641 3919.5142 C
-4067.4023 3919.542 -4067.2913 3919.5479 -4067.2783 3919.4854 C
-4067.1929 3919.3462 -4067.3943 3919.2998 -4067.4111 3919.1377 C
-4068.0457 3919.3662 -4068.6985 3919.4307 -4068.9573 3920.1143 C
-4068.7625 3920.4238 -4068.6252 3919.8184 -4068.4072 3920.0254 C
-4068.7217 3920.4854 -4069.1272 3920.394 -4069.6543 3920.3809 C
-4069.8271 3919.9712 L
-4070.3577 3920.1934 L
-4070.1362 3919.9766 -4070.2695 3919.5479 -4069.7129 3919.4648 C
-4069.7839 3919.0791 -4070.2649 3919.5537 -4070.6057 3919.4238 C
-4070.78 3919.9683 L
-4070.7129 3919.665 -4071.4424 3919.6064 -4070.9241 3919.1924 C
-4070.0808 3918.7471 L
-4070.3152 3918.375 L
-4069.6023 3918.2705 L
-4069.7705 3918.5518 L
-4068.6252 3918.1753 -4069.4329 3919.6353 -4068.28 3918.9927 C
-4067.9192 3918.333 -4067.5313 3918.2622 -4066.8247 3918.4229 C
-4067.3359 3918.5703 -4066.8772 3918.8877 -4067.0696 3919.2695 C
-4066.5481 3919.5449 -4066.3721 3919.0015 -4066.1016 3918.7437 C
-4065.9688 3919.0923 -4065.8743 3919.3774 -4066.3401 3919.3262 C
-4066.3984 3920.0557 -4065.7273 3919.1997 -4065.6848 3919.9512 C
-4064.1416 3919.9287 -4064.4482 3917.5254 -4062.6443 3918.4639 C
-4062.7119 3918.7661 L
-4061.5664 3918.3896 -4060.9055 3918.7515 -4059.8447 3918.5127 C
-4059.0095 3919.2832 L
-4059.1963 3919.4014 -4059.6985 3919.9771 -4059.4641 3920.3486 C
-4059.8704 3919.5688 -4060.3015 3919.8413 -4060.7393 3919.4238 C
-4060.7839 3919.6265 -4060.6057 3919.7725 -4060.5281 3919.8975 C
-4060.7922 3919.8896 -4060.9248 3919.541 -4061.2737 3919.6763 C
-4061.2568 3919.8369 -4060.8762 3920.0303 -4061.1631 3920.125 C
-4061.6377 3919.6455 L
-4062.2727 3919.874 -4061.9504 3920.7935 -4062.6963 3920.5732 C
-4062.5576 3920.1455 -4062.2744 3919.5264 -4061.9856 3919.4238 C
-4062.3264 3919.3311 -4061.5313 3919.165 -4061.8423 3918.9092 C
-4062.3333 3919.5435 -4062.5703 3919.041 -4063.2231 3919.4385 C
-4063.1465 3919.3496 -4063.1262 3919.2256 -4062.9656 3919.1865 C
-4063.9128 3918.9185 L
-4063.6785 3919.2896 -4064.6953 3919.3262 -4064.6072 3919.8774 C
-4063.5977 3920.105 -4063.8943 3919.7725 -4062.7439 3920.0854 C
-4063.0696 3920.21 -4063.4895 3920.7705 -4063.6863 3921.2856 C
-4063.6963 3921.2646 -4063.7129 3921.2471 -4063.7483 3921.2373 C
-4063.9241 3921.7822 -4063.7449 3921.9287 -4063.7483 3922.8809 C
-4063.2231 3922.2041 -4062.8721 3922.7617 -4062.2527 3922.3716 C
-4062.1362 3921.8496 -4062.6121 3921.7061 -4062.9199 3921.8408 C
-4062.3743 3921.4951 L
-4062.4817 3921.7349 L
-4061.0967 3921.9102 L
-4061.3591 3921.9385 -4061.4482 3922.2407 -4061.5852 3922.4688 C
-4061.4065 3922.4893 -4061.2295 3922.6274 -4061.0413 3922.7783 C
-4061.0808 3922.2803 -4061.0559 3921.9287 -4060.8816 3921.9385 C
-4059.9905 3922.0566 -4059.4951 3922.5039 -4059.1663 3923.0728 C
-4059.1321 3923.0615 -4059.0935 3923.0493 -4059.0625 3923.0376 C
-4059.2119 3922.5269 -4058.4297 3922.1201 -4058.1536 3921.5977 C
-4058.1672 3922.1265 -4057.6943 3921.915 -4057.4375 3922.1846 C
-4057.3008 3921.5791 -4057.4832 3920.7432 -4057.7959 3920.248 C
-4058.3984 3920.8013 -4058.1335 3920.8062 -4058.4182 3921.5923 C
-4059.3848 3922.1157 L
-4059.1687 3921.6328 L
-4059.6511 3921.4199 -4060.1145 3922.0576 -4060.0791 3921.4292 C
-4059.8242 3921.0103 -4059.4033 3921.2646 -4059.1504 3920.8438 C
-4059.4695 3920.6143 L
-4058.9065 3919.9966 -4059.1809 3921.209 -4058.4993 3920.7783 C
-4058.75 3920.2437 -4058.4375 3920.7393 -4058.1455 3920.3809 C
-4058.3799 3920.0093 -4059.3457 3920.5342 -4059.1409 3919.6265 C
-4058.7864 3919.2295 -4057.9482 3920.6904 -4057.4792 3919.7876 C
-4057.5022 3919.8896 L
-4056.8103 3920.0078 -4056.5671 3919.4893 -4056.3081 3919.1631 C
-4056.0137 3919.457 -4055.6072 3919.0435 -4055.2881 3919.0103 C
-4055.2959 3919.2744 L
-4054.8457 3919.1641 L
-4055.0601 3919.6455 -4055.3733 3919.1509 -4055.76 3919.2212 C
-4055.7119 3919.7119 L
-4056.1577 3919.1294 -4056.4551 3920.0142 -4056.8008 3920.4375 C
-4056.2976 3920.0127 -4055.3799 3920.5576 -4055.2617 3919.5977 C
-4054.9504 3920.0942 L
-4054.8015 3919.915 L
-4054.5696 3920.2871 -4054.8064 3920.8701 -4055.2561 3920.9814 C
-4055.3342 3920.8574 -4055.3733 3920.7959 -4055.3496 3920.6934 C
-4055.5583 3920.9126 -4055.75 3921.2935 -4056.2551 3921.1807 C
-4055.9856 3920.9209 L
-4056.6145 3920.8853 -4057.1863 3921.0752 -4057.4016 3921.5576 C
-4056.4937 3921.7622 -4055.6008 3921.8057 -4054.7483 3921.7832 C
-4054.4968 3920.6743 -4054.1985 3920.0518 -4054.0703 3919.021 C
-4053.4983 3918.8311 -4052.7217 3918.6895 -4052.2249 3919.0664 C
-4052.2705 3919.2695 L
-4052.0281 3919.375 -4051.8047 3919.3188 -4051.6184 3919.2017 C
-4051.3623 3919.4727 -4051.7937 3919.7471 -4051.6152 3919.8936 C
-4050.7959 3919.5479 L
-4050.8464 3920.0142 -4051.5359 3920.0166 -4051.8633 3920.0493 C
-4051.8015 3920.0103 -4051.6768 3919.9326 -4051.7168 3919.8701 C
-4052.0977 3919.6782 -4052.8071 3920.4727 -4052.9736 3919.7979 C
-4053.1592 3919.915 -4052.5967 3919.2998 -4053.2249 3919.2646 C
-4053.6455 3919.0103 -4053.7825 3919.6157 -4053.8264 3919.8184 C
-4053.8333 3920.083 -4053.1663 3920.1807 -4053.3977 3920.499 C
-4053.0703 3920.4648 -4052.9399 3920.125 -4052.5212 3920.3799 C
-4052.8457 3920.4121 -4053.2864 3920.9478 -4053.4592 3920.5376 C
-4054.1008 3921.0303 -4054.0088 3922.2705 -4053.7063 3922.3389 C
-4053.7783 3921.9502 -4052.5359 3921.8599 -4053.3772 3921.3535 C
-4052.9993 3920.8535 -4052.3088 3920.8496 -4051.8145 3920.5376 C
-4051.8369 3920.6377 L
-4051.2231 3920.5127 L
-4051.3096 3920.6509 -4051.4951 3920.7695 -4051.5012 3921.0313 C
-4050.6511 3920.3232 L
-4051.1296 3920.7998 -4050.3545 3920.6543 -4050.1367 3920.8643 C
-4050.0457 3920.46 -4049.7136 3920.1641 -4050.0322 3919.9326 C
-4050.3904 3919.6392 -4050.2407 3920.1509 -4050.5664 3920.1816 C
-4050.1052 3919.5449 L
-4050.0657 3919.6064 L
-4049.7881 3919.0854 L
-4049.1599 3919.1221 -4050.0625 3920.2979 -4049.2576 3919.7876 C
-4049.3623 3919.0767 L
-4048.4304 3919.1816 -4047.2336 3919.9814 -4046.5752 3919.6533 C
-4046.7568 3920.0576 -4046.8369 3920.708 -4046.5872 3921.0933 C
-4046.8711 3920.9712 -4047.4417 3920.9966 -4047.8489 3921.063 C
-4047.9272 3920.9385 -4047.3401 3920.2227 -4046.8977 3920.3765 C
-4047.1121 3919.2119 -4048.0105 3921.0791 -4048.0625 3919.8984 C
-4049.1897 3919.4873 -4048.9033 3921.0356 -4049.8601 3920.3433 C
-4049.8733 3920.8701 -4050.1321 3920.6006 -4050.1824 3921.0654 C
-4049.8992 3921.9253 -4048.9033 3921.0356 -4048.2825 3921.3369 C
-4048.3433 3921.375 -4048.4656 3921.4541 -4048.4895 3921.5537 C
-4048.0457 3921.708 -4047.8623 3921.5908 -4047.5522 3921.3955 C
-4047.5913 3921.333 L
-4047.0496 3920.8184 -4047.2561 3921.7261 -4046.9373 3921.958 C
-4046.8137 3921.8799 -4046.3704 3922.0313 -4046.4417 3921.6455 C
-4045.8643 3922.1465 L
-4045.8921 3921.5576 L
-4045.5664 3921.5225 -4045.4951 3921.9121 -4045.2 3921.5537 C
-4045.1863 3921.0269 L
-4045.9951 3920.8438 L
-4045.5852 3920.6719 -4045.8809 3920.3398 -4045.4304 3920.2295 C
-4045.9336 3920.8057 -4045.0745 3920.5215 -4045.0249 3921.0103 C
-4044.6936 3920.7139 L
-4044.7783 3920.8545 L
-4044.5183 3921.125 -4044.4688 3920.6582 -4044.1653 3920.7271 C
-4044.5232 3920.4336 -4044.7576 3920.063 -4045.2136 3920.4375 C
-4044.8816 3920.1416 -4044.2231 3919.8135 -4044.0615 3919.7959 C
-4043.7129 3919.5752 -4043.4695 3919.9766 -4043.1433 3920.0356 C
-4043.7693 3920.2471 -4042.9241 3921.6328 -4044.1785 3921.2544 C
-4044.1553 3921.1533 -4044.0537 3921.1763 -4044.0144 3921.2383 C
-4044.1816 3920.5654 -4044.7664 3921.2803 -4045.0383 3921.5376 C
-4044.9683 3921.9253 -4045.2527 3922.021 -4044.7705 3922.2349 C
-4044.9287 3921.9873 -4044.3643 3921.3716 -4043.9055 3921.6895 C
-4043.9863 3922.5181 L
-4043.3184 3922.6157 L
-4043.3809 3922.6553 L
-4043.1296 3923.1895 -4042.6682 3922.5518 -4042.2083 3922.8662 C
-4041.8762 3922.5703 -4040.6023 3922.8057 -4041.1504 3921.9385 C
-4040.7375 3922.457 -4040.3752 3921.7959 -4039.9248 3921.6846 C
-4040.4863 3921.3462 L
-4039.8225 3920.7524 -4040.0137 3921.1353 -4039.4824 3920.1924 C
-4039.4287 3920.4185 -4039.3103 3920.605 -4039.4182 3920.8438 C
-4038.5264 3920.8877 -4037.2527 3921.1221 -4036.7295 3920.4429 C
-4036.1008 3920.479 -4036.0022 3921.4561 -4035.1201 3921.0728 C
-4034.9343 3920.9561 -4035.2649 3920.2979 -4034.6809 3920.5356 C
-4034.6416 3920.5977 -4035.2432 3921.1504 -4034.5928 3921.0854 C
-4034.1296 3920.4473 -4033.5049 3921.4375 -4032.9023 3920.8843 C
-4032.5842 3921.1143 -4032.0322 3921.0269 -4032.1472 3921.5313 C
-4032.6511 3921.417 -4033.3643 3921.5225 -4033.4729 3921.7646 C
-4033.4033 3921.46 -4033.8313 3921.4692 -4033.46 3921.2349 C
-4034.2217 3920.8535 -4033.9543 3921.5479 -4034.6377 3921.2871 C
-4034.6848 3921.4893 -4034.2864 3921.8457 -4034.1399 3921.665 C
-4034.1367 3922.3545 -4035.4873 3921.998 -4034.8799 3922.8247 C
-4034.1497 3922.8843 -4033.9329 3921.4473 -4033.3 3922.1729 C
-4033.5537 3922.5923 -4033.9504 3922.2373 -4034.2727 3922.9604 C
-4033.7527 3923.2383 L
-4033.3752 3922.7393 L
-4033.3977 3922.8413 L
-4032.4792 3923.4727 -4032.5481 3922.1318 -4031.7263 3921.7856 C
-4032.2024 3921.3076 -4031.6162 3920.5908 -4031.9744 3920.2979 C
-4031.4248 3920.21 -4031.0212 3920.3013 -4031.0176 3920.9912 C
-4032.0457 3921.5537 -4031.0759 3921.7207 -4032.0264 3922.4077 C
-4031.8704 3922.6553 -4032.2527 3923.417 -4031.6863 3923.4932 C
-4031.0481 3923.0015 -4031.8772 3922.9185 -4031.2407 3922.6909 C
-4031.2031 3922.7524 -4031.1641 3922.8145 -4031.1863 3922.916 C
-4030.8936 3922.5576 -4030.8447 3923.0454 -4030.4905 3922.6494 C
-4030.5745 3922.7876 L
-4030.1377 3923.2061 -4030.0967 3922.3135 -4029.7207 3922.7695 C
-4029.8711 3922.2573 -4029.4683 3922.3496 -4029.2351 3922.0303 C
-4029.6162 3921.8369 -4029.8225 3921.1021 -4030.5745 3921.1431 C
-4030.6653 3921.5479 -4030.6104 3921.7725 -4030.9192 3921.9683 C
-4030.4304 3921.9185 L
-4030.5359 3921.9854 -4030.6162 3922.0894 -4030.7129 3922.1709 C
-4031.1824 3921.9604 L
-4030.5872 3921.6719 -4030.8601 3921.2393 -4030.6072 3920.8184 C
-4030.0625 3920.9951 -4030.1577 3920.707 -4029.8152 3920.8389 C
-4029.8496 3921.4326 -4028.7649 3921.8535 -4028.1377 3922.2349 C
-4028.2351 3922.2119 -4028.3608 3922.2271 -4028.4287 3922.2119 C
-4028.8843 3922.5869 -4028.1152 3922.707 -4028.0984 3922.8701 C
-4027.7664 3922.5732 L
-4027.8289 3922.6143 -4027.9153 3922.7524 -4027.7737 3922.8369 C
-4027.3242 3922.7261 -4027.3503 3922.1377 -4026.9016 3922.0264 C
-4026.8679 3922.3535 -4027.2473 3922.8496 -4026.9683 3923.021 C
-4026.8721 3923.3062 -4026.5657 3924.0654 -4025.9695 3923.7764 C
-4025.9272 3923.6509 -4025.7727 3923.5811 -4025.5935 3923.5269 C
-4025.6184 3923.5449 -4025.6497 3923.5576 -4025.6609 3923.5811 C
-4025.2649 3923.9375 L
-4025.6023 3924.4951 -4025.9473 3923.6743 -4026.2864 3924.2344 C
-4026.3152 3924.7646 L
-4026.5791 3924.7661 -4026.9375 3924.9956 -4027.1023 3925.2705 C
-4026.7 3925.3604 -4026.6152 3925.2212 -4026.1653 3925.1108 C
-4026.1023 3925.4463 -4026.4192 3925.6953 -4026.4648 3925.7314 C
-4026.3977 3925.4292 L
-4026.9343 3924.9902 -4027.2 3925.9375 -4027.8679 3925.8389 C
-4027.9688 3925.8174 -4027.9072 3925.7783 -4027.8848 3925.6772 C
-4028.4255 3926.1909 -4028.9561 3925.4873 -4029.4817 3926.165 C
-4029.3103 3925.8853 L
-4029.6682 3926.1108 -4030.3679 3926.6328 -4031.0671 3927.1377 C
-4031.0728 3927.3438 L
-4030.9951 3927.4683 -4031.2576 3927.4604 -4031.3984 3927.3774 C
-4031.3977 3927.374 L
-4031.7483 3927.6265 -4032.0852 3927.8584 -4032.3608 3928.0313 C
-4032.2727 3928.1592 -4032.1599 3928.2661 -4032.0305 3928.2959 C
-4031.9209 3928.0537 -4031.2783 3928.2524 -4031.3665 3927.7017 C
-4031.0696 3928.0342 -4030.5913 3927.5576 -4030.3733 3927.7661 C
-4030.7705 3927.4126 -4030.0967 3927.2471 -4030.0271 3926.9429 C
-4029.8936 3927.291 -4029.4385 3926.917 -4029.4905 3927.3843 C
-4029.4121 3927.5059 -4029.6855 3927.0742 -4029.8545 3927.3545 C
-4030.2705 3927.7896 -4029.0928 3927.7373 -4029.6111 3928.1509 C
-4028.9519 3927.8232 -4028.0833 3927.9648 -4027.4033 3927.5352 C
-4027.7839 3927.3438 L
-4027.4817 3927.4126 -4026.7664 3927.3086 -4026.7129 3927.5342 C
-4026.9375 3927.5889 -4027.2 3927.583 -4027.4873 3927.6768 C
-4027.5012 3928.2041 -4026.7969 3927.6729 -4026.7649 3927.999 C
-4025.9304 3927.1265 L
-4026.2959 3927.0967 L
-4026.0657 3926.7764 -4025.3015 3927.1631 -4024.7351 3927.2373 C
-4025.0601 3927.959 -4025.5896 3927.2559 -4026.1855 3927.5454 C
-4026.6184 3927.8188 -4025.9182 3928.2422 -4026.3279 3928.415 C
-4026.2217 3928.583 -4025.9543 3928.563 -4025.8225 3928.3809 C
-4025.6609 3928.5127 L
-4026.0264 3929.1685 -4026.8457 3929.0225 -4027.3911 3929.5869 C
-4027.3433 3929.5166 -4027.3015 3929.4424 -4027.2864 3929.3662 C
-4027.7063 3929.1118 -4028.1328 3929.1221 -4028.5422 3929.2959 C
-4028.3257 3929.5024 -4028.24 3929.3623 -4028.1162 3929.2856 C
-4028.1008 3929.4478 -4028.4873 3929.5181 -4028.6335 3929.6982 C
-4028.2527 3929.8896 -4028.5625 3930.0854 -4028.3215 3930.1934 C
-4028.5696 3930.3496 -4028.7705 3930.3037 -4029.0728 3930.2349 C
-4029.2295 3929.9873 -4028.9431 3929.8936 -4028.9751 3929.5688 C
-4029.2864 3929.7646 -4029.4287 3928.9873 -4029.8843 3929.3623 C
-4029.2783 3929.499 -4030.0439 3930.0688 -4030.2527 3930.2876 C
-4030.1511 3930.3101 L
-4030.3433 3930.6909 -4030.5063 3930.707 -4030.6392 3930.3584 C
-4030.3911 3930.2017 -4030.1511 3930.3101 -4030.2217 3929.9229 C
-4030.3855 3929.9395 -4030.5488 3929.9561 -4030.7344 3930.0728 C
-4030.5657 3929.7935 L
-4031.3799 3929.874 L
-4031.5088 3930.2158 -4031.7241 3930.6982 -4031.8369 3931.2017 C
-4032.0322 3930.8926 -4032.3042 3931.1504 -4032.4895 3931.2695 C
-4032.4033 3931.1274 L
-4032.7625 3930.8354 -4033.5615 3931.0791 -4033.6289 3931.3809 C
-4033.8855 3931.1118 -4031.8152 3929.457 -4033.6289 3929.7373 C
-4034.3184 3929.7393 -4034.0583 3930.7017 -4034.4519 3931.0356 C
-4034.4297 3930.9375 -4034.4688 3930.874 V
-4034.7705 3930.8037 -4034.8008 3931.1709 -4035.0488 3931.3262 C
-4034.8679 3931.4727 -4034.6057 3931.479 -4034.5212 3931.3398 C
-4034.6121 3931.7432 -4035.1497 3931.3037 -4035.3809 3931.6221 C
-4035.0808 3931 -4035.9641 3931.3848 -4035.7312 3931.0654 C
-4036.3313 3930.665 -4036.9729 3931.1572 -4037.2881 3931.6157 C
-4037.6953 3930.8354 -4038.0022 3931.7192 -4038.6631 3931.3584 C
-4038.5615 3931.3809 -4038.3772 3931.2646 -4038.2351 3931.3486 C
-4037.8584 3930.8535 -4038.9199 3931.0889 -4038.3401 3930.6353 C
-4038.4641 3930.7139 -4038.3489 3930.8984 -4038.2217 3930.8213 C
-4037.9993 3930.7656 -4037.7898 3930.5479 -4037.8457 3930.3223 C
-4038.3843 3929.8843 L
-4038.1963 3929.7646 L
-4039.0137 3929.1582 L
-4039.0359 3929.2573 -4038.9592 3929.3809 -4038.9199 3929.4429 C
-4039.8679 3929.1768 -4040.9519 3929.5142 -4041.7825 3929.4336 C
-4041.9385 3930.8311 -4043.8271 3930.0313 -4044.4983 3930.8896 C
-4044.3184 3930.4893 -4044.22 3929.7822 -4044.3313 3929.4912 C
-4044.1816 3929.4326 -4043.8752 3928.8677 -4043.5359 3928.9854 C
-4043.4817 3929.21 -4043.0625 3929.4639 -4043.3323 3929.7207 C
-4042.3943 3929.5615 -4043.4592 3929.1079 -4043.1824 3928.5879 C
-4044.2217 3928.7236 -4044.8313 3929.542 -4045.4873 3929.8711 C
-4045.5039 3929.7061 L
-4045.9993 3930.0181 L
-4045.5945 3930.1108 -4045.6145 3930.9033 -4046.1362 3930.6265 C
-4046.0728 3930.5869 L
-4046.3704 3930.2544 -4046.9895 3930.6455 -4047.4543 3930.5942 C
-4047.7695 3931.0518 L
-4048.2351 3931 -4048.2551 3930.1475 -4048.4065 3929.6367 C
-4049.1362 3929.5767 -4049.5576 3930.2759 -4050.0759 3930.6909 C
-4050.3103 3930.3188 -4051.4033 3930.2314 -4050.8242 3929.7803 C
-4051.4824 3930.1079 -4051.3496 3932.1006 -4052.4785 3930.9966 C
-4052.1855 3930.6377 L
-4053.2649 3930.7124 -4054.8042 3931.4263 -4055.3015 3931.0488 C
-4054.9033 3929.7598 -4056.6497 3929.7373 -4056.8416 3928.4736 c
-4056.7881 3928.7622 -4057.1936 3928.8584 -4057.2527 3929.0127 C
-4057.3416 3928.8643 -4057.4895 3928.7207 -4057.6465 3928.9814 C
-4057.2256 3929.2349 -4057.9424 3930.2935 -4057.1377 3929.7832 C
-4057.5449 3930.6494 -4058.0696 3931.3262 -4058.9617 3931.2832 C
-4058.9482 3930.7559 L
-4058.2424 3930.916 L
-4058.3137 3930.5269 -4057.9504 3930.5566 -4057.8015 3930.3774 C
-4059.1145 3930.0811 -4057.6296 3929.1431 -4058.9719 3929.2119 C
-4059.1016 3929.5537 -4059.0176 3929.4126 -4059.3665 3929.5479 C
-4059.2024 3929.5303 -4059.1729 3929.167 -4059.4373 3929.1597 C
-4059.6912 3929.5811 L
-4060.1599 3928.7017 -4058.9153 3929.0088 -4059.3152 3928.3911 C
-4058.7969 3927.9771 -4057.8992 3927.7559 -4058.0664 3927.083 C
-4058.9128 3926.8389 -4058.8279 3928.3433 -4059.7129 3928.0376 C
-4059.8071 3927.7515 L
-4060.1184 3927.9463 -4060.1687 3928.4102 -4060.3391 3928.6904 C
-4060.3545 3928.5269 -4060.4336 3928.4053 -4060.6335 3928.3584 C
-4061.1592 3929.0356 -4061.5081 3929.1685 -4061.9929 3929.9077 C
-4060.7024 3929.3535 -4060.8896 3930.4229 -4059.5576 3929.9287 C
-4059.7664 3930.1475 -4060.7041 3930.3076 -4060.7617 3931.0356 C
-4060.7493 3930.5078 L
-4061.1824 3930.7822 -4061.6152 3931.0537 -4062.1592 3930.8799 C
-4061.8271 3930.583 L
-4062.5481 3930.9502 -4063.0256 3929.7822 -4063.5945 3930.6597 C
-4063.3936 3930.707 -4063.2305 3930.6909 -4063.1064 3930.6108 c
-4063.4775 3930.8462 -4063.9431 3930.7935 -4064.3464 3930.7041 C
-4065.1809 3931.5752 L
-4065.1736 3931.3135 -4065.7024 3931.2979 -4065.4473 3930.8799 C
-4066.0481 3930.4785 -4066.3313 3931.2646 -4066.6785 3931.3955 C
-4067.2937 3930.8354 -4066.1455 3931.1455 -4066.0852 3930.417 C
-4066.9329 3930.1729 -4067.8313 3930.3936 -4068.3096 3930.8677 C
-4068.1367 3930.9741 -4068.0527 3931.0654 -4068.0615 3931.1934 C
-4068.0872 3931.0269 -4068.4287 3931.0703 -4068.6191 3931.0654 C
-4068.75 3931.4077 L
-4069.0671 3931.1763 -4069.0225 3930.9741 -4068.7527 3930.7158 C
-4069.0559 3930.6494 -4069.4172 3931.3086 -4069.7295 3930.8145 C
-4069.2119 3930.4014 -4068.5522 3930.7617 -4068.2825 3930.5044 C
-4069.3643 3930.8423 -4069.3711 3929.4604 -4070.7424 3929.8955 C
-4070.7593 3929.7314 -4070.5271 3929.4126 -4070.7913 3929.4077 C
-4071.4033 3929.5342 -4070.9512 3930.1143 -4071.1423 3930.4951 C
-4070.6711 3930.2822 -4070.4519 3930.4912 -4070.1785 3930.9238 C
-4070.3042 3931.2017 L
-4070.3232 3931.0576 -4070.6191 3931.0493 -4070.7063 3930.9102 C
-4070.7825 3931.4771 L
-4070.7473 3930.8496 -4071.2207 3930.3716 -4071.5928 3930.6064 C
-4071.2168 3931.0615 -4071.3184 3931.0376 -4071.2161 3931.7524 C
-4071.7393 3932.4292 -4071.8064 3931.0869 -4072.3928 3931.8037 C
-4072.3489 3931.6021 -4071.8369 3931.4517 -4072.2793 3931.2979 C
-4072.6455 3931.2705 -4072.5967 3931.7593 -4072.8423 3931.915 C
-4072.5657 3931.3926 -4072.6367 3931.0044 -4072.3369 3930.3843 C
-4071.6863 3930.3184 -4072.0745 3930.3911 -4071.4385 3930.1631 C
-4071.9768 3929.7212 L
-4071.4255 3929.6353 -4071.5759 3929.123 -4071.5305 3928.9229 C
-4072.4719 3928.3911 -4072.24 3929.7168 -4072.8457 3929.5796 C
-4073.1377 3929.9385 -4072.2783 3929.6553 -4072.7351 3930.0303 C
-4073.3015 3929.9541 -4072.8643 3930.3716 -4073.5 3930.5977 C
-4073.3936 3930.3584 L
-4073.5879 3930.0479 -4073.78 3930.4307 -4074.0049 3930.4829 C
-4074.2522 3930.6416 -4073.7249 3932.2998 -4074.7417 3932.3354 C
-4074.6919 3932.1895 -4074.6736 3932.0967 -4074.6736 3932.0356 C
-4073.6816 3927.6455 L
-4074.7119 3927.6563 -4075.8992 3927.5342 -4077.0923 3927.2393 C
-4077.3733 3926.3809 -4076.2407 3926.5313 -4076.3137 3926.1455 C
-4075.7695 3926.3213 L
-4075.8 3926.6851 -4076.9097 3926.4336 -4076.4182 3927.0767 C
-4075.4573 3926.8145 -4075.0212 3927.2334 -4074.1096 3926.4829 C
-4074.3928 3925.623 -4075.3103 3926.6353 -4075.9033 3925.9712 C
-4075.6543 3926.0269 -4075.4441 3925.9326 -4075.24 3925.8096 C
-4075.7969 3925.6997 -4076.3928 3925.5811 -4077.0264 3925.4478 C
-4077.1687 3925.6563 L
-4076.7417 3925.7524 -4076.4463 3925.8262 -4076.4082 3925.8574 C
-4076.9744 3925.7822 -4077.4519 3926.2583 -4077.4895 3926.8877 C
-4077.3889 3926.9102 L
-4077.5935 3927.1064 L
-4077.7263 3927.0664 -4077.8591 3927.0269 -4077.9912 3926.9854 C
f
-4114.6934 3926.8369 m
-4114.6592 3926.7764 -4114.6318 3926.7061 -4114.6123 3926.6182 c
-4114.6328 3926.71 -4114.6094 3926.7695 -4114.6934 3926.8369 C
f
0 D
-4066.9033 3924.875 m
-4067.6584 3924.7832 -4068.4199 3924.6118 -4069.1455 3924.5356 C
-4067.8359 3925.7793 -4066.9153 3926.7207 -4069.1008 3926.6963 C
-4069.2439 3926.7856 L
-4068.9583 3926.9385 -4068.4656 3926.957 -4068.0022 3926.8672 C
-4067.6272 3926.4263 -4066.4172 3924.8062 -4066.4304 3924.6631 C
-4066.5632 3924.3145 -4066.7568 3924.6953 -4066.9983 3924.5889 C
-4066.9033 3924.875 L
f
-4066.3665 3926.958 m
-4065.9385 3927.0967 -4066.0359 3926.8213 -4065.9695 3926.5732 C
-4066.1201 3926.605 -4066.2705 3926.6377 -4066.4192 3926.667 C
-4066.3623 3926.7295 -4066.3342 3926.8174 -4066.3665 3926.958 C
f
1 D
-4065.9951 3926.3252 m
-4066.0432 3926.3188 -4066.0842 3926.3076 -4066.1057 3926.2744 C
-4065.9951 3926.3252 L
f
0 D
-4074.3191 3926.0103 m
-4074.3 3926.0044 -4074.2932 3925.999 -4074.2751 3925.9951 C
-4074.3762 3925.9751 -4074.4775 3925.957 -4074.5833 3925.9375 C
-4074.5422 3925.9771 -4074.4641 3926.0078 -4074.3191 3926.0103 C
f
-4073.4504 3926.6182 m
-4073.3489 3926.1641 L
-4073.4431 3926.1475 -4073.5393 3926.1294 -4073.6377 3926.1118 C
-4073.6052 3926.3174 -4073.5713 3926.4966 -4073.4504 3926.6182 C
f
-4070.6584 3928.1118 m
-4070.4824 3927.5664 -4069.8928 3927.542 -4069.8567 3926.9126 C
-4069.8191 3926.7515 -4069.9431 3926.6895 -4070.0823 3926.6377 C
-4070.2375 3926.623 -4070.4033 3926.6055 -4070.5791 3926.5854 C
-4070.5852 3926.6768 -4070.6201 3926.7622 -4070.6785 3926.8438 C
-4070.5049 3926.9229 -4070.3889 3927.0791 -4070.4592 3927.4648 C
-4070.9055 3926.623 -4070.8591 3928.0654 -4071.3416 3927.8496 C
-4071.4951 3928.2935 -4070.8047 3928.2896 -4070.6584 3928.1118 C
f
1 D
-4033.5752 3926.4727 m
-4033.5615 3926.5269 -4033.5144 3926.6685 -4033.4482 3926.8438 C
-4033.7881 3927.1553 L
-4034.3943 3927.0181 -4034.8799 3926.1143 -4035.4255 3926.8916 C
-4035.6809 3926.6963 -4035.8176 3926.2832 -4035.9482 3925.9429 C
-4035.8232 3925.9683 -4035.7063 3926.0015 -4035.6089 3926.0537 C
-4034.0791 3924.915 -4034.8113 3927.2544 -4033.5752 3926.4727 C
f
0 D
-4040.5449 3925.3643 m
-4040.4824 3925.3252 -4040.46 3925.2227 Y
-4041.8145 3926.3774 -4042.9297 3926.7119 -4043.6599 3926.667 C
-4043.5183 3927.125 -4042.8633 3927.479 -4042.5522 3927.6685 C
-4042.8279 3928.1904 L
-4043 3927.7803 L
-4043.4785 3928.2544 L
-4043.3447 3928.605 -4042.9583 3928.5313 -4042.7 3928.8013 C
-4042.6775 3928.7017 -4041.8503 3928.0933 -4041.6191 3927.7725 C
-4042.28 3927.4121 L
-4042.1016 3927.5576 -4041.2249 3927.4375 -4040.8772 3927.3037 C
-4040.8704 3927.042 -4041.4695 3926.6392 -4041.5449 3927.207 C
-4041.6162 3926.8188 -4040.9255 3926.8145 -4041.3623 3926.3984 C
-4040.8447 3925.9854 -4040.0212 3926.3311 -4039.6392 3926.5225 C
-4039.5745 3927.1753 L
-4039.1553 3927.4287 -4039.2913 3926.3896 -4038.7932 3926.7661 C
-4039.4055 3926.8936 -4038.6897 3927.4814 -4039.1768 3927.5303 C
-4039.0212 3927.7764 -4039.1736 3928.2192 -4038.6855 3928.1709 C
-4038.2793 3927.3076 -4038.1711 3928.7119 -4037.7871 3927.9502 C
-4037.5305 3928.2192 -4038.0632 3928.4692 -4037.5583 3928.5854 C
-4036.9792 3928.1318 -4037.0127 3927.8062 -4036.9768 3927.1782 C
-4037.5183 3927.0024 -4037.5852 3927.9951 -4038.0281 3927.8423 C
-4037.1472 3926.7661 L
-4037.3096 3926.6143 -4037.4297 3926.5977 -4037.5305 3926.6416 C
-4037.3535 3926.5791 -4037.2031 3926.4199 -4037.0745 3926.1997 c
-4037.0012 3926.0767 -4036.9336 3925.9712 -4036.8711 3925.8809 C
-4037.3704 3925.875 -4037.8137 3925.8599 -4037.8921 3925.5923 C
-4037.8232 3925.2876 L
-4038 3925.0078 -4038.2881 3925.2271 -4038.4209 3925.4502 C
-4038.8679 3925.4829 -4039.3145 3925.9077 -4039.4121 3925.5132 C
-4039.2424 3925.2344 L
-4039.7922 3925.3223 -4039.8535 3925.3604 -4040.5449 3925.3643 C
f
-4058.5625 3924.6709 m
-4058.2295 3925.7876 -4057.8623 3926.7744 -4056.3081 3926.5791 C
-4056.4304 3926.6563 L
-4055.6472 3927.3574 -4054.9033 3925.7295 -4053.9504 3926.5078 C
-4054.4128 3926.9287 -4054.3879 3926.8896 -4054.8984 3927.8535 C
-4054.4023 3927.5376 L
-4054.5398 3928.1455 -4054.0449 3927.8311 -4053.6809 3927.8599 C
-4054.0022 3928.583 L
-4054.2207 3928.375 -4054.7871 3928.2998 -4054.7705 3928.4648 C
-4054.6465 3928.3848 -4055.5183 3927.5518 -4055.9919 3927.7622 C
-4055.9431 3928.2524 -4054.9431 3928.0537 -4055.3896 3928.8545 C
-4054.9961 3928.5181 -4054.9473 3929.0068 -4054.5359 3928.8354 C
-4054.9304 3929.1709 -4054.6335 3929.5024 -4054.9272 3929.8599 C
-4054.2527 3929.6934 L
-4054.2351 3929.8564 -4055.2351 3930.0557 -4054.6824 3930.6582 C
-4054.4121 3930.4014 -4053.6904 3930.7236 -4053.6775 3930.1963 C
-4053.6609 3930.3584 L
-4053.1553 3930.4727 -4053.4385 3929.6118 -4052.8176 3929.9126 C
-4052.8103 3929.6475 -4052.9287 3929.4639 -4053.1511 3929.5181 C
-4053.3391 3929.6353 -4053.3679 3929.999 -4053.7551 3930.0728 C
-4053.9287 3929.6597 -4053.2881 3930.124 -4053.5569 3929.4263 c
-4053.6904 3929.0791 -4054.5791 3929.7261 -4054.2959 3928.9424 C
-4053.7913 3929.0557 L
-4053.7783 3928.5269 -4053.4128 3928.5576 -4053.4231 3928.1318 C
-4053.1145 3927.9375 -4052.8232 3928.5313 -4052.5081 3928.0728 C
-4052.3772 3927.7314 -4052.6057 3927.0967 -4052.0842 3927.373 C
-4051.6768 3928.1543 -4050.4761 3928.0024 -4050.0264 3927.8896 C
-4049.6328 3927.5537 L
-4049.6663 3927.2295 -4050.3848 3927.5977 -4050.1321 3927.1768 C
-4049.5183 3927.0493 L
-4049.5657 3927.2524 L
-4049.3623 3927.2979 -4049.1543 3927.0796 -4048.9688 3926.9639 C
-4049.1599 3927.3438 -4049.6023 3927.1909 -4049.5144 3927.7412 C
-4049.2263 3927.8496 -4049.1824 3928.0537 -4048.9172 3927.9478 C
-4048.9751 3927.9873 -4049.0249 3928.041 -4049.0176 3928.1182 C
-4048.4343 3928.3564 -4048.4543 3927.5024 -4048.3081 3927.3232 c
-4047.7217 3926.6084 -4048.8992 3926.6597 -4048.8242 3926.0933 C
-4047.1121 3925.791 L
-4047.2583 3925.9692 -4047.4055 3926.1475 -4047.3503 3926.373 C
-4046.9304 3926.6274 -4047.3408 3926.7998 -4046.7512 3926.7734 C
-4046.7932 3926.0215 -4046.0088 3926.3047 -4045.5923 3925.8701 C
-4045.3977 3926.1782 -4045.3577 3926.2393 -4045.7832 3926.249 C
-4045.7344 3926.7373 -4045.1631 3926.5493 -4044.96 3926.5942 C
-4044.8423 3926.4727 -4044.6416 3926.4019 -4044.5144 3926.2935 C
-4044.6848 3926.0493 -4044.6121 3925.7437 -4044.2432 3925.5356 C
-4044.2217 3925.4336 L
-4044.8264 3925.2998 -4045.7664 3924.7661 -4046.1455 3925.2661 C
-4046.0383 3925.0244 L
-4046.7383 3924.6021 -4047.5615 3925.9014 -4047.8843 3924.979 C
-4047.8545 3924.6143 -4048.0249 3924.8955 -4048.0127 3924.3677 C
-4048.5281 3924.7803 L
-4048.4209 3924.541 L
-4049.2976 3924.6597 L
-4049.2744 3924.5615 L
-4049.6912 3925.0391 -4050.0176 3925.4287 -4050.2783 3925.7471 C
-4050.2793 3925.9771 -4050.2522 3926.0479 -4050.3911 3926.2173 C
-4050.5305 3926.3311 -4050.6362 3926.3486 -4050.7305 3926.3184 C
-4050.7312 3926.3188 -4050.7312 3926.3188 -4050.7312 3926.3213 C
-4050.7312 3926.3188 -4050.7312 3926.3188 -4050.7312 3926.3184 C
-4050.9463 3926.2515 -4051.0896 3925.9209 -4051.3545 3925.7856 C
-4050.5393 3925.7295 L
-4050.4729 3925.3389 -4050.5422 3924.9336 -4050.9417 3924.6597 C
-4050.7783 3924.6455 -4050.71 3924.3408 -4050.9121 3924.2959 C
-4050.9343 3924.3975 -4051.4463 3924.5454 -4051.2512 3924.8564 C
-4052.0256 3924.999 -4053.2793 3923.9736 -4054.4551 3924.7158 C
-4053.6104 3924.2695 -4055.1321 3924.1924 -4054.1943 3924.0313 C
-4054.8489 3923.4072 -4054.7576 3924.6475 -4055.4248 3924.5493 C
-4055.4817 3924.3252 -4055.0615 3924.5791 -4054.9082 3924.1353 C
-4056.0176 3923.8853 -4056.78 3925.1455 -4057.8533 3924.9561 C
-4057.8992 3924.4688 L
-4058.1023 3924.5313 -4058.3279 3924.6006 -4058.5625 3924.6709 C
f
-4060.6855 3925.2783 m
-4060.8921 3925.333 -4061.1016 3925.3896 -4061.3145 3925.4463 C
-4061.2937 3925.4541 -4061.2744 3925.4541 -4061.2527 3925.4604 C
-4061.8733 3925.8535 L
-4061.4919 3926.0435 -4061.2407 3926.5791 -4061.7744 3926.8286 C
-4061.7295 3926.6274 -4061.8855 3926.3799 -4061.7 3926.2622 C
-4062.0576 3925.9692 -4062.8423 3925.6865 -4062.6377 3926.4229 C
-4061.9504 3925.7271 -4062.4775 3927.3604 -4061.9375 3926.8438 C
-4062.2273 3927.3232 -4062.5144 3927.1079 -4062.7881 3927.3223 C
-4062.5032 3926.9209 -4062.8545 3926.4126 -4063.2825 3926.2212 C
-4063.4688 3926.3398 -4063.9729 3926.2261 -4064.2825 3926.4209 C
-4064.1721 3926.8711 -4064.4417 3927.1289 -4063.9373 3927.2422 C
-4064.1223 3927.3604 -4064.4087 3927.4541 -4064.7295 3927.2227 C
-4064.6023 3927.1455 -4064.3799 3927.0894 -4064.3953 3926.9272 C
-4064.6023 3926.5127 -4064.8447 3926.5313 -4064.9785 3926.3545 C
-4065.0852 3926.3799 -4065.1929 3926.4019 -4065.2976 3926.4263 C
-4065.2664 3926.4648 -4065.2393 3926.5166 -4065.22 3926.5811 C
-4065.5745 3926.9785 L
-4065.1023 3926.7661 -4065.3562 3927.1865 -4065.3623 3927.4502 c
-4065.3496 3926.9229 -4065.6663 3927.3809 -4065.8279 3927.3984 C
-4065.4768 3927.9561 L
-4065.6465 3928.2349 -4066.0759 3927.5537 -4065.9873 3928.105 C
-4065.2424 3928.3262 -4064.9561 3928.2314 -4064.2825 3928.0654 C
-4064.5559 3927.6328 L
-4063.7959 3927.3267 -4064.0872 3928.375 -4063.2344 3928.3545 C
-4062.8799 3927.959 -4061.9519 3928.3267 -4061.9343 3927.5352 C
-4062.0413 3927.7764 -4061.4033 3928.2393 -4061.1111 3927.8809 C
-4060.7881 3927.1572 -4059.8113 3927.0596 -4060.1072 3926.7295 C
-4060.3711 3926.7207 -4060.7263 3927.1182 -4060.9385 3926.6475 C
-4060.4265 3926.4966 L
-4060.7625 3926.1021 L
-4060.5889 3926.2437 -4060.6057 3925.8584 -4060.6855 3925.2783 C
f
1 D
-4072.1455 3920.8389 m
-4072.1511 3920.8354 -4072.1584 3920.833 -4072.1653 3920.8286 C
-4072.1577 3920.8311 -4072.1504 3920.8311 -4072.1433 3920.8311 C
-4072.1455 3920.8389 L
f
*U
0 D
-4025.9968 3924.8311 m
-4025.8496 3924.6509 -4025.4856 3924.6807 -4025.5569 3924.2935 C
-4025.5481 3924.7192 -4026.2073 3924.3584 -4025.9968 3924.8311 C
f
-4025.5615 3925.248 m
-4025.5359 3925.1465 -4025.5537 3924.9829 -4025.3904 3924.9683 C
-4025.8401 3925.0767 L
-4025.5615 3925.248 L
f
-4025.1052 3928.1597 m
-4024.8733 3927.8423 -4024.7263 3927.6631 -4024.3623 3927.6919 C
-4024.2256 3928.7314 -4024.9583 3927.9824 -4025.1233 3928.9517 C
-4024.4561 3929.0493 -4024.2512 3928.1416 -4023.7024 3928.0537 C
-4023.9744 3927.6201 -4025.0852 3927.3701 -4025.1052 3928.1597 C
f
-4025.4016 3929.4736 m
-4025.0305 3929.2393 L
-4025.0671 3929.1782 L
-4025.4385 3929.4126 L
-4025.4016 3929.4736 L
f
-4033.4385 3920.4429 m
-4033.4719 3920.1182 -4033.7031 3920.4385 -4033.8271 3920.5166 C
-4033.7263 3920.5376 -4033.5852 3920.623 -4033.4385 3920.4429 C
f
-4106.3506 3920.105 m
-4109.1807 3920.4185 L
-4108.3662 3920.3369 -4107.6143 3920.2959 -4106.3506 3920.105 C
f
-4042.8313 3922.5664 m
-4042.0713 3922.2603 -4041.7336 3921.6997 -4040.9592 3921.5576 C
-4041.9775 3920.9033 -4042.3042 3922.5796 -4043.1592 3921.9092 C
-4042.8313 3922.5664 L
f
-4042.5632 3919.9751 m
-4042.4373 3920.5869 -4043.1497 3920.6919 -4043.0393 3921.1406 C
-4042.5271 3920.9912 -4042.8008 3920.5576 -4042.3359 3920.6104 C
-4042.5632 3919.9751 L
f
-4039.1191 3930.0889 m
-4039.3496 3930.4072 L
-4039.1641 3930.291 L
-4039.1191 3930.0889 L
f
-4046.0271 3920.5181 m
-4045.9431 3920.3799 L
-4046.3242 3920.1865 L
-4046.0271 3920.5181 L
f
-4045.8591 3920.2393 m
-4045.9431 3920.3799 L
-4045.9431 3920.3799 L
-4045.8591 3920.2393 L
f
-4039.4153 3931.4014 m
-4039.0728 3931.5313 L
-4038.9033 3931.2515 L
-4039.4153 3931.4014 L
f
-4042.4385 3928.1187 m
-4042.1321 3927.9229 L
-4042.1929 3927.9604 -4042.6121 3927.709 -4042.4385 3928.1187 C
f
-4048.3545 3920.2583 m
-4048.7273 3920.4932 L
-4048.6892 3920.5537 L
-4048.3176 3920.3188 L
-4048.3545 3920.2583 L
f
-4044.8369 3929.8057 m
-4044.6252 3930.2759 -4045.4482 3929.9326 -4045.0127 3930.3486 C
-4044.6252 3930.2759 -4044.7825 3930.0303 -4044.8369 3929.8057 C
f
-4049.3352 3926.6157 m
-4049.3855 3926.6157 -4049.4385 3926.6328 -4049.4895 3926.6851 C
-4049.4287 3926.665 -4049.3777 3926.6406 -4049.3352 3926.6157 C
f
-4049.3352 3926.6157 m
-4049.1729 3926.6157 -4049.0105 3926.7959 -4048.8992 3926.6597 C
-4049.1016 3926.4473 -4049.1753 3926.5269 -4049.3352 3926.6157 C
f
-4051.1953 3926.7256 m
-4051.0481 3926.7593 L
-4051.1985 3926.9912 -4051.1272 3926.957 -4050.9929 3926.7705 C
-4050.8369 3926.7544 -4050.8457 3926.6055 -4050.8271 3926.5039 C
-4050.7959 3926.4473 -4050.7649 3926.3853 -4050.7312 3926.3213 C
-4050.7793 3926.3809 -4050.8225 3926.4404 -4050.8591 3926.4912 C
-4051.1008 3926.4873 -4051.2483 3926.5103 -4051.1953 3926.7256 C
f
-4058.1052 3918.7998 m
-4057.5615 3918.9751 -4057.4209 3919.0596 -4057.4504 3919.4248 C
-4056.9343 3919.541 -4057.0144 3918.9126 -4056.7031 3918.7661 C
-4057.2871 3918.8369 -4057.4065 3918.6685 -4058.1052 3918.7998 C
f
-4056.7031 3918.7661 m
-4056.6377 3918.7593 -4056.5752 3918.7515 -4056.4993 3918.7373 C
-4056.5842 3918.7261 -4056.6472 3918.7412 -4056.7031 3918.7661 C
f
-4049.0212 3930.7173 m
-4049.3591 3931.2759 L
-4049.2351 3931.1982 L
-4049.0212 3930.7173 L
f
-4058.9121 3918.6157 m
-4058.8113 3918.6392 -4058.6497 3918.623 -4058.5703 3918.748 C
-4058.5413 3918.3809 -4059.0127 3918.5933 -4058.9121 3918.6157 c
f
-4056.8152 3925.7744 m
-4056.76 3925.998 -4056.4121 3925.8643 -4056.2705 3925.9502 C
-4056.4736 3925.9033 -4056.6392 3925.23 -4056.8152 3925.7744 C
f
-4060.4719 3920.1221 m
-4060.3711 3920.1455 -4060.2161 3920.3911 -4060.2832 3920.6934 C
-4060.1367 3920.5142 -4059.9385 3919.8701 -4060.4719 3920.1221 C
f
-4057.8088 3925.709 m
-4057.7312 3925.833 L
-4057.3591 3925.5977 L
-4057.8088 3925.709 L
f
-4056.4817 3931.1006 m
-4056.0632 3930.665 -4057.1455 3930.0493 -4056.4248 3929.6807 C
-4057.3545 3929.2246 -4056.3535 3930.2979 -4057.0393 3930.2271 C
-4056.6377 3930.374 -4056.4409 3930.9253 -4056.4817 3931.1006 C
f
-4057.0393 3930.2271 m
-4057.0977 3930.2041 -4057.1609 3930.1909 -4057.2295 3930.1895 C
-4057.1536 3930.21 -4057.0923 3930.2212 -4057.0393 3930.2271 C
f
-4062.9287 3927.4692 m
-4062.8679 3927.4238 -4062.8264 3927.374 -4062.7881 3927.3223 C
-4062.8359 3927.3584 -4062.8816 3927.4033 -4062.9287 3927.4692 C
f
-4059.2295 3930.5869 m
-4058.6023 3929.9326 L
-4059.0212 3930.3677 -4060.0752 3930.3413 -4060.0095 3930.9927 C
-4059.6682 3931.125 -4059.2576 3930.9517 -4059.0889 3930.6709 C
-4059.2295 3930.5869 L
f
-4066.4287 3918.7764 m
-4066.1577 3918.5181 L
-4066.4961 3918.4424 L
-4066.3992 3918.54 -4066.5745 3919.0181 -4066.4287 3918.7764 C
f
-4066.5615 3918.4287 m
-4066.4961 3918.4424 L
-4066.5105 3918.4263 -4066.5313 3918.4199 -4066.5615 3918.4287 C
f
-4061.7424 3927.1543 m
-4061.5398 3927.1997 -4061.3777 3927.1816 -4061.1929 3927.0664 C
-4061.2695 3926.9429 -4061.7744 3926.8286 -4061.7424 3927.1543 C
f
-4068.3369 3919.7236 m
-4067.8896 3919.6118 L
-4068.3777 3919.6597 L
-4068.3369 3919.7236 L
f
-4070.4241 3918.6157 m
-4070.5012 3918.4932 L
-4070.8721 3918.7271 L
-4070.7937 3918.8496 L
-4070.4241 3918.6157 L
f
-4067.6943 3931.4326 m
-4067.3911 3931.5024 -4067.1543 3930.917 -4067.2336 3930.7935 C
-4067.8215 3930.8188 L
-4067.6721 3931.3311 -4067.6584 3930.8037 -4067.3176 3930.9336 C
-4067.6943 3931.4326 L
f
-4085.9153 3919.5732 m
-4085.7839 3919.2314 -4085.1409 3919.4292 -4085.1072 3919.7544 C
-4085.1936 3919.8955 -4085.5422 3920.0303 -4085.3232 3920.2373 C
-4084.8145 3919.3975 L
-4084.1377 3919.9209 -4085.3289 3920.5015 -4085.6631 3920.7979 C
-4084.9736 3920.9063 -4084.7693 3920.3545 -4084.0359 3920.3574 C
-4084.2522 3920.2822 -4084.3889 3920.0728 -4084.5032 3919.8926 C
-4084.5281 3919.3013 -4083.8447 3919.563 -4083.3562 3919.5166 C
-4083.6672 3919.2598 -4083.4873 3919.0435 -4083.2607 3918.8115 C
-4083.22 3918.7935 -4083.1929 3918.7593 -4083.1736 3918.7192 C
-4083.1472 3918.6919 -4083.1223 3918.665 -4083.0967 3918.6367 C
-4083.1553 3918.6377 L
-4083.1511 3918.5713 -4083.1641 3918.4912 -4083.2063 3918.3809 C
-4083.6162 3918.5537 -4083.9297 3918.0596 -4084.1936 3918.0518 C
-4083.9329 3919.0132 -4085.0923 3918.2744 -4085.4241 3918.5703 C
-4085.8071 3918.665 L
-4085.9504 3918.667 L
-4085.9792 3918.5615 -4085.9385 3918.4292 -4085.72 3918.2393 C
-4085.9023 3918.4287 -4086.5105 3918.3623 -4086.4543 3918.6709 C
-4087.8423 3918.6846 L
-4087.8855 3918.6455 -4087.9287 3918.5967 -4087.9607 3918.5269 C
-4088.0088 3918.5879 -4088.0168 3918.6377 -4088.0105 3918.6865 C
-4094.0576 3918.748 L
-4093.7593 3918.8232 -4093.5012 3919.0435 -4093.1936 3919.1494 C
-4093.6553 3919.7876 -4092.6892 3919.2646 -4092.8247 3919.8677 C
-4093.0322 3920.0869 -4093.3359 3920.0181 -4093.5168 3919.8716 C
-4093.5842 3920.1763 -4093.3264 3920.4463 -4093.3562 3920.8101 C
-4092.5935 3921.1934 -4092.4768 3919.7349 -4091.7312 3919.957 C
-4091.7607 3920.3223 -4091.9912 3920.6416 -4091.5032 3920.5923 C
-4091.6272 3920.6709 L
-4090.8457 3920.2622 -4091.0183 3921.4966 -4090.5264 3920.4951 C
-4090.5393 3921.0225 L
-4090.1848 3920.625 -4089.4951 3920.6221 -4089.1064 3920.5493 C
-4089.1296 3920.6509 L
-4088.0393 3920.0479 -4088.5176 3920.5225 -4087.2932 3920.2705 C
-4087.8567 3920.8853 L
-4087.4343 3921.1396 -4087.3391 3920.4712 -4087.0359 3920.54 C
-4087.0576 3920.6416 -4086.9873 3921.0269 -4087.2737 3921.123 C
-4085.7881 3920.1851 L
-4085.4336 3919.7876 -4085.8601 3919.7979 -4085.9153 3919.5732 C
f
-4084.0359 3920.3574 m
-4083.9573 3920.3853 -4083.8679 3920.3975 -4083.7625 3920.3774 C
-4083.8643 3920.3604 -4083.9519 3920.3574 -4084.0359 3920.3574 C
f
-4094.4824 3918.7524 m
-4094.0576 3918.748 L
-4094.1892 3918.7158 -4094.3264 3918.7061 -4094.4824 3918.7524 C
f
-4081.9065 3919.2061 m
-4082.1641 3918.9336 -4081.7136 3918.8247 -4081.6687 3918.6221 C
-4082.5913 3918.6318 L
-4082.5872 3918.8354 -4082.6785 3919.0625 -4082.6599 3919.248 C
-4081.9065 3919.2061 L
f
-4082.8584 3918.249 m
-4082.8896 3918.3896 -4082.9873 3918.5166 -4083.0967 3918.6367 C
-4082.5913 3918.6318 L
-4082.5945 3918.479 -4082.6511 3918.3408 -4082.8584 3918.249 C
f
-4082.7607 3929.0894 m
-4082.9241 3929.1079 L
-4083.1711 3929.2646 L
-4082.7607 3929.0894 L
f
-4085.3152 3928.1963 m
-4085.1201 3928.5044 -4084.75 3928.2705 -4084.6262 3928.1924 C
-4085.0527 3928.2017 -4084.8679 3928.0854 -4085.3152 3928.1963 C
f
-4084.7881 3931.4966 m
-4085.1992 3931.6709 L
-4085.1609 3931.7314 L
-4084.7881 3931.4966 L
f
-4097.6221 3920.8281 m
-4097.6895 3920.8398 -4097.7549 3920.8486 -4097.8232 3920.8623 C
-4097.7314 3920.8643 -4097.6709 3920.8496 -4097.6221 3920.8281 C
f
-4094.0945 3920.3252 m
-4095.0752 3919.7334 -4093.4519 3919.833 -4093.76 3919.0752 C
-4094.2937 3919.3262 L
-4094.2483 3919.123 L
-4094.8992 3919.1895 L
-4094.7656 3919.5376 -4094.6653 3919.5591 -4094.6943 3919.9248 C
-4095.5632 3919.7822 -4094.9683 3919.4912 -4095.6057 3919.0303 C
-4096.5771 3919.0967 L
-4096.498 3918.9873 L
-4096.5801 3918.9951 -4096.6162 3919.041 -4096.6445 3919.1006 C
-4099.917 3919.3281 L
-4100.5127 3919.6182 -4099.5879 3919.9854 -4100.0273 3920.5225 C
-4099.3369 3920.521 -4098.3115 3920.9102 -4098.2529 3920.1816 C
-4098.2759 3920.2822 -4098.3213 3920.4829 -4098.1816 3920.5688 C
-4097.7822 3919.9692 L
-4098.1631 3919.7783 L
-4097.7617 3919.1807 -4096.4658 3919.3135 -4096.2314 3919.6846 C
-4096.9683 3919.8887 -4096.5986 3920.6084 -4097.625 3920.2173 C
-4097.5791 3920.4019 -4097.3911 3920.7271 -4097.6221 3920.8281 C
-4096.4189 3920.6157 -4095.3408 3920.9478 -4094.0945 3920.3252 C
f
-4106.1631 3920.6763 m
-4106.1533 3920.6104 L
-4106.1753 3920.6455 -4106.1826 3920.6719 -4106.1631 3920.6763 C
f
-4105.7593 3920.7661 m
-4105.1729 3920.0518 L
-4106.0869 3920.1094 L
-4106.1533 3920.6104 L
-4106.0728 3920.4829 -4105.752 3920.2295 -4105.6279 3920.4253 C
-4105.7593 3920.7661 L
f
-4104.4922 3919.6201 m
-4104.9639 3919.833 -4104.9385 3920.4229 -4104.6807 3920.6919 C
-4105.1143 3920.9648 -4104.9097 3920.0576 -4105.208 3920.6807 C
-4105.1982 3921.1064 -4104.6641 3920.8564 -4104.541 3920.7783 C
-4104.4922 3919.6201 L
f
-4101.0078 3919.9307 m
-4101.1406 3920.1753 L
-4100.8135 3920.2393 L
-4101.0078 3919.9307 L
f
-4101.1406 3920.1753 m
-4101.4658 3920.1094 L
-4101.4434 3920.291 -4101.4209 3920.4683 -4101.3682 3920.5923 C
-4101.1406 3920.1753 L
f
-4102.3174 3919.9395 m
-4102.4551 3919.8955 -4102.6074 3919.8623 -4102.792 3919.8462 C
-4102.3174 3919.9395 L
f
-4101.9463 3920.0894 m
-4101.957 3920.0127 L
-4102.3174 3919.9395 L
-4102.1846 3919.9854 -4102.0654 3920.0356 -4101.9463 3920.0894 C
f
-4101.4658 3920.1094 m
-4101.5186 3919.6963 -4101.5801 3919.2622 -4102.0498 3919.3774 C
-4101.957 3920.0127 L
-4101.4658 3920.1094 L
f
-4087.7783 3930.874 m
-4088.1497 3931.1079 L
-4088.1104 3931.1719 L
-4087.7393 3930.9375 L
-4087.7783 3930.874 L
f
-4089.9209 3930.4966 m
-4090.0127 3930.5688 -4090.0823 3930.6455 -4090.1455 3930.7236 C
-4090.0488 3930.6782 -4089.9719 3930.6094 -4089.9209 3930.4966 C
f
-4091.5137 3933.3188 m
-4091.9504 3932.9033 -4090.9111 3932.7695 -4091.72 3932.5854 C
-4091.7913 3932.1982 -4091.4121 3931.6992 -4091.0313 3931.8916 C
-4091.0615 3932.2559 -4091.4023 3932.125 -4091.1682 3932.4966 C
-4090.9153 3932.0752 -4090.8191 3932.3623 -4090.9072 3931.8135 C
-4090.4817 3931.4712 -4090.4343 3931.0811 -4090.1455 3930.7236 C
-4090.6599 3930.9648 -4091.74 3930.4019 -4092.3928 3931.1064 C
-4092.7527 3931.7661 -4092.5344 3932.667 -4092.5359 3933.6201 C
-4092.4817 3933.8438 -4091.5488 3933.9502 -4091.5137 3933.3188 C
f
-4090.8264 3934.2705 m
-4090.6243 3934.3174 -4090.5625 3934.2793 -4090.4385 3934.1997 C
-4090.4719 3933.874 -4090.6631 3934.2559 -4090.8264 3934.2705 C
f
-4095.4719 3927.0942 m
-4095.5105 3927.2295 -4095.8762 3927.3975 -4095.7976 3927.6318 C
-4095.2432 3927.4604 L
-4095.3733 3927.4385 -4095.4192 3927.2725 -4095.4719 3927.0942 C
f
-4095 3927.3877 m
-4095.2432 3927.4604 L
-4095.1824 3927.4727 -4095.1072 3927.4541 -4095 3927.3877 C
f
-4095.4983 3927.0093 m
-4095.4895 3927.0376 -4095.4817 3927.0664 -4095.4719 3927.0942 C
-4095.4641 3927.0654 -4095.4656 3927.0356 -4095.4983 3927.0093 C
f
-4103.6631 3919.7017 m
-4103.6553 3919.4404 -4103.9023 3919.5967 -4104.0264 3919.6743 C
-4103.9258 3919.6963 -4103.7842 3919.7822 -4103.6631 3919.7017 C
f
-4112.9639 3920.7314 m
-4113.1826 3920.5225 L
-4113.1055 3920.6475 -4113.0654 3920.709 -4112.9639 3920.7314 C
f
-4116.3281 3927.8765 m
-4116.334 3927.9272 -4116.3506 3927.9692 -4116.3721 3928.0093 C
-4116.3506 3927.9771 -4116.335 3927.9336 -4116.3281 3927.8765 c
f
-4116.3721 3928.0093 m
-4116.5215 3928.2271 -4116.9814 3927.8887 -4117.1475 3928.2192 C
-4117.126 3928.1187 L
-4117.4346 3928.3145 L
-4117.1455 3928.2856 -4116.5391 3928.3267 -4116.3721 3928.0093 C
f
U
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 40)
0 A
u
0 J 0 j 1 w 4 M []0 d
0 XR
-7988.4521 7805.5977 m
-7596.6909 7805.5977 L
-7596.6909 7713.9082 L
-7988.4521 7713.9082 L
-7988.4521 7805.5977 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
1 XR
-7601.3535 7747.9209 m
-7603.1113 7747.9209 -7722.7817 7750.0918 -7798.6519 7751.4717 C
-7819.4663 7750.5352 -7840.2529 7749.2227 -7861.0547 7747.502 C
-7863.5327 7747.1514 -7866.3472 7746.7949 -7867.8584 7746.6006 c
-7868.7114 7746.4863 -7869.5732 7746.3857 -7870.4375 7746.293 C
-7869.9829 7746.0605 -7869.54 7745.7998 -7869.1167 7745.4941 C
-7868.25 7744.7324 -7867.3955 7743.832 -7866.8735 7742.4541 C
-7866.8979 7742.1689 -7866.6997 7741.8193 -7866.6523 7741.5293 c
-7866.5532 7740.9121 -7866.6382 7740.1631 -7866.7319 7739.627 c
-7866.7939 7739.2725 -7866.9551 7739.0254 -7867.0259 7738.7314 c
-7867.0488 7738.6348 -7866.9785 7738.5762 -7867.0059 7738.502 c
-7867.1396 7738.1484 -7867.5313 7737.5518 -7867.7539 7737.2266 c
-7867.8579 7737.0762 -7867.9873 7736.9775 -7868.1035 7736.8193 c
-7868.1196 7736.7969 -7868.0669 7736.7354 -7868.0928 7736.7061 c
-7868.6484 7736.0664 -7869.4312 7735.541 -7870.3955 7735.0762 c
-7870.4546 7735.0508 -7870.4639 7735.1445 -7870.5366 7735.0869 C
-7870.8213 7734.9658 -7871.1143 7734.8535 -7871.3945 7734.791 c
-7872.8965 7734.4629 -7874.7163 7734.8477 -7875.8027 7735.6328 c
-7876.7998 7736.3555 -7877.5308 7737.8623 -7877.4678 7739.0742 c
-7877.4126 7740.1094 -7876.6665 7741.2578 -7875.4458 7742.0352 c
-7874.3604 7742.7295 -7873.0479 7742.9834 -7872.2373 7742.3594 C
-7872.6499 7742.2295 -7872.9688 7742.0332 -7873.0811 7741.7529 C
-7873.0908 7741.4766 -7873.0967 7741.1992 -7872.8755 7740.8594 C
-7872.4517 7740.4863 -7871.7925 7740.248 -7871.1235 7740.7158 c
-7870.1846 7741.3701 -7870.0728 7742.7891 -7871.0342 7743.5361 C
-7871.3086 7743.6406 -7871.5586 7743.8789 -7871.75 7743.9834 c
-7872.1826 7744.2188 -7872.5586 7744.3857 -7872.9751 7744.543 c
-7874.0938 7744.959 -7875.4839 7745.418 -7876.5327 7745.5977 c
-7876.7114 7745.6289 -7876.8989 7745.6475 -7877.0806 7745.6738 C
-7880.4038 7745.3789 -7883.54 7745.0693 -7886.1416 7744.5264 C
-7886.1138 7744.5234 -7886.0908 7744.5244 -7886.0586 7744.5205 c
-7885.2378 7744.4199 -7884.6309 7744.2529 -7883.9043 7744.0137 c
-7883.6328 7743.9238 -7883.3184 7743.9121 -7883.0825 7743.8154 c
-7882.9985 7743.7852 -7882.9409 7743.6602 -7882.8472 7743.6133 c
-7882.5371 7743.4609 -7882.2129 7743.3662 -7881.8999 7743.1602 c
-7880.9097 7742.5059 -7879.8774 7741.3359 -7879.7617 7739.8682 C
-7879.9463 7738.8262 -7880.3643 7737.8525 -7881.5938 7737.0781 c
-7881.7217 7736.9961 -7881.8662 7736.96 -7881.9995 7736.8828 C
-7883.8516 7736.2168 -7885.5913 7737.3135 -7885.8066 7739.2061 C
-7885.7119 7739.375 -7885.6499 7739.5527 -7885.6616 7739.752 C
-7885.2939 7740.4492 -7883.9033 7741.0557 -7883.3057 7740.6143 C
-7883.6133 7740.5566 -7883.7495 7740.5254 -7883.8638 7740.2637 C
-7883.8892 7739.6074 -7883.0679 7739.4336 -7882.6528 7740.0176 C
-7882.4966 7740.7021 -7882.7676 7741.2529 -7883.2939 7741.8105 c
-7883.5068 7742.0361 -7883.7837 7742.1689 -7884.0566 7742.3545 c
-7884.4199 7742.6016 -7884.7495 7742.8828 -7885.1118 7743.0332 c
-7885.4385 7743.1689 -7885.8115 7743.2012 -7886.1445 7743.2891 c
-7886.2349 7743.3105 -7886.2969 7743.3613 -7886.3706 7743.3789 c
-7886.6274 7743.4336 -7886.8359 7743.5146 -7887.0879 7743.5469 c
-7887.4209 7743.585 -7887.7739 7743.5488 -7888.1528 7743.585 c
-7888.3398 7743.6055 -7888.5195 7743.6953 -7888.7144 7743.7109 c
-7888.8413 7743.7207 -7888.9722 7743.7207 -7889.1025 7743.7227 C
-7891.8135 7742.8213 -7894.0957 7741.6094 -7895.9814 7739.2793 c
-7899.6704 7734.7227 -7894.0415 7730.5566 -7892.9902 7734.5977 C
-7894.9668 7736.0361 -7898.5874 7739.1201 -7890.8892 7739.2471 C
-7882.6045 7737.7549 -7889.6982 7722.4922 -7899.6509 7726.5576 c
-7908.0151 7729.9746 -7904.1328 7738.6387 -7898.4658 7742.293 c
-7889.9902 7747.7559 -7880.5376 7748.4922 -7870.7012 7748.584 C
-7881.3862 7753.0488 -7895.9243 7750.4033 -7903.9897 7742.3809 c
-7908.1011 7738.293 -7912.0435 7731.9912 -7910.8193 7725.8896 c
-7909.5742 7719.6816 -7903.1616 7725.4238 -7908.0957 7725.4424 C
-7907.8896 7731.0059 -7894.6387 7724.9648 -7900.9307 7716.8281 c
-7906.6011 7709.4922 -7916.5698 7717.5225 -7918.3242 7723.9482 c
-7924.0239 7744.8359 -7894.3545 7750.7129 -7880.3813 7751.4238 C
-7892.1143 7754.7754 -7908.3892 7752.2734 -7919.5547 7747.7852 c
-7923.9663 7746.0098 -7928.9707 7742.8926 -7931.5479 7738.7773 c
-7935.4619 7732.5264 -7928.4268 7728.2842 -7927.8955 7730.4033 c
-7927.4697 7732.0957 -7933.3765 7732.623 -7928.8267 7735.6992 c
-7924.8091 7738.418 -7921.2759 7732.209 -7920.4619 7729.0781 c
-7916.6782 7714.5322 -7938.0601 7716.4609 -7940.3667 7730.1982 c
-7945.5103 7760.8271 -7899.3071 7754.457 -7883.4902 7753.5928 C
-7883.7124 7753.7617 -7883.9331 7753.9189 -7884.1543 7754.082 C
-7889.4346 7755.585 -7894.6416 7757.7861 -7899.46 7760.5469 C
-7913.9546 7762.2813 -7926.7495 7751.8906 -7942.5913 7746.6152 c
-7951.5635 7743.6289 -7962.0933 7747.9277 -7970.2778 7743.3145 c
-7974.6235 7740.8545 -7977.6982 7738.2656 -7979.2959 7733.0518 C
-7980.9092 7724.1104 -7971.2979 7722.9717 -7973.1396 7727.6416 C
-7974.8428 7727.9688 -7974.1772 7726.834 -7975.3354 7726.8418 C
-7979.2861 7730.5479 -7971.0244 7735.7314 -7967.1606 7732.4316 c
-7960.4497 7726.7031 -7965.2563 7718.332 -7972.0864 7716.0557 C
-7990.5703 7716.25 -7991 7738.8613 -7985.0474 7751.3594 c
-7969.2217 7784.585 -7935.1445 7772.582 -7907.5376 7765.5479 C
-7911.2817 7768.0732 -7913.8975 7771.6426 -7916.5747 7775.2158 c
-7921.2197 7781.416 -7923.6694 7790.8545 -7915.0024 7794.8613 C
-7914.1616 7798.9834 -7912.6392 7802.8857 -7908.5669 7804.7695 c
-7903.7471 7807 -7898.8457 7804.5586 -7897.5508 7799.4512 C
-7897.4766 7796.6729 -7898.1968 7794.8262 -7900.5938 7793.3887 c
-7902.1733 7792.4414 -7907.5176 7792.5313 -7904.8574 7795.5342 C
-7902.9663 7794.041 -7903.1323 7796.4873 -7904.0112 7797.6006 C
-7906.8823 7797.5693 -7907.5771 7795.4873 -7907.5156 7792.5186 c
-7907.5151 7792.4961 -7907.5142 7792.4697 -7907.5146 7792.4434 C
-7907.3574 7785.1367 -7906.1343 7779.3242 -7904.0718 7774.7285 C
-7904.0713 7774.7305 -7904.0708 7774.7314 -7904.0698 7774.7324 c
-7903.8242 7775.2158 -7903.4819 7775.5 -7903.2485 7775.8945 c
-7903.1729 7776.0234 -7903.2495 7776.1387 -7903.1753 7776.2334 c
-7902.8262 7776.6855 -7901.9971 7777.3701 -7901.5313 7777.7402 c
-7901.3135 7777.9121 -7901.0835 7777.998 -7900.8477 7778.1729 c
-7900.8125 7778.1973 -7900.8613 7778.3105 -7900.8115 7778.3418 c
-7899.7256 7779.0176 -7898.3638 7779.4277 -7896.7661 7779.6709 C
-7896.6699 7779.6816 -7896.6978 7779.543 -7896.5669 7779.5938 C
-7896.1035 7779.6406 -7895.6309 7779.6738 -7895.1982 7779.6387 c
-7892.8862 7779.4453 -7890.4316 7778.084 -7889.2129 7776.4668 c
-7888.0942 7774.9854 -7887.7095 7772.4854 -7888.3379 7770.7646 c
-7888.8774 7769.2949 -7890.4629 7767.9697 -7892.5684 7767.3906 c
-7894.4419 7766.873 -7896.4492 7767.084 -7897.3408 7768.3477 C
-7896.6875 7768.3535 -7896.1406 7768.4941 -7895.8545 7768.8477 C
-7895.7178 7769.2422 -7895.5859 7769.6387 -7895.7539 7770.2266 C
-7896.2002 7770.9541 -7897.0469 7771.5898 -7898.2178 7771.2129 c
-7899.4604 7770.8135 -7900.2119 7769.5781 -7900.0532 7768.3486 C
-7894.7505 7762.2031 -7887.0386 7759.6465 -7878.2539 7759.0537 C
-7878.2886 7759.0684 -7878.3218 7759.0801 -7878.3604 7759.0977 c
-7879.5015 7759.6064 -7880.3027 7760.1143 -7881.2437 7760.7832 c
-7881.5957 7761.0332 -7882.0439 7761.1914 -7882.3428 7761.4316 c
-7882.4492 7761.5166 -7882.4766 7761.7227 -7882.5913 7761.8301 c
-7882.9707 7762.1895 -7883.3975 7762.4688 -7883.7563 7762.9063 c
-7884.8945 7764.2891 -7885.8662 7766.4346 -7885.3809 7768.6016 C
-7884.6523 7770.0234 -7883.6162 7771.2441 -7881.4995 7771.8145 c
-7881.2788 7771.875 -7881.0542 7771.8633 -7880.8276 7771.918 C
-7877.8613 7772.0537 -7875.8369 7769.7021 -7876.3667 7766.875 C
-7876.5781 7766.6738 -7876.7471 7766.4434 -7876.8184 7766.1514 C
-7877.6582 7765.3105 -7879.9336 7765.0508 -7880.5996 7765.9521 C
-7880.1309 7765.9004 -7879.9199 7765.8848 -7879.6387 7766.2109 C
-7879.3105 7767.1475 -7880.4189 7767.7617 -7881.2759 7767.1045 C
-7881.8052 7766.1865 -7881.6587 7765.2695 -7881.1479 7764.2314 c
-7880.9409 7763.8105 -7880.5991 7763.5 -7880.2881 7763.1104 c
-7879.8735 7762.5938 -7879.5239 7762.041 -7879.0669 7761.6621 c
-7878.6563 7761.3232 -7878.1318 7761.1094 -7877.6899 7760.8369 c
-7877.5708 7760.7646 -7877.5039 7760.6641 -7877.4043 7760.6074 c
-7877.0596 7760.4121 -7876.7935 7760.2031 -7876.4438 7760.0469 c
-7875.9819 7759.8418 -7875.4561 7759.7373 -7874.9253 7759.5146 c
-7874.6636 7759.4063 -7874.4443 7759.1953 -7874.1709 7759.085 c
-7874.0063 7759.0215 -7873.8311 7758.9688 -7873.6592 7758.9141 C
-7872.2695 7758.918 -7870.8613 7758.957 -7869.4375 7759.0342 c
-7867.7285 7759.0801 -7865.4653 7759.0938 -7863.5728 7759.166 C
-7831.4688 7755.6533 -7798.98 7754.7305 -7766.4746 7754.2822 C
-7693.0664 7755.6152 -7602.8774 7757.248 -7601.3535 7757.248 c
-7598.7773 7757.248 -7596.6909 7755.1602 -7596.6909 7752.584 c
-7596.6909 7750.0078 -7598.7773 7747.9209 -7601.3535 7747.9209 c
f
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Chalk - Scribble/ A) -
(dobe ArtOnPath Brush Tool/ Floral Stem/ Adobe PatternOnPath Br) -
(ush Tool/ Decorative Border/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Chalk - Scribble)
(1 / Unnamed 3/ / / / / 5 0 0 0 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Floral Stem)
(1 / Unnamed Brush Pat 40/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(Decorative Border)
(1 / New Pattern 1/ / New Pattern 2/ / / 5 0 0.00392157 0.00392) -
(157 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
(White)
Pc
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
(Black)
Pc
0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
(CMYK Red)
Pc
0.038819 0.000031 0.932555 0.000031 1 0.94902 0 Xa
(CMYK Yellow)
Pc
0.827542 0.064729 0.957824 0.002594 0 0.65098 0.317647 Xa
(CMYK Green)
Pc
0.693446 0.140078 0.000031 0.000031 0 0.682353 0.937255 Xa
(CMYK Cyan)
Pc
0.991302 0.965484 0.034943 0.005005 0.180392 0.192157 0.572549 Xa
(CMYK Blue)
Pc
0.006653 0.990021 0.005615 0.000031 0.92549 0 0.54902 Xa
(CMYK Magenta)
Pc
0.178103 1 0.910002 0.077974 0.745098 0.117647 0.176471 Xa
(C=15 M=100 Y=90 K=10)
Pc
0.000031 0.897398 0.84744 0.000031 0.937255 0.254902 0.211765 Xa
(C=0 M=90 Y=85 K=0)
Pc
0.000031 0.79855 0.939544 0.000092 0.945098 0.352941 0.160784 Xa
(C=0 M=80 Y=95 K=0)
Pc
0.000732 0.495003 0.984894 0.000031 0.968627 0.580392 0.117647 Xa
(C=0 M=50 Y=100 K=0)
Pc
0.000031 0.349462 0.845243 0.000031 0.984314 0.690196 0.25098 Xa
(C=0 M=35 Y=85 K=0)
Pc
0.05594 0.000031 0.899687 0.000031 0.976471 0.929412 0.196078 Xa
(C=5 M=0 Y=90 K=0)
Pc
0.197513 0.001373 0.983734 0.000031 0.843137 0.87451 0.137255 Xa
(C=20 M=0 Y=100 K=0)
Pc
0.49723 0.00293 0.989471 0.000031 0.552941 0.776471 0.247059 Xa
(C=50 M=0 Y=100 K=0)
Pc
0.746151 0.000031 0.99704 0.000092 0.223529 0.709804 0.290196 Xa
(C=75 M=0 Y=100 K=0)
Pc
0.861662 0.165713 1 0.032532 0 0.580392 0.266667 Xa
(C=85 M=10 Y=100 K=10)
Pc
0.902037 0.334844 0.976532 0.260471 0 0.407843 0.219608 Xa
(C=90 M=30 Y=95 K=30)
Pc
0.750637 0.000031 0.748928 0.000031 0.168627 0.713726 0.45098 Xa
(C=75 M=0 Y=75 K=0)
Pc
0.788235 0.104707 0.45008 0.000885 0 0.654902 0.615686 Xa
(C=80 M=10 Y=45 K=0)
Pc
0.702144 0.15375 0.000031 0.000031 0.152941 0.666667 0.882353 Xa
(C=70 M=15 Y=0 K=0)
Pc
0.848356 0.500084 0.000031 0.000031 0.109804 0.458824 0.737255 Xa
(C=85 M=50 Y=0 K=0)
Pc
0.993927 0.930846 0.059907 0.003601 0.168627 0.223529 0.564706 Xa
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.301427 0.214023 0.14902 0.133333 0.384314 Xa
(C=100 M=100 Y=25 K=25)
Pc
0.745205 0.985168 0.0094 0.002289 0.4 0.176471 0.568627 Xa
(C=75 M=100 Y=0 K=0)
Pc
0.501945 0.992706 0.014649 0.00116 0.572549 0.152941 0.560784 Xa
(C=50 M=100 Y=0 K=0)
Pc
0.360327 1 0.353826 0.089052 0.619608 0.121569 0.388235 Xa
(C=35 M=100 Y=35 K=10)
Pc
0.092134 0.99704 0.484413 0.004273 0.854902 0.109804 0.360784 Xa
(C=10 M=100 Y=50 K=0)
Pc
0.000031 0.946166 0.204593 0.000031 0.933333 0.164706 0.482353 Xa
(C=0 M=95 Y=20 K=0)
Pc
0.251163 0.245762 0.398383 0.000031 0.760784 0.709804 0.607843 Xa
(C=25 M=25 Y=40 K=0)
Pc
0.391943 0.442054 0.491554 0.061463 0.607843 0.521569 0.47451 Xa
(C=40 M=45 Y=50 K=5)
Pc
0.514702 0.509239 0.616327 0.227451 0.447059 0.4 0.345098 Xa
(C=50 M=50 Y=60 K=25)
Pc
0.549706 0.600061 0.645899 0.398749 0.34902 0.290196 0.258824 Xa
(C=55 M=60 Y=65 K=40)
Pc
0.233463 0.391485 0.638086 0.01416 0.768627 0.603922 0.423529 Xa
(C=25 M=40 Y=65 K=0)
Pc
0.304051 0.497078 0.750851 0.094057 0.662745 0.486275 0.313726 Xa
(C=30 M=50 Y=75 K=10)
Pc
0.358953 0.60058 0.803098 0.236179 0.545098 0.368627 0.235294 Xa
(C=35 M=60 Y=80 K=25)
Pc
0.392248 0.642969 0.886656 0.354772 0.458824 0.298039 0.160784 Xa
(C=40 M=65 Y=90 K=35)
Pc
0.418647 0.692348 0.974792 0.488502 0.376471 0.223529 0.07451 Xa
(C=40 M=70 Y=100 K=50)
Pc
0.516899 0.701045 0.792386 0.691859 0.235294 0.141176 0.082353 Xa
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Fade to Black)
Pc
Bb
0 0 0 0 Bh
2 (Super Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Super Soft Black Vignette)
Pc
Bb
2 (Green, Yellow, Orange) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Green, Yellow, Orange)
Pc
Bb
0 0 0 0 Bh
2 (Purple Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Purple Radial)
Pc
(Laguna) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Laguna)
Pc
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
(C=0 M=0 Y=0 K=100)
Pc
0.677577 0.618402 0.58056 0.456641 0.254902 0.25098 0.258824 Xa
(C=0 M=0 Y=0 K=90)
Pc
0.638788 0.555108 0.526177 0.275181 0.345098 0.34902 0.356863 Xa
(C=0 M=0 Y=0 K=80)
Pc
0.583215 0.494575 0.46363 0.148043 0.427451 0.431373 0.443137 Xa
(C=0 M=0 Y=0 K=70)
Pc
0.522423 0.426978 0.407874 0.062379 0.501961 0.509804 0.521569 Xa
(C=0 M=0 Y=0 K=60)
Pc
0.450904 0.360815 0.34818 0.01294 0.576471 0.584314 0.596078 Xa
(C=0 M=0 Y=0 K=50)
Pc
0.36173 0.282292 0.271336 0.000031 0.654902 0.662745 0.67451 Xa
(C=0 M=0 Y=0 K=40)
Pc
0.264164 0.199466 0.195499 0.000031 0.737255 0.745098 0.752941 Xa
(C=0 M=0 Y=0 K=30)
Pc
0.169863 0.120485 0.123751 0.000031 0.819608 0.827451 0.831373 Xa
(C=0 M=0 Y=0 K=20)
Pc
0.08426 0.057374 0.057435 0.000031 0.901961 0.905882 0.909804 Xa
(C=0 M=0 Y=0 K=10)
Pc
0.040528 0.02359 0.026154 0.000031 0.945098 0.94902 0.94902 Xa
(C=0 M=0 Y=0 K=5)
Pc
0.004456 0.991424 0.973236 0.000946 0.929412 0.109804 0.141176 Xa
(C=0 M=100 Y=100 K=0)
Pc
0.001678 0.745113 0.986419 0.000305 0.94902 0.396078 0.133333 Xa
(C=0 M=75 Y=100 K=0)
Pc
0.017365 0.087495 0.969451 0.000031 1 0.870588 0.090196 Xa
(C=0 M=10 Y=95 K=0)
Pc
0.838437 0.093416 0.997711 0.007263 0 0.631373 0.294118 Xa
(C=85 M=10 Y=100 K=0)
Pc
0.995392 0.873075 0.030457 0.001434 0.129412 0.25098 0.603922 Xa
(C=100 M=90 Y=0 K=0)
Pc
0.594476 0.896818 0.000031 0.000122 0.498039 0.247059 0.596078 Xa
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Grid) Ln
0 A
0 J 0 j 1 w 10 M []0 d
0 XR

0 7807 m
0 -8576 L
(N) *
15 7807 m
15 -8576 L
(N) *
80 7807 m
80 -8576 L
(N) *
110 7807 m
110 -8576 L
(N) *
175 7807 m
175 -8576 L
(N) *
205 7807 m
205 -8576 L
(N) *
270 7807 m
270 -8576 L
(N) *
300 7807 m
300 -8576 L
(N) *
365 7807 m
365 -8576 L
(N) *
395 7807 m
395 -8576 L
(N) *
460 7807 m
460 -8576 L
(N) *
490 7807 m
490 -8576 L
(N) *
555 7807 m
555 -8576 L
(N) *
585 7807 m
585 -8576 L
(N) *
650 7807 m
650 -8576 L
(N) *
680 7807 m
680 -8576 L
(N) *
745 7807 m
745 -8576 L
(N) *
775 7807 m
775 -8576 L
(N) *
840 7807 m
840 -8576 L
(N) *
870 7807 m
870 -8576 L
(N) *
935 7807 m
935 -8576 L
(N) *
965 7807 m
965 -8576 L
(N) *
1030 7807 m
1030 -8576 L
(N) *
1060 7807 m
1060 -8576 L
(N) *
1125 7807 m
1125 -8576 L
(N) *
1140 7807 m
1140 -8576 L
(N) *
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
